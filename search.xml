<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>浏览器护眼插件</title>
      <link href="/%E5%B7%A5%E5%85%B7/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%A4%E7%9C%BC%E6%8F%92%E4%BB%B6/"/>
      <url>/%E5%B7%A5%E5%85%B7/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%A4%E7%9C%BC%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>插件名：夜间模式</p><p>官方网站：<a href="https://nightshiftmode.com/how-it-works#pin-extension-to-the-dashboard">https://nightshiftmode.com/how-it-works#pin-extension-to-the-dashboard</a></p><p>插件内置的护眼色比较刺眼。</p><p>换了几个护眼色，参考链接：<a href="https://www.qulaba.com/1053.html">https://www.qulaba.com/1053.html</a></p><p>使用效果：</p><p><img src="/%E5%B7%A5%E5%85%B7/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%A4%E7%9C%BC%E6%8F%92%E4%BB%B6/image.png" alt="灰色"></p><p><img src="/%E5%B7%A5%E5%85%B7/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%A4%E7%9C%BC%E6%8F%92%E4%BB%B6/image-1.png" alt="绿色"></p>]]></content>
      
      
      <categories>
          
          <category> 杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 护眼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CXL技术</title>
      <link href="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CXL%E6%8A%80%E6%9C%AF/"/>
      <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CXL%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="cxl技术"><a class="markdownIt-Anchor" href="#cxl技术"></a> CXL技术</h1><p><a href="https://mp.weixin.qq.com/s/T1l177Sneiyni_QCmi4wBA">https://mp.weixin.qq.com/s/T1l177Sneiyni_QCmi4wBA</a></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于SSD</title>
      <link href="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8ESSD/"/>
      <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8ESSD/</url>
      
        <content type="html"><![CDATA[<h1 id="关于ssd"><a class="markdownIt-Anchor" href="#关于ssd"></a> 关于SSD</h1><p><a href="https://mp.weixin.qq.com/s/T1l177Sneiyni_QCmi4wBA">https://mp.weixin.qq.com/s/T1l177Sneiyni_QCmi4wBA</a></p><span id="more"></span><p><strong>引言</strong></p><p>在当前分布式工作流程中，对于边缘、数据中心和云端生成的数据，通过网络或云进行聚合和共享的工作流程、AI和ML引擎以及应用程序变得至关重要。随着云计算和边缘设备的广泛应用，以及大量数据驱动型员工在偏远地区工作，这种需求变得更加迫切。</p><p>随着数据集的不断增长和数据驱动型洞察应用程序的增加，我们需要持续关注并消除阻碍数据有效利用的障碍。尽管大多数创新都是单一供应商技术的渐进性进步，但偶尔也会出现一次巨大的飞跃，多种技术汇聚在一起解决一个问题。</p><p>我们的行业正处于数据路径性能进步的关键时刻。随着AI、ML和数据分析应用程序的兴起，时机已经成熟。现在，我们将见证通信、存储和计算技术融合如何催生一种新型存储架构，为数据密集型、分布式应用程序的发展扫清障碍，铺就未来之路。</p><p><strong>NAS性能的演进</strong></p><p>回顾过去，RAID控制器曾是性能提升的障碍。但随着NVMe和PCIe的引入，基于NVMe的直接连接存储系统成功地将RAID控制器从数据路径中剔除。</p><p>然而，在共享存储环境中，要充分利用底层SSD的性能仍面临较大挑战。对于共享存储的使用场景，高性能的纠错编码至关重要，它能有效保护数据安全。此外，数据路径中还需要额外的物理层，以便文件系统能将文件映射到块，进而将块映射到闪存地址。为了完成这些操作，系统需要内部网络来连接和扩展（scale-out）多个节点，形成一个统一的系统。</p><p>值得注意的是，在高性能环境中，文件系统软件的效率和物理架构同样重要。接下来，我们深入探讨物理架构的问题。在使用InfiniBand或以太网背板的Scale-out NAS解决方案中，每个高速串行总线传输都需要进行至少九次数据重传，无论是芯片间传输还是通过线路传输。每次数据重传都会降低底层NVMe硬件的性能，导致客户端无法充分发挥NVMe的全部潜能。</p><p><img src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8ESSD/640" alt="图片"></p><p>面对性能工作负载的Scale-out NAS解决方案提供商，他们看到了这些挑战，并基于NVMe over Fabrics（NVMe-oF）设计了相应的技术。这些解决方案将CPU从存储服务器的数据路径中移除，并使用PCIe路由到网络适配器。这种数据路径优化虽然取得了巨大的进步，但仍然需要大量的数据重传，并带来不必要的硬件成本。此外，由于每个NVMe设备都需要一个网络端口，以充分利用设备的性能，这也导致了功耗效率低下。</p><p><img src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8ESSD/640-20240415185507104" alt="图片"></p><p>随着NFSv4.2的推出，Linux社区引入了一个基于标准的软件解决方案，旨在进一步提升速度和效率。NFSv4.2允许工作负载从数据路径中移除文件服务器和目录映射，使NFSv3数据路径能够保持与存储的不间断连接。</p><p>这一进步显著减少了数据重传次数，从九次减少到五次，降低了44%。通过NFSv4.2，NAS环境具备了以前仅在并行文件系统中才有的优势，即元数据服务器不再位于数据路径中，从而消除了额外的内部存储网络成本和功耗。这种方法显著简化了从小规模到大规模的高效扩展能力，因为存储可以直接连接到现有的以太网网络。</p><p><img src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8ESSD/640-20240415185517646" alt="图片"></p><p>另外，GPUDirect架构的利用也可以提高数据路径效率。它通过主机CPU和内存之间的单一PCIe跳跃和复制，提供了与NVMe-oF相似的数据路径效率。</p><p><img src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8ESSD/640-20240415185530644" alt="图片"></p><p><strong>下一个重大机遇在哪里？</strong></p><p>下一个巨大的文件存储性能创新将出现在当现有以太网连接的固态硬盘（eSSD）能够直接与客户端通过NFS进行连接时。这将允许客户端几乎完全获得底层NVMe架构的性能，并彻底消除额外的基础设施成本。</p><p>这一创新最终推动了技术的演进，使得SSD本身能够直接连接到以太网（一种NFS-eSSD）。SSD将能够与NFSv3进行原生通信，而且块到闪存地址的映射可以简化为单一级别的映射。这种架构的结果是数据重传的次数进一步减少，从传统NAS中的九次，到并行文件系统中的五次，再到利用NFSv4.2和NFS-eSSD时仅为三次。</p><p><img src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8ESSD/640-20240415185543374" alt="图片"></p><p><strong>使用NFS-eSSD的优势</strong></p><p>这种新型架构带来了显著的优势。它提供了更低的延迟、减少的数据重传和较低的功耗，因为跨芯片到芯片连接或通过线路进行的数据串行传输占据了数据中心大部分的功耗。此外，这种方法还降低了运营和资本成本，因为它消除了许多额外的硬件需求。</p><p>对于NFS-eSSD来说，写放大问题得到了缓解。因为SSD更加了解其空闲空间，可以避免覆盖写入，从而提高SSD的耐久性。这减少了过度配置（OP）的需求，使得在不牺牲实际可用性能的情况下实现更高的容量密度和更高的访问密度成为可能。与传统的NVMe SSD相比，整体可靠性、可用性和可服务性通过减少硬件和数据重传得到了优化。因此，更广泛的动态扩展能力得以实现，允许存储系统直接在现有的以太网网络上进行放大或缩小，并利用基于标准的存储连接。</p><p><strong>为何是现在？</strong></p><p>现代数据分析和AI工具让我们能从数据中获取巨大的价值，但要实现这一价值，前提是能快速访问和处理数据。这些数据分析工作负载需要庞大的数据集，这些数据集必须存储在高效、高性能的存储设备上，并且需要能智能地编排数据。</p><p>所需的高速数据编排管道必须为所有系统提供一个共享的数据企业视图。它需要针对小型、随机的I/O模式进行优化，并提供卓越的系统性能峰值以及出色的文件系统性能聚合，以满足企业可能遇到的各种训练工作负载需求。数据管道需要由基于标准的解决方案驱动，这将便于在不同安全性和构建环境的机器上进行部署。同时，存储系统需要将SSD的全部性能提供给工作流程，以最大限度地利用机会，同时控制基础设施成本。</p><p>随着高速以太网、64位处理器IP的普及、IPv6、Linux中的NFSv4以及高性能轻量级文件系统的可用性，所有相关技术已经成熟，足以实现这一目标。现在，业界只需将这些要素巧妙地组合起来！</p><p><strong>参考资料</strong></p><ol><li>P. Goodwin, “SSDs and RAID: What’s the right strategy, JEDEC at the CES,” JEDEC, Arlington, VA, USA, 2011. Accessed: Jun. 22, 2023. [Online]. Available: <a href="https://www.jedec.org/">https://www.jedec.org/</a> sites/default/files/1330-1400%20 Paul%20Goodwin%20RAID%20 and%20SSDs.pdf</li><li>J. L. Hafner, V. Deenadhayalan, T. Kanungo, and K. K. Rao, “Performance metrics for erasure codes in storage systems,” IBM, San Jose, CA, USA, Tech. Rep. RJ 10321 (A0408003), Aug. 2004.</li><li>G. F. Pfister, “An introduction to the infiniband architecture,” in High Performance Mass Storage and Parallel I/O: Technologies and Applications, H. Jin, T. Cortes, and R. Buyya, Eds. Piscataway, NJ, USA: IEEE, 2001, ch. 42, pp. 617–632.</li><li>E. Kim and F. Zhang, “Optimizing NVMe® over fabrics (NVMe-oFTM),” SNIA, Santa Clara, CA, USA, White Paper, Apr. 2021. [Online]. Available: <a href="https://www.snia.org/">https://www.snia.org/</a> sites/default/files/education/ snia-optimizing-nvme -over-fabrics-nvme-of.pdf</li><li>S. Dickson. Linux Support of NFS v4.1 and v4.2. (Mar. 2017). RedHat. [Online]. Available: <a href="https://events.static">https://events.static</a>. <a href="http://linuxfound.org/sites/events/files/">linuxfound.org/sites/events/files/</a> slides/Vault2017.pdf</li><li>T. Vojnovich, M. Carlson, R. Davis, and J. F. Kim, “Ethernet-attached SSDs, brilliant idea or storage silliness?” SNIA, Santa Clara, CA, USA, SNIA Webcast Presentation, Mar. 2020. Accessed: Jun. 22, 2023. [Online]. Available: https:// <a href="http://www.snia.org/sites/default/files/">www.snia.org/sites/default/files/</a> ESF/SNIA-Ethernet-SSDs-Final. pdf</li><li>D. Flynn, “The case for NFS-eSSDs,” in Proc. IEEE Mass Storage Conf., May 2023. [Online]. Available: <a href="https://storageconference.us/2023/">https://storageconference.us/2023/</a> FlynnPresentation2.pdf</li><li>“Google collects statistics about IPv6 adoption in the internet on an ongoing basis, continuously updated.” Google. Accessed: Jun. 22, 2023. [Online]. Available: <a href="https://www.google">https://www.google</a>. com/intl/en/ipv6/statistics.html</li></ol><p>-----</p><p>Source: David Flynn, Thomas Coughlin; Overcoming Performance Bottlenecks with a Network File System in Solid State Drives; 23 August 2023</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alluxio</title>
      <link href="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Alluxio/"/>
      <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Alluxio/</url>
      
        <content type="html"><![CDATA[<h1 id="alluxio"><a class="markdownIt-Anchor" href="#alluxio"></a> Alluxio</h1><p>Alluxio在帮助统一跨各种平台用户数据的同时还有助于<strong>为用户提升总体 I/O 吞吐量</strong>。</p><p>Alluxio是通过把存储分为两个不同的类别来实现这一目标的。</p><ul><li>UFS(底层文件存储，也称为底层存储)<ul><li>该存储空间代表不受Alluxio管理的空间。 UFS存储可能来自外部文件系统，包括如HDFS或S3。</li><li>Alluxio可能连接到一个或多个UFS并在一个命名空间中统一呈现这类底层存储。</li><li>通常，UFS存储旨在相当长一段时间持久存储大量数据。</li></ul></li><li>Alluxio存储<ul><li>Alluxio做为一个分布式缓存来管理Alluxio workers本地存储，包括内存。这个在用户应用程序与各种底层存储之间的快速数据层带来的是显著提高的I/O性能。</li><li>Alluxio存储主要用于存储热数据，暂态数据，而不是长期持久数据存储。</li><li>每个Alluxio节点要管理的存储量和类型由用户配置决定。</li><li>即使数据当前不在Alluxio存储中，通过Alluxio连接的UFS中的文件仍然对Alluxio客户可见。当客户端尝试读取仅可从UFS获得的文件时数据将被复制到Alluxio存储中。</li></ul></li></ul><p>Alluxio存储通过将数据存储在计算节点内存中来提高性能。Alluxio存储中的数据可以被复制来形成”热”数据，更易于I/O并行操作和使用。</p><p>Alluxio中的数据副本独立于UFS中可能已存在的副本。 Alluxio存储中的数据副本数是由集群活动动态决定的。 由于Alluxio依赖底层文件存储来存储大部分数据， Alluxio不需要保存未使用的数据副本。</p><p>Alluxio还支持让系统存储软件可感知的分层存储，使类似L1/L2 CPU缓存一样的数据存储优化成为可能。</p><p>🟠所以，Alluxio本质上是一个中间层。</p><span id="more"></span><h1 id="单层存储"><a class="markdownIt-Anchor" href="#单层存储"></a> 单层存储</h1><p>配置Alluxio存储的最简单方法是使用默认的单层模式。</p><p>请注意，此部分是讲本地存储，诸如mount之类的术语指在本地存储文件系统上挂载，不要与Alluxio的外部底层存储的mount概念混淆。</p><p>在启动时，Alluxio将在每个worker节点上发放一个ramdisk并占用一定比例的系统的总内存。 此ramdisk将用作分配给每个Alluxio worker的唯一存储介质。</p><h1 id="多层存储"><a class="markdownIt-Anchor" href="#多层存储"></a> 多层存储</h1><p>通过Alluxio配置中的alluxio-site.properties来配置Alluxio存储。 详细信息见<a href="https://docs.alluxio.io/os/user/stable/en/operation/Configuration.html">configuration settings</a>。</p><p>对默认值的常见修改是明确设置ramdisk的大小。 例如，设置每个worker的ramdisk大小为16GB：</p><p>alluxio.worker.ramdisk.size=16GB</p><p>另一个常见更改是指定多个存储介质，例如ramdisk和SSD。 需要 更新alluxio.worker.tieredstore.level0.dirs.path以指定想用的每个存储介质 为一个相应的存储目录。 例如，要使用ramdisk(挂载在/mnt/ramdisk上)和两个 SSD(挂载在/mnt/ssd1和/mnt/ssd2):</p><p>alluxio.worker.tieredstore.level0.dirs.path=/mnt/ramdisk,/mnt/ssd1,/mnt/ssd2</p><p>alluxio.worker.tieredstore.level0.dirs.mediumtype=MEM,SSD,SSD</p><p>请注意，介质类型的顺序必须与路径的顺序相符。 MEM和SSD是Alluxio中的两种预配置存储类型。 alluxio.master.tieredstore.global.mediumtype是包含所有可用的介质类型的配置参数，默认情况下设置为MEM，SSD，HDD。 如果用户有额外存储介质类型可以通过修改这个配置来增加。</p><p>提供的路径应指向挂载适当存储介质的本地文件系统中的路径。 为了实现短路操作，对于这些路径，应允许客户端用户在这些路径上进行读取，写入和执行。 例如，对于与启动Alluxio服务的用户组同组用户应给予770权限。</p><p>更新存储介质后，需要指出每个存储目录分配了多少存储空间。 例如，如果要在ramdisk上使用16 GB，在每个SSD上使用100 GB：</p><p>alluxio.worker.tieredstore.level0.dirs.quota=16GB,100GB,100GB</p><p>注意存储空间配置的顺序一定与存储目录的配置相符。</p><p>Alluxio在通过Mount或SudoMount选项启动时，配置并挂载ramdisk。 这个ramdisk大小是由alluxio.worker.ramdisk.size确定的。 默认情况下，tier 0设置为MEM并且管理整个ramdisk。 此时alluxio.worker.tieredstore.level0.dirs.quota的值同alluxio.worker.ramdisk.size一样。 如果tier0要使用除默认的ramdisk以外的设备，应该显式地设置alluxio.worker.tieredstore.level0.dirs.quota选项。</p><p>多层存储</p><p>通常建议异构存储介质也使用单个存储层。 在特定环境中，工作负载将受益于基于I/O速度存储介质明确排序。 Alluxio假定根据按I/O性能从高到低来对多层存储进行排序。 例如，用户经常指定以下层：</p><ul><li>MEM(内存)</li><li>SSD(固态存储)</li><li>HDD(硬盘存储)</li></ul><p>写数据</p><p>用户写新的数据块时，默认情况下会将其写入顶层存储。如果顶层没有足够的可用空间， 则会尝试下一层存储。如果在所有层上均未找到存储空间，因Alluxio的设计是易失性存储，Alluxio会释放空间来存储新写入的数据块。 根据块注释策略，空间释放操作会从worker中释放数据块。 <a href="https://docs.alluxio.io/os/user/stable/cn/core-services/Caching.html?q=HDD#block-annotation-policies">块注释政策</a>。 如果空间释放操作无法释放新空间，则写数据将失败。</p><p>注意:新的释放空间模型是同步模式并会代表要求为其要写入的数据块释放新空白存储空间的客户端来执行释放空间操作。 在块注释策略的帮助下，同步模式释放空间不会引起性能下降，因为总有已排序的数据块列表可用。 然而，可以将alluxio.worker.tieredstore.free.ahead.bytes(默认值：0)配置为每次释放超过释放空间请求所需字节数来保证有多余的已释放空间满足写数据需求。</p><p>用户还可以通过<a href="https://docs.alluxio.io/os/user/stable/cn/core-services/Caching.html?q=HDD#configuring-tiered-storage">configuration settings</a>来指定写入数据层。</p><p>读取数据</p><p>如果数据已经存在于Alluxio中，则客户端将简单地从已存储的数据块读取数据。 如果将Alluxio配置为多层，则不一定是从顶层读取数据块， 因为数据可能已经透明地挪到更低的存储层。</p><p>用ReadType.CACHE_PROMOTE读取数据将在从worker读取数据前尝试首先将数据块挪到 顶层存储。也可以将其用作为一种数据管理策略 明确地将热数据移动到更高层存储读取。</p><p>配置分层存储</p><p>可以使用以下方式在Alluxio中启用分层存储 <a href="https://docs.alluxio.io/os/user/stable/en/operation/Configuration.html">配置参数</a>。 为Alluxio指定额外存储层，使用以下配置参数：</p><p>alluxio.worker.tieredstore.levels</p><p>alluxio.worker.tieredstore.level{x}.alias</p><p>alluxio.worker.tieredstore.level{x}.dirs.quota</p><p>alluxio.worker.tieredstore.level{x}.dirs.path</p><p>alluxio.worker.tieredstore.level{x}.dirs.mediumtype</p><p>例如，如果计划将Alluxio配置为具有两层存储，内存和硬盘存储， 可以使用类似于以下的配置：</p><p><em># configure 2 tiers in Alluxio</em></p><p>alluxio.worker.tieredstore.levels=2</p><p><em># the first (top) tier to be a memory tier</em></p><p>alluxio.worker.tieredstore.level0.alias=MEM</p><p><em># defined <code>/mnt/ramdisk</code> to be the file path to the first tier</em></p><p>alluxio.worker.tieredstore.level0.dirs.path=/mnt/ramdisk</p><p><em># defined MEM to be the medium type of the ramdisk directory</em></p><p>alluxio.worker.tieredstore.level0.dirs.mediumtype=MEM</p><p><em># set the quota for the ramdisk to be <code>100GB</code></em></p><p>alluxio.worker.tieredstore.level0.dirs.quota=100GB</p><p><em># configure the second tier to be a hard disk tier</em></p><p>alluxio.worker.tieredstore.level1.alias=HDD</p><p><em># configured 3 separate file paths for the second tier</em></p><p>alluxio.worker.tieredstore.level1.dirs.path=/mnt/hdd1,/mnt/hdd2,/mnt/hdd3</p><p><em># defined</em> <em>HDD</em> <em>to be the medium type of the second tier</em></p><p>alluxio.worker.tieredstore.level1.dirs.mediumtype=HDD,HDD,HDD</p><p><em># define the quota for each of the 3 file paths of the second tier</em></p><p>alluxio.worker.tieredstore.level1.dirs.quota=2TB,5TB,500GB</p><p>可配置层数没有限制 但是每个层都必须使用唯一的别名进行标识。 典型的配置将具有三层，分别是内存，SSD和HDD。 要在HDD层中使用多个硬盘存储，需要在配置alluxio.worker.tieredstore.level{x}.dirs.path时指定多个路径。</p><p>块注释策略</p><p>Alluxio从v2.3开始使用块注释策略来维护存储中数据块的严格顺序。 注释策略定义了跨层块的顺序，并在以下操作过程中进行用来参考: -释放空间 -<a href="https://docs.alluxio.io/os/user/stable/cn/core-services/Caching.html?q=HDD#block-aligning-dynamic-block-placement">动态块放置</a>。</p><p>与写操作同步发生的释放空间操作将尝试根据块注释策略强制顺序删除块并释放其空间给写操作。注释顺序的最后一个块是第一个释放空间候选对象，无论它位于哪个层上。</p><p>开箱即用的注释策略实施包括:</p><ul><li>LRUAnnotator:根据最近最少使用的顺序对块进行注释和释放。 这是Alluxio的默认注释策略。</li><li>LRFUAnnotator:根据配置权重的最近最少使用和最不频繁使用的顺序对块进行注释。<ul><li>如果权重完全偏设为最近最少使用，则行为将 与LRUAnnotator相同。</li><li>适用的配置属性包括alluxio.worker.block.annotator.lrfu.step.factor alluxio.worker.block.annotator.lrfu.attenuation.factor。</li></ul></li></ul><p>workers选择使用的注释策略由Alluxio属性 <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html#alluxio.worker.block.annotator.class">alluxio.worker.block.annotator.class</a>决定。 该属性应在配置中指定完全验证的策略名称。当前可用的选项有:</p><ul><li>alluxio.worker.block.annotator.LRUAnnotator</li><li>alluxio.worker.block.annotator.LRFUAnnotator</li></ul><p>释放空间模拟</p><p>旧的释放空间策略和Alluxio提供的实施现在已去掉了，并用适当的注释策略替换。 配置旧的Alluxio释放空间策略将导致worker启动失败，并报错java.lang.ClassNotFoundException。 同样，旧的基于水位标记配置已失效。因此，以下配置选项是无效的:</p><p>-alluxio.worker.tieredstore.levelX.watermark.low.ratio -alluxio.worker.tieredstore.levelX.watermark.high.ratio</p><p>然而，Alluxio支持基于自定义释放空间实施算法数据块注释的仿真模式。该仿真模式假定已配置的释放空间策略创建一个基于某种顺序释放空间的计划，并通过定期提取这种自定义顺序来支持块注释活动。</p><p>旧的释放空间配置应进行如下更改。 (由于旧的释放空间实施已删除，如未能更改基于旧实施的以下配置就会导致class加载错误。)</p><p>-LRUEvictor-&gt; LRUAnnotator -GreedyEvictor-&gt; LRUAnnotator -PartialLRUEvictor-&gt; LRUAnnotator -LRFUEvictor-&gt; LRFUAnnotator</p><p>分层存储管理</p><p>因为块分配/释放不再强制新的写入必须写到特定存储层，新数据块可能最终被写到任何已配置的存储层中。这样允许写入超过Alluxio存储容量的数据。但是，这就需要Alluxio动态管理块放置。 为了确保层配置为从最快到最慢的假设，Alluxio会基于块注释策略在各层存储之间移动数据块。</p><p>每个单独层管理任务都遵循以下配置:</p><ul><li>alluxio.worker.management.task.thread.count:管理任务所用线程数。 (默认值:CPU核数)</li><li>alluxio.worker.management.block.transfer.concurrency.limit:可以同时执行多少个块传输。 (默认:CPU核数/2)</li></ul><p>块对齐(动态块放置)</p><p>Alluxio将动态地跨层移动数据块，以使块组成与配置的块注释策略一致。</p><p>为辅助块对齐，Alluxio会监视I/O模式并会跨层重组数据块，以确保 较高层的最低块比下面层的最高块具有更高的次序。</p><p>这是通过”对齐”这个管理任务来实现的。此管理任务在检测到层之间 顺序已乱时，会通过在层之间交换块位置来有效地将各层与已配置的注释策略对齐以消除乱序。 有关如何控制这些新的后台任务对用户I/O的影响，参见<a href="https://docs.alluxio.io/os/user/stable/cn/core-services/Caching.html?q=HDD#management-task-back-off">管理任务推后</a>部分。</p><p>用于控制层对齐:</p><ul><li>alluxio.worker.management.tier.align.enabled:是否启用层对齐任务。 (默认: true)</li><li>alluxio.worker.management.tier.align.range:单个任务运行中对齐多少个块。 (默认值:100)</li><li>alluxio.worker.management.tier.align.reserved.bytes:配置多层时，默认情况下在所有目录上保留的空间大小。 (默认:1GB) 用于内部块移动。</li><li>alluxio.worker.management.tier.swap.restore.enabled:控制一个特殊任务，该任务用于在内部保留空间用尽时unblock层对齐。 (默认:true) 由于Alluxio支持可变的块大小，因此保留空间可能会用尽，因此，当块大小不匹配时在块对齐期间在层之间块交换会导致一个目录保留空间的减少。</li></ul><p>块升级</p><p>当较高层具有可用空间时，低层的块将向上层移动，以便更好地利用较快的磁盘介质，因为假定较高的层配置了较快的磁盘介质。</p><p>用于控制动态层升级:</p><ul><li>alluxio.worker.management.tier.promote.enabled:是否启用层升级任务。 (默认: true)</li><li>alluxio.worker.management.tier.promote.range:单个任务运行中升级块数。 (默认值:100)</li><li>alluxio.worker.management.tier.promote.quota.percent:每一层可以用于升级最大百分比。 一旦其已用空间超过此值，向此层升级将停止。 (0表示永不升级，100表示总是升级。)</li></ul><p>管理任务推后</p><p>层管理任务(对齐/升级)会考虑用户I/O并在worker/disk重载情况下推后运行。 这是为了确保内部管理任务不会对用户I/O性能产生负面影响。</p><p>可以在alluxio.worker.management.backoff.strategy属性中设置两种可用的推后类型，分别是Any和DIRECTORY。</p><p>-ANY; 当有任何用户I/O时，worker管理任务将推后。 此模式将确保较低管理任务开销，以便提高即时用户I/O性能。 但是，管理任务要取得进展就需要在worker上花更长的时间。</p><p>-DIRECTORY; 管理任务将从有持续用户I/O的目录中推后。 此模式下管理任务更易取得进展。 但是，由于管理任务活动的增加，可能会降低即时用户I/O吞吐量。</p><p>影响这两种推后策略的另一个属性是alluxio.worker.management.load.detection.cool.down.time，控制多长时间的用户I/O计为在目标directory/worker上的一个负载。</p><p>Alluxio中数据生命周期管理</p><p>用户需要理解以下概念，以正确利用可用资源:</p><ul><li>free:释放数据是指从Alluxio缓存中删除数据，而不是从底层UFS中删除数据。 释放操作后，数据仍然可供用户使用，但对Alluxio释放文件后尝试访问该文件 的客户端来讲性能可能会降低。</li><li>load:加载数据意味着将其从UFS复制到Alluxio缓存中。如果Alluxio使用 基于内存的存储，加载后用户可能会看到I/O性能的提高。</li><li>persist:持久数据是指将Alluxio存储中可能被修改过或未被修改过的数据写回UFS。 通过将数据写回到UFS，可以保证如果Alluxio节点发生故障数据还是可恢复的。</li><li>TTL(Time to Live):TTL属性设置文件和目录的生存时间，以 在数据超过其生存时间时将它们从Alluxio空间中删除。还可以配置 TTL来删除存储在UFS中的相应数据。</li></ul><p>从Alluxio存储中释放数据</p><p>为了在Alluxio中手动释放数据，可以使用./bin/alluxio文件系统命令 行界面。</p><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">/</mi><mi>a</mi><mi>l</mi><mi>l</mi><mi>u</mi><mi>x</mi><mi>i</mi><mi>o</mi><mi>f</mi><mi>s</mi><mi>f</mi><mi>r</mi><mi>e</mi><mi>e</mi><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">** ./bin/alluxio fs free **</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord">/</span><span class="mord mathnormal">b</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span>{<strong>PATH_TO_UNUSED_DATA</strong>}</strong></p><p>这将从Alluxio存储中删除位于给定路径的数据。如果数据是持久存储到UFS的则仍然可以访问该数据。有关更多信息，参考 <a href="https://docs.alluxio.io/os/user/stable/en/operation/User-CLI.html#free">命令行界面文档</a></p><p>注意，用户通常不需要手动从Alluxio释放数据，因为 配置的<a href="https://docs.alluxio.io/os/user/stable/cn/core-services/Caching.html?q=HDD#block-annotation-policies">注释策略</a>将负责删除未使用或旧数据。</p><p>将数据加载到Alluxio存储中</p><p>如果数据已经在UFS中，使用 <a href="https://docs.alluxio.io/os/user/stable/en/operation/User-CLI.html#load">alluxio fs load</a></p><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">/</mi><mi>a</mi><mi>l</mi><mi>l</mi><mi>u</mi><mi>x</mi><mi>i</mi><mi>o</mi><mi>f</mi><mi>s</mi><mi>l</mi><mi>o</mi><mi>a</mi><mi>d</mi><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">** ./bin/alluxio fs load **</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord">/</span><span class="mord mathnormal">b</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span>{<strong>PATH_TO_FILE</strong>}</strong></p><p>要从本地文件系统加载数据，使用命令 <a href="https://docs.alluxio.io/os/user/stable/en/operation/User-CLI.html#copyfromlocal">alluxio fs copyFromLocal</a>。 这只会将文件加载到Alluxio存储中，而不会将数据持久保存到UFS中。 将写入类型设置为MUST_CACHE写入类型将不会将数据持久保存到UFS， 而设置为CACHE和CACHE_THROUGH将会持久化保存。不建议手动加载数据，因为，当首次使用文件时Alluxio会自动将数据加载到Alluxio缓存中。</p><p>在Alluxio中持久化保留数据</p><p>命令<a href="https://docs.alluxio.io/os/user/stable/en/operation/User-CLI.html#persist">alluxio fs persist</a> 允许用户将数据从Alluxio缓存推送到UFS。</p><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">/</mi><mi>a</mi><mi>l</mi><mi>l</mi><mi>u</mi><mi>x</mi><mi>i</mi><mi>o</mi><mi>f</mi><mi>s</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">** ./bin/alluxio fs persist **</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord">/</span><span class="mord mathnormal">b</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span>{<strong>PATH_TO_FILE</strong>}</strong></p><p>如果您加载到Alluxio的数据不是来自已配置的UFS，则上述命令很有用。 在大多数情况下，用户不必担心手动来持久化保留数据。</p><p>设置生存时间(TTL)</p><p>Alluxio支持命名空间中每个文件和目录的”生存时间(TTL)”设置。此 功能可用于有效地管理Alluxio缓存，尤其是在严格 保证数据访问模式的环境中。例如，如果对上一周提取数据进行分析， 则TTL功能可用于明确刷新旧数据，从而为新文件释放缓存空间。</p><p>Alluxio具有与每个文件或目录关联的TTL属性。这些属性将保存为 日志的一部分，所以集群重新后也能持久保持。活跃master节点负责 当Alluxio提供服务时将元数据保存在内存中。在内部，master运行一个后台 线程，该线程定期检查文件是否已达到其TTL到期时间。</p><p>注意，后台线程按配置的间隔运行，默认设置为一个小时。 在检查后立即达到其TTL期限的数据不会马上删除， 而是等到一个小时后下一个检查间隔才会被删除。</p><p>如将间隔设置为10分钟，在alluxio-site.properties添加以下配置：</p><p>alluxio.master.ttl.checker.interval=10m</p><p>请参考<a href="https://docs.alluxio.io/os/user/stable/cn/operation/Configuration.html">配置页</a> CN以获取有关设置Alluxio配置的更多详细信息。</p><p>API</p><p>有两种设置路径的TTL属性的方法。</p><ol><li>通过Alluxio shell命令行</li><li>每个元数据加载或文件创建被动设置</li></ol><p>TTL API如下:</p><p>SetTTL(path，duration，action)</p><p><code>path</code> Alluxio命名空间中的路径</p><p><code>duration</code>TTL动作生效前的毫秒数，这会覆盖任何先前的设置</p><p><code>action</code>生存时间过去后要执行的<code>action</code>。 <code>FREE</code>将导致文件</p><p>​      从Alluxio存储中删除释放，无论其目前的状态如何。 <code>DELETE</code>将导致</p><p>​      文件从Alluxio命名空间和底层存储中删除。</p><p>​      注意:<code>DELETE</code>是某些命令的默认设置，它将导致文件被</p><p>​      永久删除。</p><p>命令行用法</p><p>了解如何使用setTtl命令在Alluxio shell中修改TTL属性参阅详细的 <a href="https://docs.alluxio.io/os/user/stable/cn/operation/User-CLI.html#setttl">命令行文档</a>。</p><p>Alluxio中文件上的被动TTL设置</p><p>Alluxio客户端可以配置为只要在Alluxio命名空间添加新文件时就添加TTL属性。 当预期用户是临时使用文件情况下，被动TTL很有用 ，但它不灵活，因为来自同一客户端的所有请求将继承 相同的TTL属性。</p><p>被动TTL通过以下选项配置:</p><ul><li>alluxio.user.file.create.ttl-在Alluxio中文件上设置的TTL持续时间。 默认情况下，未设置TTL持续时间。</li><li>alluxio.user.file.create.ttl.action-对文件设置的TTL到期后的操作 在Alluxio中。注意：默认情况下，此操作为”DELETE”，它将导致文件永久被删除。</li></ul><p>TTL默认情况下处于不使用状态，仅当客户有严格数据访问模式才启用。</p><p>例如，要3分钟后删除由runTests创建的文件:</p><p><strong>$</strong> ./bin/alluxio runTests <strong>-Dalluxio</strong>.user.file.create.ttl=3m *<em>*</em></p><p>-Dalluxio.user.file.create.ttl.action=DELETE</p><p>对于这个例子，确保alluxio.master.ttl.checker.interval被设定为短 间隔，例如一分钟，以便master能快速识别过期文件。</p><p>在Alluxio中管理数据复制</p><h3 id="被动复制"><a class="markdownIt-Anchor" href="#被动复制"></a> 被动复制</h3><p>与许多分布式文件系统一样，Alluxio中的每个文件都包含一个或多个分布在集群中存储的存储块。默认情况下，Alluxio可以根据工作负载和存储容量自动调整不同块的复制级别。例如，当更多的客户以类型CACHE或CACHE_PROMOTE请求来读取此块时Alluxio可能会创建此特定块更多副本。当较少使用现有副本时，Alluxio可能会删除一些不常用现有副本 来为经常访问的数据征回空间(<a href="https://docs.alluxio.io/os/user/stable/cn/core-services/Caching.html?q=HDD#block-annotation-policies">块注释策略</a>)。 在同一文件中不同的块可能根据访问频率不同而具有不同数量副本。</p><p>默认情况下，此复制或征回决定以及相应的数据传输 对访问存储在Alluxio中数据的用户和应用程序完全透明。</p><h3 id="主动复制"><a class="markdownIt-Anchor" href="#主动复制"></a> 主动复制</h3><p>除了动态复制调整之外，Alluxio还提供API和命令行 界面供用户明确设置文件的复制级别目标范围。 尤其是，用户可以在Alluxio中为文件配置以下两个属性:</p><ol><li>alluxio.user.file.replication.min是此文件的最小副本数。 默认值为0，即在默认情况下，Alluxio可能会在文件变冷后从Alluxio管理空间完全删除该文件。 通过将此属性设置为正整数，Alluxio 将定期检查此文件中所有块的复制级别。当某些块 的复制数不足时，Alluxio不会删除这些块中的任何一个，而是主动创建更多 副本以恢复其复制级别。</li><li>alluxio.user.file.replication.max是最大副本数。一旦文件该属性 设置为正整数，Alluxio将检查复制级别并删除多余的 副本。将此属性设置为-1为不设上限(默认情况)，设置为0以防止 在Alluxio中存储此文件的任何数据。注意，alluxio.user.file.replication.max的值 必须不少于alluxio.user.file.replication.min。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统论文中的评价指标</title>
      <link href="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%B3%BB%E7%BB%9F%E8%AE%BA%E6%96%87%E4%B8%AD%E7%9A%84%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/"/>
      <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%B3%BB%E7%BB%9F%E8%AE%BA%E6%96%87%E4%B8%AD%E7%9A%84%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1 id="mlperf"><a class="markdownIt-Anchor" href="#mlperf"></a> MLPerf</h1><h1 id="吞吐量-iops-和延迟-qa"><a class="markdownIt-Anchor" href="#吞吐量-iops-和延迟-qa"></a> 吞吐量、IOPS 和延迟 Q&amp;A</h1><p>引用自：<a href="https://mp.weixin.qq.com/s/Yz2lkYzimfFC-85KBUq_zQ">https://mp.weixin.qq.com/s/Yz2lkYzimfFC-85KBUq_zQ</a></p><p>吞吐量、IOPS 和延迟是三个术语，通常称为存储性能指标。</p><p>SNIA 网络存储论坛 （NSF） 通过现场网络研讨会“您想知道的有关存储但太自豪而无法询问的一切”</p><p>带回了我们广受欢迎的网络研讨会系列“您想知道的有关吞吐量、IOPS 和延迟但又太自豪而无法询问的一切”。</p><span id="more"></span><p>问：讨论 RoCEv2 中的拥塞和机制（DCQCN 和延迟更改控制）比 FC SAN 中的传统BB_credit处理更有趣。</p><p>答：选择FC的BB_Credit机制是为了举例，但所讨论的许多概念，如超额订阅、拥塞、拥塞扩散等，也适用于其他传输协议。例如，RoCE 可以从使用显式拥塞控制机制（如 DCQCN）或 PFC 和 ECN 的组合中受益，然后还有特定于供应商的方法（如 RTTCC），可用于最大程度地减少对显式拥塞控制需求的依赖。</p><p>问：NVMe 是否具有或需要 SCSI ALUA 的等效产品？</p><p>答：是的，SCSI 的 ALUA 的 NVMe 等效项称为非对称命名空间访问 （ANA）。</p><p>问：CXL 是否会从根本上改变 IO 性能，CXL 将在多长时间内普及？</p><p>答：<strong>CXL 在 PCIe 上运行，因此会受到许多相同的限制，尤其是距离。大多数 CXL 用例将主要适用于机架规模，因此我们预计它不会用于计算节点和外部存储之间的 IO。</strong></p><p>问：人们是在 AI/ML 用例的各个阶段（例如，数据收集和训练）使用单个存储系统，还是使用不同的存储系统（例如，一个存储系统用于数据收集阶段，另一个存储系统用于 AI/ML 训练）？</p><p>答：通常，引入和检查点使用相同的存储系统。无论哪种情况，高性能都是关键，因为系统在这两个阶段的数据传输上花费的时间越多，GPU 处于空闲状态的时间就越长，因此训练完成的时间就越长。</p><p>问：在日益增长的超融合（“无共享”）架构中，存储分布在不同的节点上，提高 IOPS 的最佳方法是什么，特别是对于视频和语音等实时响应时间很重要的应用程序？</p><p>答：使用横向扩展方法（即添加提供存储服务的节点）是提高此类部署的整体系统性能的最常见方法。确保网络大小合适且不拥塞，并确保每个节点中都有适当的计算资源会有所帮助。</p><p>问：为什么小文件 I/O 开销这么大？与几 KB 或更大的文件相比，元数据通常仍然要小得多。</p><p>答：对于任何文件传输，元数据在数据传输阶段中只占很小的百分比，对于任何文件大小来说，元数据的百分比大致相同，但小文件需要相同数量的主机交互来启动和完成 I/O。这种操作命令的主机交互，然后是设备返回完成通知，这会增加小文件传输的开销百分比。例如，如果文件只有 128 个字节长，但有一个 32 字节的请求和一个 32 字节的完成，则开销是文件传输所需时间的 33%。对于 4 KB 文件传输，此开销将减少到传输文件所需时间的 1.5%。</p><p>问：SPC 1/2 是否仍是 IO 性能的相关基准？如果不是，今天的标准是什么？</p><p>答：是的，存储性能委员会基准 SPC 1/2 仍然适用，并且会继续更新。您还可以使用 Vdbench 和 FIO 等工具进行性能表征。也就是说，要使用的最佳基准测试是与您期望在正在测试的基础架构上运行的应用程序最匹配的基准测试。随着 AI 变得越来越重要，您还可以查看 MLPerf。</p><blockquote><p>吞吐量、IOPS 和延迟 Q&amp;A - SNIA on Network Storage — Throughput, IOPs, and Latency Q&amp;A - SNIA on Network Storage (<a href="http://sniansfblog.org">sniansfblog.org</a>)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 存储 </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PaaS</title>
      <link href="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/PaaS/"/>
      <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/PaaS/</url>
      
        <content type="html"><![CDATA[<p><a href="http://dockone.io/article/635">http://dockone.io/article/635</a></p><p>PaaS 平台即服务<br>Kubernetes属于PaaS</p>]]></content>
      
      
      <categories>
          
          <category> 云 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>树状数组与线段树</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E4%B8%8E%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E4%B8%8E%E7%BA%BF%E6%AE%B5%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p>本篇讲一些其他博客没有展开讲的部分。</p><p>Q：什么是lowbit函数?</p><p>A：lowbit可以取出一个数字的最低位1，如lowbit(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1010</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">{1010}_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>) = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>0010</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">{0010}_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>lowbit(5) = 1,lowbit(6) = 2</p><p>Q：为什么树状数组的划分使用lowbit？</p><p>树状数组和线段树一样，需要将一个区域[1,n]分成多段</p><p>线段树的划分是：二分，需要4倍内存(粗略4倍)</p><p>而树状数组的划分是：二进制分解</p><p>假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><msup><mn>2</mn><msub><mi>i</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mn>2</mn><msub><mi>i</mi><mn>2</mn></msub></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mn>2</mn><msub><mi>i</mi><mi>m</mi></msub></msup></mrow><annotation encoding="application/x-tex">n = 2^{i_1}+2^{i_2}+…+2^{i_m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.907994em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.907994em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>那么对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span>的区域，划分的区间为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><msup><mn>2</mn><msub><mi>i</mi><mn>1</mn></msub></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,2^{i_1}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msup><mn>2</mn><msub><mi>i</mi><mn>1</mn></msub></msup><mo>+</mo><mn>1</mn><mo separator="true">,</mo><msup><mn>2</mn><msub><mi>i</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mn>2</mn><msub><mi>i</mi><mn>2</mn></msub></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[2^{i_1}+1,2^{i_1}+2^{i_2}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.019104em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">…</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msup><mn>2</mn><msub><mi>i</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mn>2</mn><msub><mi>i</mi><mn>2</mn></msub></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mn>2</mn><msub><mi>i</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub></msup><mo>+</mo><mn>1</mn><mo separator="true">,</mo><msup><mn>2</mn><msub><mi>i</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mn>2</mn><msub><mi>i</mi><mn>2</mn></msub></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mn>2</mn><msub><mi>i</mi><mi>m</mi></msub></msup><mo stretchy="false">]</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">[2^{i_1}+2^{i_2}+…+2^{i_{m-1}}+1,2^{i_1}+2^{i_2}+…+2^{i_{m}}],</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.907994em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.907994em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173142857142857em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.019104em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.907994em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>7</mn><mo>=</mo><msup><mn>2</mn><mn>0</mn></msup><mo>+</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x = 7 = 2^0+2^1+2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">7</span>;</span><br><span class="line"><span class="built_in">lowbit</span>(x); <span class="comment">// lowbit(x) = 1</span></span><br><span class="line">x-=<span class="built_in">lowbit</span>(x); <span class="comment">// x = 6</span></span><br><span class="line"><span class="built_in">lowbit</span>(x); <span class="comment">// lowbit(x) = 2</span></span><br><span class="line">x-=<span class="built_in">lowbit</span>(x); <span class="comment">// x = 4</span></span><br><span class="line"><span class="built_in">lowbit</span>(x); <span class="comment">//lowbit(x) = 4</span></span><br><span class="line">x-=<span class="built_in">lowbit</span>(x); <span class="comment">// x = 0</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">7</span>]被划分为[<span class="number">1</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">7</span>]</span><br><span class="line"></span><br><span class="line">树状数组c[x]保存的则是：[x-<span class="built_in">lowbit</span>(x)+<span class="number">1</span>,x]区间中所有数的和</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x) &#123;</span><br><span class="line">        ans+=c[x];</span><br><span class="line">        x-=<span class="built_in">lowbit</span>(x);</span><br><span class="line">        <span class="comment">// x = 7-&gt;[7,7] , c[7] = a[7]</span></span><br><span class="line">        <span class="comment">// x = 6-&gt;[5,6] , c[6] = a[5]+a[6]</span></span><br><span class="line">        <span class="comment">// x = 4-&gt;[1,4] , c[4] = a[1]+a[2]+a[3]+a[4]</span></span><br><span class="line">        <span class="comment">// x = 0-&gt;end</span></span><br><span class="line">        <span class="comment">//由此看出，可以保证不重合的划分</span></span><br><span class="line">        <span class="comment">// ans=c[7]+c[6]+c[4]</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时，由以上的介绍可以推出，对于c[x]节点，它的父亲结点应该是c[x+lowbit(x)]</p><p>那么更新时则为</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n) &#123;</span><br><span class="line">        c[x]+=k;</span><br><span class="line">        x+=<span class="built_in">lowbit</span>(x); </span><br><span class="line">        <span class="comment">// Q: 为什么是x = x+lowbit(x)？</span></span><br><span class="line">        <span class="comment">// A: 因为它需要更新它的父节点，使得包含它的区间得以被更新</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上的add(int x,int k)和ask(int x)实现的功能是：单点更新、区间查询</p><p>那么如果要实现单点查询和区间更新呢？考虑利用差分的思想，请看代码：</p><p>PS:单点查询为query(x)，而不是query(x)-query(x-1)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="type">int</span> c[maxn];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> k)</span> </span>&#123; <span class="comment">// 单点更新</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;=n) &#123;</span><br><span class="line">        c[i] += k;</span><br><span class="line">        i += <span class="built_in">lowbit</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="comment">// [1,x] 区间查询</span></span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x) &#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        cin &gt;&gt; c;</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="string">&#x27;C&#x27;</span>) &#123;</span><br><span class="line">            <span class="type">int</span> l, r, d;</span><br><span class="line">            cin &gt;&gt; l &gt;&gt; r &gt;&gt; d;</span><br><span class="line">            <span class="comment">// 区间更新</span></span><br><span class="line">            <span class="built_in">add</span>(l, d);</span><br><span class="line">            <span class="built_in">add</span>(r + <span class="number">1</span>, -d);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> x;cin&gt;&gt;x;</span><br><span class="line">            <span class="comment">// 单点查询</span></span><br><span class="line">            cout &lt;&lt; a[x] + <span class="built_in">query</span>(x)&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>Codeforces1324DPair of Topics<br><a href="https://codeforces.com/contest/1324/problem/D">https://codeforces.com/contest/1324/problem/D</a></p><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span>序列,求有多少对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><msub><mi>b</mi><mi>i</mi></msub><mo>+</mo><msub><mi>b</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">ib_i+b_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><p>解法1:按照值从大到小插入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="type">int</span> b[maxn];</span><br><span class="line"><span class="type">int</span> c[maxn];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">    <span class="type">int</span> v, index;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Node&amp; b) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(v==b.v) &#123;</span><br><span class="line">            <span class="keyword">return</span> index &lt;b.index;<span class="comment">//注意这里!!</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v &lt; b.v;  <span class="comment">//从小到大排序 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125; node[maxn];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=n*<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">c[i]++;</span><br><span class="line">i+=i&amp;(-i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">res+=c[i];</span><br><span class="line">i-=i&amp;(-i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        node[i].v = a[i] - b[i];</span><br><span class="line">        node[i].index = i;</span><br><span class="line">        node[i + n].v = b[i] - a[i];</span><br><span class="line">        node[i + n].index = i + n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">sort</span>(node + <span class="number">1</span>, node + <span class="number">1</span> + <span class="number">2</span> * n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>*n; i &gt;=<span class="number">1</span>;i--) &#123;</span><br><span class="line">        <span class="type">int</span> id = node[i].index;</span><br><span class="line">        <span class="type">int</span> v = node[i].v;</span><br><span class="line">        <span class="keyword">if</span>(id&lt;=n) &#123;</span><br><span class="line">            <span class="built_in">add</span>(node[i].index);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(v&lt;<span class="number">0</span>)</span><br><span class="line">            ans--;</span><br><span class="line">        ans += <span class="built_in">sum</span>(id - n);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解法2:按照序列顺序从小到大</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> a[maxn], b[maxn], c[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;maxn*<span class="number">2</span>) &#123;</span><br><span class="line">        c[i] += d;</span><br><span class="line">        i += <span class="built_in">lowbit</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        ret += c[i];</span><br><span class="line">        i -= <span class="built_in">lowbit</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        v.<span class="built_in">push_back</span>(a[i] - b[i]);</span><br><span class="line">        v.<span class="built_in">push_back</span>(b[i] - a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x = b[i] - a[i];</span><br><span class="line">        <span class="type">int</span> y = a[i] - b[i];</span><br><span class="line">        <span class="type">int</span> id = <span class="built_in">upper_bound</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), x) - v.<span class="built_in">begin</span>() + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> id2 = <span class="built_in">upper_bound</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), y) - v.<span class="built_in">begin</span>() + <span class="number">1</span>;</span><br><span class="line">        ans += (i - <span class="number">1</span> - <span class="built_in">query</span>(id));</span><br><span class="line">        <span class="built_in">add</span>(id2, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="type">int</span> a[maxn],b[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">        v.<span class="built_in">push_back</span>(a[i] - b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> id = <span class="built_in">upper_bound</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), b[i] - a[i]) - v.<span class="built_in">begin</span>();</span><br><span class="line">        ans += (n  - id);</span><br><span class="line">        <span class="keyword">if</span>(a[i]-b[i]&gt;b[i]-a[i])</span><br><span class="line">            ans--;</span><br><span class="line">    &#125;</span><br><span class="line">    ans /= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!--more--><p>线段树<br>模板</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">SegTree</span> &#123;</span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> lson l,mid,rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> rson mid+1,r,rt&lt;&lt;1|1</span></span><br><span class="line">    ll a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line">    <span class="type">int</span> tag[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">        a[rt] = <span class="built_in">min</span>(a[rt &lt;&lt; <span class="number">1</span>], a[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> rt,<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        a[rt] += x;</span><br><span class="line">        tag[rt] += x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!tag[rt])</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">push</span>(rt &lt;&lt; <span class="number">1</span>, tag[rt]);</span><br><span class="line">        <span class="built_in">push</span>(rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, tag[rt]);</span><br><span class="line">        tag[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> l = <span class="number">1</span>,<span class="type">int</span> r = n,<span class="type">int</span> rt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l==r) &#123;</span><br><span class="line">            a[rt] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">build</span>(lson), <span class="built_in">build</span>(rson);</span><br><span class="line">        <span class="built_in">pushup</span>(rt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> L, <span class="type">int</span> R, <span class="type">int</span> x, <span class="type">int</span> l = <span class="number">1</span>, <span class="type">int</span> r = n,<span class="type">int</span> rt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R) &#123;</span><br><span class="line">            <span class="built_in">push</span>(rt, x);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">pushdown</span>(rt);</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=m)</span><br><span class="line">            <span class="built_in">update</span>(L, R, x, lson);</span><br><span class="line">        <span class="keyword">if</span>(R&gt;m)</span><br><span class="line">            <span class="built_in">update</span>(L, R, x, rson);</span><br><span class="line">        <span class="built_in">pushup</span>(rt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> L, <span class="type">int</span> R, <span class="type">int</span> l = <span class="number">1</span>, <span class="type">int</span> r = n,<span class="type">int</span> rt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R) &#123;</span><br><span class="line">            <span class="keyword">return</span> a[rt];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> m = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">pushdown</span>(rt);</span><br><span class="line">        <span class="keyword">if</span>(R&lt;=m)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(L, R, lson);</span><br><span class="line">        <span class="keyword">if</span>(L&gt;m)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(L, R, rson);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>(<span class="built_in">query</span>(L, R, lson), <span class="built_in">query</span>(L, R, rson));</span><br><span class="line">    &#125;</span><br><span class="line">&#125; f;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>快速幂</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E5%BF%AB%E9%80%9F%E5%B9%82/</url>
      
        <content type="html"><![CDATA[<p>快速幂方法1：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>3</mn><mn>11</mn></msup><mo>=</mo><msup><mn>3</mn><mn>1</mn></msup><mo>×</mo><msup><mn>3</mn><mn>2</mn></msup><mo>×</mo><msup><mn>3</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">3^{11} = 3^1 \times 3^2 \times 3^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">qpow</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x,<span class="type">int</span> n,<span class="type">long</span> <span class="type">long</span> mod)</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) <span class="comment">// 二进制最低位为1，则乘上x^(2^i)</span></span><br><span class="line">            res = res * x % mod;</span><br><span class="line">        x = x * x % mod;</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>快速幂方法2：<br>若n为奇数，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><msup><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><mfrac><mi>n</mi><mn>2</mn></mfrac></msup><mo>×</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">ans = {(x^2)}^{\frac{n}{2}} \times x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.301088em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.051088em;"><span style="top:-3.567008em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// n&amp;1 : (x^2)^(n/2)*x</span></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">mod_pow</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x,<span class="type">int</span> n,<span class="type">long</span> <span class="type">long</span> mod)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> res = <span class="built_in">mod_pow</span>(x * x % mod, n / <span class="number">2</span>, mod);</span><br><span class="line">    <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">        res = res * x % mod;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>扩展GCD</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E6%89%A9%E5%B1%95GCD/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E6%89%A9%E5%B1%95GCD/</url>
      
        <content type="html"><![CDATA[<h1 id="扩展gcd"><a class="markdownIt-Anchor" href="#扩展gcd"></a> 扩展GCD</h1><p>给定a,b</p><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mo>=</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ax=1(mod \ b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> 的最小整数解</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">ll x, y;</span><br><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a, ll b, ll &amp;x, ll &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    ll d = <span class="built_in">exgcd</span>(b, a % b, x, y);</span><br><span class="line">    ll t = x;</span><br><span class="line">    x = y, y = t - y * (a / b);</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll a,b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="built_in">exgcd</span>(a, b, x, y);</span><br><span class="line">    ll ans = (x + b) % b;<span class="comment">//最小整数解</span></span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">liEu</span><span class="params">(ll a, ll b, ll c, ll &amp;x, ll &amp;y)</span> </span>&#123;</span><br><span class="line">  ll d = <span class="built_in">exgcd</span>(a, b, x, y);</span><br><span class="line">  <span class="keyword">if</span> (c % d != <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  ll k = c / d;</span><br><span class="line">  x *= k;</span><br><span class="line">  y *= k;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h2><h3 id="axbycz-k"><a class="markdownIt-Anchor" href="#axbycz-k"></a> ax+by+cz == k</h3><p><a href="https://ac.nowcoder.com/acm/contest/4853/D">https://ac.nowcoder.com/acm/contest/4853/D</a></p><p>题意</p><blockquote><p>求x,y,z,使得ax+by+cz ==k</p><p>保证给出的a,b,c,k有解</p></blockquote><p>思路</p><blockquote><p>因为ax+by == gcd(a,b)有解</p><p>只要让gcd(a,b)==1,那么肯定能得到akx+bky == k</p><p>本来只想用a,b来找答案的,但是发现不行,枚举了一下ab,bc,ac就过了</p></blockquote><p>代码 :  <a href="https://xlorpaste.cn/vp0m4u">https://xlorpaste.cn/vp0m4u</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>概率</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E6%A6%82%E7%8E%87/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E6%A6%82%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<h1 id="lucky-draw"><a class="markdownIt-Anchor" href="#lucky-draw"></a> Lucky Draw</h1><p><a href="https://nanti.jisuanke.com/t/44330">https://nanti.jisuanke.com/t/44330</a></p><p>题意</p><blockquote><p>硬币掷到反面则丢掉一条命</p><p>现在有n个人,每个人有k条命,每次掷到正面的概率为p</p><p>现在问平局的概率为多少?(也就是全输)</p></blockquote><p>思路</p><blockquote><p>两个结局:有一个人胜出或者平局</p><p>只要算有一个人赢了的情况,乘n</p><p>考虑误差:将回合数设为1000</p></blockquote><p>代码 : <a href="https://xlorpaste.cn/g22mb4">https://xlorpaste.cn/g22mb4</a></p><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数论</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<p>数论相关的题目</p><span id="more"></span><h1 id="盒子-组合数"><a class="markdownIt-Anchor" href="#盒子-组合数"></a> 盒子-组合数</h1><p>隔板法；</p><p>子问题：给定n个物品，将它们分成m堆，保证每堆的物品个数不少于h个</p><p>则有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>n</mi><mo>−</mo><mi>m</mi><mo>∗</mo><mi>h</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">C_{n-m*h-1}^{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2138779999999998em;vertical-align:-0.35963899999999993em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.398692em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35963899999999993em;"><span></span></span></span></span></span></span></span></span></span>种分割方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> dbg(args...) do &#123;cout &lt;&lt; #args &lt;&lt; <span class="string">&quot; : &quot;</span>&lt;&lt; args &lt;&lt; endl;&#125; </span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[maxn],inv[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=maxn<span class="number">-1</span>;i++)f[i]=f[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">    inv[maxn<span class="number">-1</span>]=<span class="built_in">qpow</span>(f[maxn<span class="number">-1</span>],mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=maxn<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)inv[i]=inv[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[n]*inv[m]%mod*inv[n-m]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> f,w,h;</span><br><span class="line">    cin&gt;&gt;f&gt;&gt;w&gt;&gt;h;</span><br><span class="line">    <span class="type">int</span> fm=<span class="number">0</span>,fz=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w;i++)&#123;</span><br><span class="line">        fm+=(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f+<span class="number">1</span>,i))%mod;</span><br><span class="line">        fm%=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w/(h+<span class="number">1</span>);i++)&#123;</span><br><span class="line">        fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f+<span class="number">1</span>,i)%mod;</span><br><span class="line">        fz%=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=fz*<span class="built_in">qpow</span>(fm,mod<span class="number">-2</span>)%mod;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>组合数部分：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w;i++)&#123;</span><br><span class="line">        fm=fm+(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i<span class="number">-1</span>))*<span class="number">2</span>%mod;</span><br><span class="line">        fm=fm+(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i<span class="number">-2</span>))%mod;</span><br><span class="line">        fm=fm+(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i))%mod;</span><br><span class="line">        fm%=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w/(h+<span class="number">1</span>);i++)&#123;</span><br><span class="line">        fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="number">2</span>%mod;</span><br><span class="line">        fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i<span class="number">-2</span>)%mod;</span><br><span class="line">        fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i)%mod;</span><br><span class="line">        fz%=mod;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以合并为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w;i++)&#123;</span><br><span class="line">    fm+=(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f+<span class="number">1</span>,i))%mod;</span><br><span class="line">    fm%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w/(h+<span class="number">1</span>);i++)&#123;</span><br><span class="line">    fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f+<span class="number">1</span>,i)%mod;</span><br><span class="line">    fz%=mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="找质数-素数筛"><a class="markdownIt-Anchor" href="#找质数-素数筛"></a> 找质数-素数筛</h3><p>因为数字范围<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mo>=</mo><mn>1</mn><mi>e</mi><mn>14</mn></mrow><annotation encoding="application/x-tex">&lt;=1e14</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathnormal">e</span><span class="mord">1</span><span class="mord">4</span></span></span></span>,所以在快速幂的过程中会爆long long，要用__int128</p><p>也可以结合费马小定理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo>=</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a^{p-1} \  mod \ p == 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>,P为质数，已知质数间隔小于200</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">1e7</span>;</span><br><span class="line"><span class="function">__int128 <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">__int128 x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(__int128 x)</span></span>&#123;<span class="comment">/*__int128输出*/</span></span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>),x=-x;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">print</span>(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Prime</span>&#123;</span><br><span class="line">    <span class="type">int</span> prime_cnt;</span><br><span class="line">    <span class="type">int</span> prime[maxn+<span class="number">5</span>],vis[maxn+<span class="number">5</span>];</span><br><span class="line">    <span class="type">int</span> p[maxn+<span class="number">5</span>];</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Prime_init</span><span class="params">()</span></span>&#123;<span class="comment">/*将合数标记为vis[i]=1*/</span></span><br><span class="line">        prime_cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=maxn;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i])prime[++prime[<span class="number">0</span>]]=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>]&amp;&amp;i*prime[j]&lt;=maxn;j++)&#123;</span><br><span class="line">                vis[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*prime_cnt记录素数的数量*/</span><span class="comment">/*p数字记录每个素数*/</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;maxn;i++)<span class="keyword">if</span>(!vis[i])p[++prime_cnt]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(__int128 x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=prime_cnt;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p[i]&gt;=x)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(x%p[i]==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;F;</span><br><span class="line"><span class="function">__int128 <span class="title">qpow</span><span class="params">(__int128 a,__int128 b,__int128 mod)</span></span>&#123;<span class="comment">/*快速幂*/</span></span><br><span class="line">    __int128 res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;cin&gt;&gt;T;</span><br><span class="line">    F.<span class="built_in">Prime_init</span>();</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        __int128 a,p;p=<span class="built_in">read</span>(),a=<span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">for</span>(__int128 q=p<span class="number">-1</span>;q&gt;=<span class="number">1</span>;q--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(F.<span class="built_in">isprime</span>(q))&#123;</span><br><span class="line">                __int128 ans=<span class="built_in">qpow</span>(a,q,p);</span><br><span class="line">                <span class="built_in">print</span>(ans);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="矩阵快速幂"><a class="markdownIt-Anchor" href="#矩阵快速幂"></a> 矩阵快速幂</h2><h3 id="happy-necklace"><a class="markdownIt-Anchor" href="#happy-necklace"></a> Happy Necklace</h3><p>注意<strong>状态的转移</strong>，很有意思~</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> dbg(args...) do &#123;cout &lt;&lt; #args &lt;&lt; <span class="string">&quot; : &quot;</span>&lt;&lt; args &lt;&lt; endl;&#125; </span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">matrix</span>&#123;</span><br><span class="line">    <span class="type">int</span> m[N+<span class="number">1</span>][N+<span class="number">1</span>];</span><br><span class="line">&#125;;</span><br><span class="line">matrix e,d;</span><br><span class="line"><span class="function">matrix <span class="title">qpow</span><span class="params">(matrix a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    matrix ans=e;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            matrix x=d;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=N<span class="number">-1</span>;j++)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=N<span class="number">-1</span>;k++)</span><br><span class="line">                        x.m[i][j]=x.m[i][j]%mod+ans.m[i][k]*a.m[k][j]%mod;</span><br><span class="line">            ans=x;</span><br><span class="line">        &#125;</span><br><span class="line">        matrix x=d;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=N<span class="number">-1</span>;j++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=N<span class="number">-1</span>;k++)</span><br><span class="line">                    x.m[i][j]=x.m[i][j]%mod+a.m[i][k]*a.m[k][j]%mod;</span><br><span class="line">        a=x;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;<span class="built_in">scan</span>(T);</span><br><span class="line">    matrix base,m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=N<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            base.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            m.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            e.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            d.m[i][j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    base.m[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    base.m[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    base.m[<span class="number">2</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;m.m[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>;m.m[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;m.m[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;m.m[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">    m.m[<span class="number">2</span>][<span class="number">0</span>]=<span class="number">0</span>;m.m[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;m.m[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)e.m[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="type">int</span> n;<span class="built_in">scan</span>(n);</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)ans=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>)ans=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            matrix temp=<span class="built_in">qpow</span>(m,n<span class="number">-2</span>);</span><br><span class="line">            matrix x=d;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=N<span class="number">-1</span>;j++)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=N<span class="number">-1</span>;k++)</span><br><span class="line">                        x.m[i][j]=x.m[i][j]%mod+temp.m[i][k]*base.m[k][j]%mod;</span><br><span class="line">            temp=x;</span><br><span class="line">            ans=temp.m[<span class="number">0</span>][<span class="number">0</span>]+temp.m[<span class="number">1</span>][<span class="number">0</span>]+temp.m[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line">            ans%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="recursive-sequence"><a class="markdownIt-Anchor" href="#recursive-sequence"></a> Recursive sequence</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">8</span>;<span class="comment">//N个系数，N维矩阵</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">2147493647</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">matrix</span>&#123;<span class="type">int</span> m[<span class="number">10</span>][<span class="number">10</span>];&#125;;</span><br><span class="line">matrix ans,base,m;</span><br><span class="line"><span class="type">int</span> n,a,b;</span><br><span class="line"><span class="function">matrix <span class="title">multi</span><span class="params">(matrix a, matrix b)</span></span>&#123;</span><br><span class="line">    matrix tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=N;++j)&#123;</span><br><span class="line">            tmp.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=N;++k)</span><br><span class="line">                tmp.m[i][j]=(tmp.m[i][j]+(a.m[i][k]*b.m[k][j]))%mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">matrix <span class="title">fastm</span><span class="params">(matrix base, <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    matrix ans;</span><br><span class="line">    <span class="built_in">memset</span>(ans.m,<span class="number">0</span>,<span class="built_in">sizeof</span>(ans.m));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=N;i++)ans.m[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)ans=<span class="built_in">multi</span>(ans,base);</span><br><span class="line">        base=<span class="built_in">multi</span>(base, base);</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    matrix m,ans;</span><br><span class="line">    <span class="built_in">memset</span>(m.m,<span class="number">0</span>,<span class="built_in">sizeof</span>(m.m));</span><br><span class="line">    m.m[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;m.m[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">2</span>;m.m[<span class="number">1</span>][<span class="number">4</span>]=<span class="number">1</span>;m.m[<span class="number">1</span>][<span class="number">5</span>]=<span class="number">4</span>;m.m[<span class="number">1</span>][<span class="number">6</span>]=<span class="number">6</span>;m.m[<span class="number">1</span>][<span class="number">7</span>]=<span class="number">4</span>;m.m[<span class="number">1</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">4</span>][<span class="number">4</span>]=<span class="number">1</span>;m.m[<span class="number">4</span>][<span class="number">5</span>]=<span class="number">4</span>;m.m[<span class="number">4</span>][<span class="number">6</span>]=<span class="number">6</span>;m.m[<span class="number">4</span>][<span class="number">7</span>]=<span class="number">4</span>;m.m[<span class="number">4</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">5</span>][<span class="number">5</span>]=<span class="number">1</span>;m.m[<span class="number">5</span>][<span class="number">6</span>]=<span class="number">3</span>;m.m[<span class="number">5</span>][<span class="number">7</span>]=<span class="number">3</span>;m.m[<span class="number">5</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">6</span>][<span class="number">6</span>]=<span class="number">1</span>;m.m[<span class="number">6</span>][<span class="number">7</span>]=<span class="number">2</span>;m.m[<span class="number">6</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">7</span>][<span class="number">7</span>]=<span class="number">1</span>;m.m[<span class="number">7</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">8</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> T;<span class="built_in">scan</span>(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scannn</span>(n,a,b);</span><br><span class="line">        ans = <span class="built_in">fastm</span>(m,n<span class="number">-3</span>);</span><br><span class="line">        <span class="type">int</span> f[<span class="number">10</span>],x=<span class="number">0</span>;</span><br><span class="line">        f[<span class="number">3</span>]=a,f[<span class="number">2</span>]=b,f[<span class="number">1</span>]=(<span class="number">2</span>*a+b+<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>),f[<span class="number">4</span>]=<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>,f[<span class="number">5</span>]=<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>,f[<span class="number">6</span>]=<span class="number">3</span>*<span class="number">3</span>,f[<span class="number">7</span>]=<span class="number">3</span>,f[<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,<span class="number">8</span>)&#123;</span><br><span class="line">            x=x%mod+((f[i]%mod)*(ans.m[<span class="number">1</span>][i])%mod)%mod;</span><br><span class="line">            x%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>矩阵快速幂，用于求解递推式。</p>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>组合数</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>5</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1+3+5+...+(2*n-1) = n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>6</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2+4+6+...+(2*n) = n*(n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mi>n</mi><mo>=</mo><mfrac><mrow><mi>n</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">1+2+3+...+n = \frac{n*(n+1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">∗</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mi>m</mi></msubsup><mo>=</mo><msubsup><mi>C</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo>+</mo><msubsup><mi>C</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{n}^{m}= C_{n-1}^{m-1} + C_{n-1}^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93033em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.178878em;vertical-align:-0.324639em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.324639em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9897689999999999em;vertical-align:-0.30643899999999996em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6643919999999999em;"><span style="top:-2.451892em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30643899999999996em;"><span></span></span></span></span></span></span></span></span></span></p><span id="more"></span><h1 id="模板"><a class="markdownIt-Anchor" href="#模板"></a> 模板</h1><h2 id="取模"><a class="markdownIt-Anchor" href="#取模"></a> 取模</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> f[maxn],inv[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=maxn<span class="number">-1</span>;i++)f[i]=f[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">    inv[maxn<span class="number">-1</span>]=<span class="built_in">qpow</span>(f[maxn<span class="number">-1</span>],mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=maxn<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)inv[i]=inv[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[n]*inv[m]%mod*inv[n-m]%mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数值较小且不可以取模"><a class="markdownIt-Anchor" href="#数值较小且不可以取模"></a> 数值较小,且不可以取模</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">double</span> c[maxn][maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; maxn;i++) &#123;</span><br><span class="line">        c[i][<span class="number">0</span>] = c[i][i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>;j&lt;i;j++) &#123;</span><br><span class="line">            c[i][j] = c[i - <span class="number">1</span>][j] + c[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e6</span>+<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> f[maxn],inv[maxn];</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">qpow</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a,<span class="type">long</span> <span class="type">long</span> b)</span></span>&#123; </span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=maxn<span class="number">-1</span>;i++)f[i]=f[i<span class="number">-1</span>]*i%mod; <span class="comment">// A(i,i)</span></span><br><span class="line">    inv[maxn<span class="number">-1</span>]=<span class="built_in">qpow</span>(f[maxn<span class="number">-1</span>],mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=maxn<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)inv[i]=inv[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">C</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[n]*inv[m]%mod*inv[n-m]%mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数值较小,且不可以取模</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">double</span> c[maxn][maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; maxn;i++) &#123;</span><br><span class="line">        c[i][<span class="number">0</span>] = c[i][i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>;j&lt;i;j++) &#123;</span><br><span class="line">            c[i][j] = c[i - <span class="number">1</span>][j] + c[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AC自动机</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>AC自动机</p><span id="more"></span><h2 id="模板"><a class="markdownIt-Anchor" href="#模板"></a> 模板</h2><p>找到有多少个匹配的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cc = <span class="number">26</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ACAM</span>&#123;</span><br><span class="line">    <span class="type">int</span> ch[maxn][cc], fail[maxn];</span><br><span class="line">    <span class="type">int</span> end[maxn], idx[maxn];</span><br><span class="line">    <span class="type">int</span> tot;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">ms</span>(ch, <span class="number">0</span>), <span class="built_in">ms</span>(end, <span class="number">0</span>), <span class="built_in">ms</span>(fail, <span class="number">0</span>);</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> *s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> u = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; s[i];i++) &#123;</span><br><span class="line">            <span class="type">int</span> v = s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!ch[u][v]) &#123;</span><br><span class="line">                ch[u][v] = ++tot;</span><br><span class="line">            &#125;</span><br><span class="line">            u = ch[u][v];</span><br><span class="line">        &#125;</span><br><span class="line">        end[u]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cc; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch[<span class="number">0</span>][i])</span><br><span class="line">                q.<span class="built_in">push</span>(ch[<span class="number">0</span>][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="type">int</span> u = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> v = <span class="number">0</span>; v &lt; cc;v++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(ch[u][v]) &#123;</span><br><span class="line">                    fail[ch[u][v]] = ch[fail[u]][v];</span><br><span class="line">                    q.<span class="built_in">push</span>(ch[u][v]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ch[u][v] = ch[fail[u]][v];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">char</span> *t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> u = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; t[i];i++) &#123;</span><br><span class="line">            <span class="type">int</span> v = t[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            u = ch[u][v];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = u; j &amp;&amp; end[j] != <span class="number">-1</span>;j = fail[j]) &#123;</span><br><span class="line">                res += end[j], end[j] = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; ac;</span><br><span class="line"><span class="type">char</span> s[maxn];</span><br><span class="line"><span class="type">char</span> t[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">            ac.<span class="built_in">insert</span>(s);</span><br><span class="line">        &#125;</span><br><span class="line">        ac.<span class="built_in">build</span>();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, t);</span><br><span class="line">        cout &lt;&lt; ac.<span class="built_in">query</span>(t) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到匹配次数最多的模板串</p><p><a href="https://www.luogu.com.cn/problem/P3796">https://www.luogu.com.cn/problem/P3796</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">155</span> * <span class="number">75</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cc = <span class="number">26</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">AC</span>&#123;</span><br><span class="line">    <span class="type">int</span> ch[maxn][cc], fail[maxn];</span><br><span class="line">    <span class="type">int</span> idx[maxn], val[maxn], cnt[maxn];</span><br><span class="line">    <span class="type">int</span> tot;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">ms</span>(ch, <span class="number">0</span>), <span class="built_in">ms</span>(fail, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">ms</span>(idx, <span class="number">0</span>), <span class="built_in">ms</span>(val, <span class="number">0</span>), <span class="built_in">ms</span>(cnt, <span class="number">0</span>);</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> *s,<span class="type">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> u = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line">            <span class="type">int</span> v = s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!ch[u][v]) &#123;</span><br><span class="line">                ch[u][v] = ++tot;</span><br><span class="line">            &#125;</span><br><span class="line">            u = ch[u][v];</span><br><span class="line">        &#125;</span><br><span class="line">        idx[id] = u;<span class="comment">//如果有重复字符串,并不影响答案</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch[<span class="number">0</span>][i])</span><br><span class="line">                q.<span class="built_in">push</span>(ch[<span class="number">0</span>][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="type">int</span> u = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> v = <span class="number">0</span>; v &lt; <span class="number">26</span>;v++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(ch[u][v]) &#123;</span><br><span class="line">                    fail[ch[u][v]] = ch[fail[u]][v];</span><br><span class="line">                    q.<span class="built_in">push</span>(ch[u][v]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ch[u][v] = ch[fail[u]][v];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">char</span> *t)</span> </span>&#123; <span class="comment">//返回出现的最大次数</span></span><br><span class="line">        <span class="type">int</span> u = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; t[i];i++) &#123;</span><br><span class="line">            <span class="type">int</span> v = t[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            u = ch[u][v];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = u; j;j = fail[j]) &#123;</span><br><span class="line">                val[j]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= tot; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (idx[i]) &#123;</span><br><span class="line">                res = <span class="built_in">max</span>(res, val[i]);</span><br><span class="line">                cnt[idx[i]] = val[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; ac;</span><br><span class="line"><span class="type">char</span> s[<span class="number">200</span>][<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> t[<span class="number">1000005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n)&amp;&amp;n!=<span class="number">0</span>) &#123;</span><br><span class="line">        ac.<span class="built_in">init</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s[i]);</span><br><span class="line">            ac.<span class="built_in">insert</span>(s[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">        ac.<span class="built_in">build</span>();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, t);</span><br><span class="line">        <span class="type">int</span> mx = ac.<span class="built_in">query</span>(t);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, mx);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(ac.cnt[i]==mx) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出每个模式串在文本串中出现的次数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cc = <span class="number">26</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">AC</span>&#123;</span><br><span class="line">    <span class="type">int</span> ch[maxn][cc], fail[maxn];</span><br><span class="line">    <span class="type">int</span> idx[maxn], siz[maxn];</span><br><span class="line">    <span class="type">int</span> tot;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">ms</span>(ch, <span class="number">0</span>), <span class="built_in">ms</span>(fail, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">ms</span>(idx, <span class="number">0</span>), <span class="built_in">ms</span>(siz, <span class="number">0</span>);</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> *s,<span class="type">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> u = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line">            <span class="type">int</span> v = s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!ch[u][v]) &#123;</span><br><span class="line">                ch[u][v] = ++tot;</span><br><span class="line">            &#125;</span><br><span class="line">            u = ch[u][v];</span><br><span class="line">        &#125;</span><br><span class="line">        idx[id] = u;<span class="comment">//将第id个模式串对应的节点标记出来(可以重复)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch[<span class="number">0</span>][i])</span><br><span class="line">                q.<span class="built_in">push</span>(ch[<span class="number">0</span>][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="type">int</span> u = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> v = <span class="number">0</span>; v &lt; <span class="number">26</span>;v++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(ch[u][v]) &#123;</span><br><span class="line">                    fail[ch[u][v]] = ch[fail[u]][v];</span><br><span class="line">                    q.<span class="built_in">push</span>(ch[u][v]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ch[u][v] = ch[fail[u]][v];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(v);</span><br><span class="line">            siz[u] += siz[v];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">query</span><span class="params">(<span class="type">char</span> *t)</span> </span>&#123; <span class="comment">//计算每个模式串出现的次数</span></span><br><span class="line">        <span class="type">int</span> u = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= tot; i++) e[i].<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; t[i];i++) &#123;</span><br><span class="line">            <span class="type">int</span> v = t[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            u = ch[u][v];</span><br><span class="line">            siz[u]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=tot;i++) &#123;</span><br><span class="line">            e[fail[i]].<span class="built_in">push_back</span>(i);<span class="comment">//建fail树</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; ac;</span><br><span class="line"><span class="type">char</span> s[maxn];</span><br><span class="line"><span class="type">char</span> t[<span class="number">2000005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">        ac.<span class="built_in">insert</span>(s, i);</span><br><span class="line">    &#125;</span><br><span class="line">    ac.<span class="built_in">build</span>();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, t);</span><br><span class="line">    ac.<span class="built_in">query</span>(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ac.siz[ac.idx[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h2><h3 id="小明系列故事-女友的考验"><a class="markdownIt-Anchor" href="#小明系列故事-女友的考验"></a> 小明系列故事-女友的考验</h3><p>题意</p><blockquote><p>从1号点走到n号点,路径只能按照升序</p><p>给定m条限制,这m条路径是不可以走的</p><p>请问从1到n的最短路径是什么</p></blockquote><p>思路</p><blockquote><p>在Tire图中,每一个结点代表一个前缀</p><p>把不可以走的路径放到Tire图里面,这样每个结点代表一个状态,如果那个状态被标记,则代表不可以走,这样在最短路的时候就不可以算这个点</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>表示在第i个点,状态是j</p><p>具体看代码</p></blockquote><p>代码 : <a href="http://xlorpaste.cn/knri9b">http://xlorpaste.cn/knri9b</a></p><p>注意</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">end[u] |= end[fail[u]];<span class="comment">//把危险节点都标记上</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>链表</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/remove-nth-node-from-end-of-list/">https://leetcode.cn/problems/remove-nth-node-from-end-of-list/</a></p><p>使用快慢指针，让nxt指针先向后移动N次</p><p>这样nxt指针和pre指针之间的间隔则为N</p><p>然后，nxt和pre同时向后移动，当nxt移动到链表的尾部，pre依然和它间隔为N，那么此时的pre就是链表的倒数第N个节点了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        ListNode* pre = head;</span><br><span class="line">        ListNode* nxt = head;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            nxt = nxt-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nxt == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(nxt!=<span class="literal">nullptr</span>) &#123;</span><br><span class="line">            nxt = nxt-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(nxt == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">                cout&lt;&lt;pre-&gt;val&lt;&lt;endl;</span><br><span class="line">                pre-&gt;next = pre-&gt;next-&gt;next;</span><br><span class="line">                <span class="keyword">return</span> head;                </span><br><span class="line">            &#125;</span><br><span class="line">            pre = pre-&gt;next;</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>序列自动机</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="模板"><a class="markdownIt-Anchor" href="#模板"></a> 模板</h1><p>查找主串中的子序列</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> nxt[maxn][<span class="number">26</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[maxn], t[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s + <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">26</span>; j++) &#123;</span><br><span class="line">            nxt[i - <span class="number">1</span>][j] = nxt[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        nxt[i - <span class="number">1</span>][s[i] - <span class="string">&#x27;a&#x27;</span>] = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, t);</span><br><span class="line">        <span class="type">int</span> len1 = <span class="built_in">strlen</span>(t);</span><br><span class="line">        <span class="type">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, u = <span class="number">0</span>; i &lt; len1; i++) &#123;</span><br><span class="line">            <span class="type">int</span> v = t[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            u = nxt[u][v];</span><br><span class="line">            <span class="keyword">if</span>(u==<span class="number">0</span>) &#123;</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Manacher</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/%E9%A9%AC%E6%8B%89%E8%BD%A6/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/%E9%A9%AC%E6%8B%89%E8%BD%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="模板"><a class="markdownIt-Anchor" href="#模板"></a> 模板</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> s[maxn &lt;&lt; <span class="number">1</span>] = <span class="string">&quot;##&quot;</span>;</span><br><span class="line"><span class="type">int</span> n, hw[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> l[maxn &lt;&lt; <span class="number">1</span>], r[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">manacher</span><span class="params">(<span class="type">char</span>* a)</span> </span>&#123;<span class="comment">//字符串a下标从0开始</span></span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        s[i * <span class="number">2</span> + <span class="number">2</span>] = a[i];</span><br><span class="line">        s[i * <span class="number">2</span> + <span class="number">3</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    n = len * <span class="number">2</span> + <span class="number">2</span>;</span><br><span class="line">    s[n] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> maxr = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; maxr)</span><br><span class="line">            hw[i] = <span class="built_in">min</span>(hw[m * <span class="number">2</span> - i], hw[m] + m - i);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            hw[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (s[i + hw[i]] == s[i - hw[i]]) hw[i]++;</span><br><span class="line">        <span class="keyword">if</span> (hw[i] + i &gt; maxr) &#123;</span><br><span class="line">            m = i;</span><br><span class="line">            maxr = hw[i] + i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><h2 id="最长双回文串"><a class="markdownIt-Anchor" href="#最长双回文串"></a> 最长双回文串</h2><p><a href="https://www.luogu.com.cn/problem/P4555">https://www.luogu.com.cn/problem/P4555</a></p><p>题意</p><blockquote><p>在给定的字符串中找到两个相邻的回文串,长度最长</p></blockquote><p>思路</p><blockquote><p>将Manacher处理后的&quot;#&quot;当作两个回文串的连接点</p></blockquote><p>注意这个处理步骤:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l[i + hw[i] - <span class="number">1</span>] = <span class="built_in">max</span>(l[i + hw[i] - <span class="number">1</span>], hw[i] - <span class="number">1</span>);</span><br><span class="line">r[i - hw[i] + <span class="number">1</span>] = <span class="built_in">max</span>(r[i - hw[i] + <span class="number">1</span>], hw[i] - <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>还有这个步骤:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n;i+=<span class="number">2</span>)</span><br><span class="line">    r[i] = <span class="built_in">max</span>(r[i], r[i - <span class="number">2</span>] - <span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>;i-=<span class="number">2</span>)</span><br><span class="line">    l[i] = <span class="built_in">max</span>(l[i], l[i + <span class="number">2</span>] - <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>代码 : <a href="https://xlorpaste.cn/jtcnhg">https://xlorpaste.cn/jtcnhg</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Tire字典树</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/Tire/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/Tire/</url>
      
        <content type="html"><![CDATA[<h3 id="bundling"><a class="markdownIt-Anchor" href="#bundling"></a> Bundling</h3><p><a href="https://codingcompetitions.withgoogle.com/kickstart/round/000000000019ffc7/00000000001d3ff3">https://codingcompetitions.withgoogle.com/kickstart/round/000000000019ffc7/00000000001d3ff3</a></p><p>题意</p><blockquote><p>将给定的n个字符串划分为大小为k的组,每组的权值为这些字符串的最长公共前缀</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">∣</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">\sum n \leq 10^6,k|n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">∣</span><span class="mord mathnormal">n</span></span></span></span></p></blockquote><p>思路</p><blockquote><p>构建一棵字典树,每一个节点对应一个前缀,对于每个前缀,如果它出现的次数大于k,那么它对答案有贡献,加上即可</p></blockquote><p>代码: <a href="https://xlorpaste.cn/0ve9u4">https://xlorpaste.cn/0ve9u4</a></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>树</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%A0%91/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<ul><li>基环树</li><li>DFS树</li></ul><span id="more"></span><p>[CF1325C] Ehab and Path-etic MEXS<br><a href="https://codeforces.com/contest/1325/problem/C">https://codeforces.com/contest/1325/problem/C</a></p><p>给一棵树的边附上0~n-2的权值,使得Mex(u,v)的最大值最小</p><p>思路:只需要考虑0,1,2的情况</p><p>对于所有不经过0的路径,mex = 0</p><p>对于所有不经过1\2,但经过0的路径,mex = 1\2</p><p>这样就可以满足所有情况</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> to, id;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node&gt; e[maxn];</span><br><span class="line"><span class="type">int</span> x[maxn], y[maxn];</span><br><span class="line"><span class="type">int</span> vis[maxn];</span><br><span class="line"><span class="type">int</span> ans[maxn];</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> sz = e[u].<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sz;i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = e[u][i].to;</span><br><span class="line">        <span class="type">int</span> id = e[u][i].id;</span><br><span class="line">        <span class="keyword">if</span>(v==fa||vis[id])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        ans[id] = l++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i&lt;sz;i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = e[u][i].to;</span><br><span class="line">        <span class="type">int</span> id = e[u][i].id;</span><br><span class="line">        <span class="keyword">if</span>(v==fa||vis[id])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        vis[id]++;</span><br><span class="line">        <span class="built_in">dfs</span>(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x[i], &amp;y[i]);</span><br><span class="line">        e[x[i]].<span class="built_in">push_back</span>((node)&#123;y[i], i&#125;);</span><br><span class="line">        e[y[i]].<span class="built_in">push_back</span>((node)&#123;x[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    l = <span class="number">0</span>, r = n - <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> d = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> sz = e[i].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(sz&gt;d) &#123;</span><br><span class="line">            d = sz;</span><br><span class="line">            m = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">dfs</span>(m, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[CF1325F]Ehab’s Last Theorem<br>令t为ceil(sqrt(n))</p><p>解法一:考虑DFS树的原理,如果从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">u</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>,经过的不是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>这条边,说明先前存在另一条路径使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">u</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>,那么此时可以形成一个环,具体的见这篇文章: <a href="https://codeforces.com/blog/entry/68138">https://codeforces.com/blog/entry/68138</a></p><p>并且!如果一个点的dfs子树中所有的点都不能与它满足构成长度大于t的环这个条件,也就是情况2,那么这个点就可以存在于独立点集中</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!vis[u]) &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">           vis[v] = <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>u必然不会存在与一个长度大于t的环当中,那么它必然在独立集里,则把它的连边全部标记起来。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> dep[maxn];</span><br><span class="line"><span class="type">int</span> f[maxn],vis[maxn];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dep[v]) &#123;</span><br><span class="line">            dep[v] = dep[u] + <span class="number">1</span>;</span><br><span class="line">            f[v] = u;</span><br><span class="line">            <span class="built_in">dfs</span>(v, u);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(dep[v]-dep[u]+<span class="number">1</span>&gt;=t) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">                <span class="type">int</span> len = dep[v] - dep[u] + <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, len);</span><br><span class="line">                <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(v) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(cnt==len)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, v);</span><br><span class="line">                    v = f[v];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!vis[u]) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">            vis[v] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    t = <span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(n));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        e[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    dep[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt==t)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解法2：</p><p>一个结论：如果一张图里的每个点的度数都大于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>,那么必然存在一个环，长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>在寻找环的过程中将所有度数小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的点的邻边都删掉，这个点作为独立集的备选</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line">set&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt; s;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v[maxn];</span><br><span class="line"><span class="type">bool</span> del[maxn];</span><br><span class="line"><span class="type">int</span> deg[maxn],occ[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">remove</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (del[x])</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    s.<span class="built_in">erase</span>(&#123;deg[x],x&#125;);</span><br><span class="line">    del[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> u:v[x])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!del[u])</span><br><span class="line">        &#123;</span><br><span class="line">            s.<span class="built_in">erase</span>(&#123;deg[u],u&#125;);</span><br><span class="line">            deg[u]--;</span><br><span class="line">            s.<span class="built_in">insert</span>(&#123;deg[u],u&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m,sq;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    sq = <span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(n));</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">        v[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">        v[b].<span class="built_in">push_back</span>(a);</span><br><span class="line">        deg[a]++;</span><br><span class="line">        deg[b]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    s.<span class="built_in">insert</span>(&#123;deg[i],i&#125;);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">while</span> (!s.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> p=*s.<span class="built_in">begin</span>();</span><br><span class="line">        s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>());</span><br><span class="line">        <span class="keyword">if</span> (p.first+<span class="number">1</span>&gt;=sq)<span class="comment">//度数大于等于sq-1</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">            <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">d</span><span class="params">(&#123;p.second&#125;)</span></span>;</span><br><span class="line">            occ[p.second]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="function">pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; <span class="title">nex</span><span class="params">(<span class="number">1e9</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> u:v[d.<span class="built_in">back</span>()])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!del[u])</span><br><span class="line">                    nex=<span class="built_in">min</span>(nex,<span class="built_in">make_pair</span>(occ[u],u));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (nex.first)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="type">int</span>)d.<span class="built_in">size</span>()-nex.first+<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> i=nex.first<span class="number">-1</span>;i&lt;d.<span class="built_in">size</span>();i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,d[i]);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                d.<span class="built_in">push_back</span>(nex.second);</span><br><span class="line">                occ[nex.second]=d.<span class="built_in">size</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//度数小于sq-1</span></span><br><span class="line">        ans.<span class="built_in">push_back</span>(p.second);</span><br><span class="line">        <span class="built_in">remove</span>(p.second);<span class="comment">//删除所有邻边</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> u:v[p.second])<span class="comment">//双向删除</span></span><br><span class="line">        <span class="built_in">remove</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;sq;i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[CF1139C] Edgy Tree<br><a href="https://codeforces.com/contest/1139/problem/C">https://codeforces.com/contest/1139/problem/C</a></p><p>题意:一棵树,且需要构建长度为k的序列,序列中相邻两点的路径一定经过”黑边”,节点可以重复</p><p>思路:”黑边”不加入连通块,将”红边”的各个连通块的大小找出来,减去这一部分构造的长度为k的序列</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line"><span class="type">int</span> vis[maxn];</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> add(x, y) (x + y) % mod;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> sz = e[u].<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ret = <span class="number">1</span>;</span><br><span class="line">    vis[u]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sz;i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = e[u][i];</span><br><span class="line">        <span class="keyword">if</span>(v==fa||vis[v])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ret += <span class="built_in">dfs</span>(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">qpow</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x,<span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(k) &#123;</span><br><span class="line">        <span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">            ret = ret * x % mod;</span><br><span class="line">        x = x * x % mod;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y, w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;w);</span><br><span class="line">        <span class="keyword">if</span>(!w) &#123;</span><br><span class="line">            e[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">            e[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (vis[i])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> cnt = <span class="built_in">dfs</span>(i, <span class="number">-1</span>);</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> x = <span class="built_in">qpow</span>(cnt, k);</span><br><span class="line">        sum = <span class="built_in">add</span>(sum, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="built_in">qpow</span>(n, k);</span><br><span class="line">    ans = (ans - sum + mod) % mod;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>线段树</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<h1 id="模板"><a class="markdownIt-Anchor" href="#模板"></a> 模板</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">SegTree</span> &#123;</span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> lson l,mid,rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> rson mid+1,r,rt&lt;&lt;1|1</span></span><br><span class="line">    ll a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line">    <span class="type">int</span> tag[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">        a[rt] = <span class="built_in">min</span>(a[rt &lt;&lt; <span class="number">1</span>], a[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> rt,<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        a[rt] += x;</span><br><span class="line">        tag[rt] += x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!tag[rt])</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">push</span>(rt &lt;&lt; <span class="number">1</span>, tag[rt]);</span><br><span class="line">        <span class="built_in">push</span>(rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, tag[rt]);</span><br><span class="line">        tag[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> l = <span class="number">1</span>,<span class="type">int</span> r = n,<span class="type">int</span> rt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l==r) &#123;</span><br><span class="line">            a[rt] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">build</span>(lson), <span class="built_in">build</span>(rson);</span><br><span class="line">        <span class="built_in">pushup</span>(rt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> L, <span class="type">int</span> R, <span class="type">int</span> x, <span class="type">int</span> l = <span class="number">1</span>, <span class="type">int</span> r = n,<span class="type">int</span> rt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R) &#123;</span><br><span class="line">            <span class="built_in">push</span>(rt, x);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">pushdown</span>(rt);</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=m)</span><br><span class="line">            <span class="built_in">update</span>(L, R, x, lson);</span><br><span class="line">        <span class="keyword">if</span>(R&gt;m)</span><br><span class="line">            <span class="built_in">update</span>(L, R, x, rson);</span><br><span class="line">        <span class="built_in">pushup</span>(rt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> L, <span class="type">int</span> R, <span class="type">int</span> l = <span class="number">1</span>, <span class="type">int</span> r = n,<span class="type">int</span> rt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R) &#123;</span><br><span class="line">            <span class="keyword">return</span> a[rt];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> m = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">pushdown</span>(rt);</span><br><span class="line">        <span class="keyword">if</span>(R&lt;=m)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(L, R, lson);</span><br><span class="line">        <span class="keyword">if</span>(L&gt;m)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(L, R, rson);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>(<span class="built_in">query</span>(L, R, lson), <span class="built_in">query</span>(L, R, rson));</span><br><span class="line">    &#125;</span><br><span class="line">&#125; f;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Record</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/record/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/record/</url>
      
        <content type="html"><![CDATA[<p>一些题目的记录</p><span id="more"></span><h1 id="recursive-sequence矩阵快速幂"><a class="markdownIt-Anchor" href="#recursive-sequence矩阵快速幂"></a> Recursive sequence矩阵快速幂</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">8</span>;<span class="comment">//N个系数，N维矩阵</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">2147493647</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">matrix</span>&#123;<span class="type">int</span> m[<span class="number">10</span>][<span class="number">10</span>];&#125;;</span><br><span class="line">matrix ans,base,m;</span><br><span class="line"><span class="type">int</span> n,a,b;</span><br><span class="line"><span class="function">matrix <span class="title">multi</span><span class="params">(matrix a, matrix b)</span></span>&#123;</span><br><span class="line">    matrix tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=N;++j)&#123;</span><br><span class="line">            tmp.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=N;++k)</span><br><span class="line">                tmp.m[i][j]=(tmp.m[i][j]+(a.m[i][k]*b.m[k][j]))%mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">matrix <span class="title">fastm</span><span class="params">(matrix base, <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    matrix ans;</span><br><span class="line">    <span class="built_in">memset</span>(ans.m,<span class="number">0</span>,<span class="built_in">sizeof</span>(ans.m));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=N;i++)ans.m[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)ans=<span class="built_in">multi</span>(ans,base);</span><br><span class="line">        base=<span class="built_in">multi</span>(base, base);</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    matrix m,ans;</span><br><span class="line">    <span class="built_in">memset</span>(m.m,<span class="number">0</span>,<span class="built_in">sizeof</span>(m.m));</span><br><span class="line">    m.m[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;m.m[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">2</span>;m.m[<span class="number">1</span>][<span class="number">4</span>]=<span class="number">1</span>;m.m[<span class="number">1</span>][<span class="number">5</span>]=<span class="number">4</span>;m.m[<span class="number">1</span>][<span class="number">6</span>]=<span class="number">6</span>;m.m[<span class="number">1</span>][<span class="number">7</span>]=<span class="number">4</span>;m.m[<span class="number">1</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">4</span>][<span class="number">4</span>]=<span class="number">1</span>;m.m[<span class="number">4</span>][<span class="number">5</span>]=<span class="number">4</span>;m.m[<span class="number">4</span>][<span class="number">6</span>]=<span class="number">6</span>;m.m[<span class="number">4</span>][<span class="number">7</span>]=<span class="number">4</span>;m.m[<span class="number">4</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">5</span>][<span class="number">5</span>]=<span class="number">1</span>;m.m[<span class="number">5</span>][<span class="number">6</span>]=<span class="number">3</span>;m.m[<span class="number">5</span>][<span class="number">7</span>]=<span class="number">3</span>;m.m[<span class="number">5</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">6</span>][<span class="number">6</span>]=<span class="number">1</span>;m.m[<span class="number">6</span>][<span class="number">7</span>]=<span class="number">2</span>;m.m[<span class="number">6</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">7</span>][<span class="number">7</span>]=<span class="number">1</span>;m.m[<span class="number">7</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">8</span>][<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> T;<span class="built_in">scan</span>(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scannn</span>(n,a,b);</span><br><span class="line">        ans = <span class="built_in">fastm</span>(m,n<span class="number">-3</span>);</span><br><span class="line">        <span class="type">int</span> f[<span class="number">10</span>],x=<span class="number">0</span>;</span><br><span class="line">        f[<span class="number">3</span>]=a,f[<span class="number">2</span>]=b,f[<span class="number">1</span>]=(<span class="number">2</span>*a+b+<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>),f[<span class="number">4</span>]=<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>,f[<span class="number">5</span>]=<span class="number">3</span>*<span class="number">3</span>*<span class="number">3</span>,f[<span class="number">6</span>]=<span class="number">3</span>*<span class="number">3</span>,f[<span class="number">7</span>]=<span class="number">3</span>,f[<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,<span class="number">8</span>)&#123;</span><br><span class="line">            x=x%mod+((f[i]%mod)*(ans.m[<span class="number">1</span>][i])%mod)%mod;</span><br><span class="line">            x%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>矩阵快速幂，用于求解递推式。</p><!--more--><h2 id="happy-necklace-矩阵快速幂"><a class="markdownIt-Anchor" href="#happy-necklace-矩阵快速幂"></a> Happy Necklace 矩阵快速幂</h2><p>注意<strong>状态的转移</strong>，很有意思~</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> dbg(args...) do &#123;cout &lt;&lt; #args &lt;&lt; <span class="string">&quot; : &quot;</span>&lt;&lt; args &lt;&lt; endl;&#125; </span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">matrix</span>&#123;</span><br><span class="line">    <span class="type">int</span> m[N+<span class="number">1</span>][N+<span class="number">1</span>];</span><br><span class="line">&#125;;</span><br><span class="line">matrix e,d;</span><br><span class="line"><span class="function">matrix <span class="title">qpow</span><span class="params">(matrix a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    matrix ans=e;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            matrix x=d;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=N<span class="number">-1</span>;j++)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=N<span class="number">-1</span>;k++)</span><br><span class="line">                        x.m[i][j]=x.m[i][j]%mod+ans.m[i][k]*a.m[k][j]%mod;</span><br><span class="line">            ans=x;</span><br><span class="line">        &#125;</span><br><span class="line">        matrix x=d;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=N<span class="number">-1</span>;j++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=N<span class="number">-1</span>;k++)</span><br><span class="line">                    x.m[i][j]=x.m[i][j]%mod+a.m[i][k]*a.m[k][j]%mod;</span><br><span class="line">        a=x;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;<span class="built_in">scan</span>(T);</span><br><span class="line">    matrix base,m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=N<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            base.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            m.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            e.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            d.m[i][j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    base.m[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    base.m[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    base.m[<span class="number">2</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;m.m[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>;m.m[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    m.m[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;m.m[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;m.m[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">    m.m[<span class="number">2</span>][<span class="number">0</span>]=<span class="number">0</span>;m.m[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;m.m[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)e.m[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="type">int</span> n;<span class="built_in">scan</span>(n);</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)ans=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>)ans=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            matrix temp=<span class="built_in">qpow</span>(m,n<span class="number">-2</span>);</span><br><span class="line">            matrix x=d;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=N<span class="number">-1</span>;i++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=N<span class="number">-1</span>;j++)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=N<span class="number">-1</span>;k++)</span><br><span class="line">                        x.m[i][j]=x.m[i][j]%mod+temp.m[i][k]*base.m[k][j]%mod;</span><br><span class="line">            temp=x;</span><br><span class="line">            ans=temp.m[<span class="number">0</span>][<span class="number">0</span>]+temp.m[<span class="number">1</span>][<span class="number">0</span>]+temp.m[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line">            ans%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="counting-cliques-dfs"><a class="markdownIt-Anchor" href="#counting-cliques-dfs"></a> Counting cliques DFS</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">include &lt;bits/stdc++.h&gt;</span><br><span class="line">include&lt;stdint.h&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">define <span class="type">int</span> <span class="type">long</span> <span class="type">long</span></span></span><br><span class="line"><span class="function">define <span class="title">scan</span><span class="params">(n)</span> <span class="title">scanf</span><span class="params">(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span></span><br><span class="line"><span class="function">define <span class="title">scann</span><span class="params">(n, m)</span> <span class="title">scanf</span><span class="params">(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span></span><br><span class="line"><span class="function">define <span class="title">scannn</span><span class="params">(a, b, c)</span> <span class="title">scanf</span><span class="params">(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span></span><br><span class="line"><span class="function">define pb push_back</span></span><br><span class="line"><span class="function">define <span class="title">fo</span><span class="params">(i, a, b)</span> <span class="title">for</span> <span class="params">(<span class="type">int</span> i = (a); i &lt;= (b); i++)</span></span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">int</span> inf </span>= <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> n,m,s,x,y,pre[<span class="number">20</span>],e120,ans,tot,head[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> v,nxt;</span><br><span class="line">&#125;a[<span class="number">1024</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">    tot++;</span><br><span class="line">    a[tot].v=v;</span><br><span class="line">    a[tot].nxt=head[u];</span><br><span class="line">    head[u]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> step)</span></span>&#123;</span><br><span class="line">    pre[step]=u;</span><br><span class="line">    <span class="keyword">if</span>(step==s)&#123;ans++;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=head[u];~j;j=a[j].nxt)&#123;</span><br><span class="line">        <span class="type">int</span> x=a[j].v;</span><br><span class="line">        <span class="type">int</span> f=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,step)&#123;</span><br><span class="line">            <span class="keyword">if</span>(epre[i]==<span class="number">0</span>)&#123;f=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f)&#123;</span><br><span class="line">            step++;</span><br><span class="line">            <span class="built_in">dfs</span>(x,step);</span><br><span class="line">            step--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;<span class="built_in">scan</span>(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scannn</span>(n,m,s);</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">0</span>,<span class="number">15</span>)pre[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">0</span>,<span class="number">105</span>)<span class="built_in">fo</span>(j,<span class="number">0</span>,<span class="number">105</span>)ei=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">0</span>,<span class="number">105</span>)head[i]=<span class="number">-1</span>;</span><br><span class="line">        ans=<span class="number">0</span>,tot=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">            <span class="built_in">scann</span>(x,y);</span><br><span class="line">            <span class="keyword">if</span>(x&gt;y)<span class="built_in">swap</span>(x,y);</span><br><span class="line">            ex=<span class="number">1</span>;<span class="built_in">add</span>(x,y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)<span class="built_in">dfs</span>(i,<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="distance-in-tree"><a class="markdownIt-Anchor" href="#distance-in-tree"></a> Distance in Tree</h2><p><a href="http://codeforces.com/contest/161/problem/D">题目链接</a></p><h2 id="tree-painting-树形dp"><a class="markdownIt-Anchor" href="#tree-painting-树形dp"></a> Tree painting 树形DP</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span>+<span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;e[maxn];</span><br><span class="line"><span class="type">int</span> siz[maxn];</span><br><span class="line"><span class="type">int</span> ans,n;</span><br><span class="line"><span class="type">int</span> u,v;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getsize</span><span class="params">(<span class="type">int</span> v,<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    siz[v]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x:e[v])&#123;</span><br><span class="line">        <span class="keyword">if</span>(x==u)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">getsize</span>(x,v);</span><br><span class="line">        siz[v]+=siz[x];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> v,<span class="type">int</span> u,<span class="type">int</span> t)</span></span>&#123;</span><br><span class="line">    ans=<span class="built_in">max</span>(ans,t);</span><br><span class="line">    cout&lt;&lt;v&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;u&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;t&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x:e[v])&#123;</span><br><span class="line">        <span class="keyword">if</span>(x==u)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(x,v,t<span class="number">-2</span>*siz[x]+n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scan</span>(n);</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">scann</span>(u,v);</span><br><span class="line">        e[u].<span class="built_in">pb</span>(v);e[v].<span class="built_in">pb</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">getsize</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)t+=siz[i];</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>,t);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="about-笛卡尔树"><a class="markdownIt-Anchor" href="#about-笛卡尔树"></a> ABOUT 笛卡尔树</h2><h2 id="单调栈"><a class="markdownIt-Anchor" href="#单调栈"></a> 单调栈</h2><p><a href="http://www.hankcs.com/program/algorithm/poj-3250-bad-hair-day.html">http://www.hankcs.com/program/algorithm/poj-3250-bad-hair-day.html</a></p><p><a href="https://blog.csdn.net/wubaizhe/article/details/70136174">https://blog.csdn.net/wubaizhe/article/details/70136174</a></p><p><a href="https://ac.nowcoder.com/acm/contest/view-submission?submissionId=40898761">https://ac.nowcoder.com/acm/contest/view-submission?submissionId=40898761</a></p><p><a href="https://blog.csdn.net/u013554860/article/details/51360542">https://blog.csdn.net/u013554860/article/details/51360542</a></p><p><a href="https://xlor.cn/2019/4/2019nanchang/">https://xlor.cn/2019/4/2019nanchang/</a></p><p><a href="https://blog.csdn.net/lr7682/article/details/90247997">https://blog.csdn.net/lr7682/article/details/90247997</a></p><h2 id="牛客第一场aequivalent-prefixes-前缀笛卡尔树"><a class="markdownIt-Anchor" href="#牛客第一场aequivalent-prefixes-前缀笛卡尔树"></a> <a href="https://ac.nowcoder.com/acm/contest/881/A">牛客第一场AEquivalent Prefixes-前缀笛卡尔树</a></h2><p>序列u，v 对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,ans]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mclose">]</span></span></span></span>上所有的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[L,R]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">]</span></span></span></span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>L</mi><mo>&lt;</mo><mo>=</mo><mi>R</mi><mo>&lt;</mo><mo>=</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo>&lt;</mo><mo>=</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1&lt;=L&lt;=R&lt;=ans&lt;=n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>都满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>M</mi><mi>Q</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mi>M</mi><mi>Q</mi><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RMQ(u,L,R)=RMQ(v,L,R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">max(ans)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>;</p><p>分析：考虑判断两个序列的前缀笛卡尔树是否相等</p><p>注意，如果前缀笛卡尔树相等，则可以判断每一个栈深都相同，想想为什么？、</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="type">int</span> s1[maxn],s2[maxn];</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scan</span>(n)!=EOF)&#123;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)<span class="built_in">scan</span>(a[i]);</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)<span class="built_in">scan</span>(b[i]);</span><br><span class="line">        <span class="type">int</span> head1=<span class="number">1</span>,head2=<span class="number">1</span>,tail1=<span class="number">1</span>,tail2=<span class="number">1</span>;</span><br><span class="line">        s1[head1]=s2[head2]=inf;</span><br><span class="line">        <span class="type">int</span> maxpos=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="keyword">while</span>(head1&lt;=tail1&amp;&amp;s1[tail1]&gt;a[i])tail1--;</span><br><span class="line">            <span class="keyword">while</span>(head2&lt;=tail2&amp;&amp;s2[tail2]&gt;b[i])tail2--;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;before:\n&quot;;</span></span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;tail1: &quot;&lt;&lt;tail1&lt;&lt;&quot; s1[tail1]:&quot;&lt;&lt;s1[tail1]&lt;&lt;endl;</span></span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;tail2: &quot;&lt;&lt;tail2&lt;&lt;&quot; s2[tail2]:&quot;&lt;&lt;s2[tail2]&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(tail1!=tail2)<span class="keyword">break</span>;</span><br><span class="line">            s1[++tail1]=a[i],s2[++tail2]=b[i];</span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;after:\n&quot;;</span></span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;tail1: &quot;&lt;&lt;tail1&lt;&lt;&quot; s1[tail1]:&quot;&lt;&lt;s1[tail1]&lt;&lt;endl;</span></span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;tail2: &quot;&lt;&lt;tail2&lt;&lt;&quot; s2[tail2]:&quot;&lt;&lt;s2[tail2]&lt;&lt;endl;</span></span><br><span class="line">            maxpos=i;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;maxpos&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="笛卡尔树习题"><a class="markdownIt-Anchor" href="#笛卡尔树习题"></a> 笛卡尔树习题</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6305">http://acm.hdu.edu.cn/showproblem.php?pid=6305</a></p><p><a href="https://blog.csdn.net/zhaiqiming2010/article/details/80245872">https://blog.csdn.net/zhaiqiming2010/article/details/80245872</a></p><p>##<a href="https://codeforces.com/contest/1199/problem/F">CF1199FRectangle Painting 1-区间DP</a></p><p>给定一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的矩阵,由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">#</mi><mtext>”</mtext><mo separator="true">,</mo><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;\#”,&quot;.&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">&quot;</span><span class="mord">#</span><span class="mord">”</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">&quot;</span><span class="mord">.</span><span class="mord">&quot;</span></span></span></span>组成，每次可以将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>×</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">h\times w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>矩形内的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">#</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;\#&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">&quot;</span><span class="mord">#</span><span class="mord">&quot;</span></span></span></span>变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;.&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span><span class="mord">.</span><span class="mord">&quot;</span></span></span></span></p><p>花费为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">max(h,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>,求将所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">#</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;\#&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">&quot;</span><span class="mord">#</span><span class="mord">&quot;</span></span></span></span>变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;.&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span><span class="mord">.</span><span class="mord">&quot;</span></span></span></span>的最小花费</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i,a,b) for(int i=a;i&lt;=b;i++)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> a[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">55</span>][<span class="number">55</span>][<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> xx,<span class="type">int</span> yy)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x][y][xx][yy]!=<span class="number">-1</span>)<span class="keyword">return</span> f[x][y][xx][yy];</span><br><span class="line">    <span class="type">int</span> ans=<span class="built_in">max</span>(xx-x+<span class="number">1</span>,yy-y+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">fo</span>(i,x,xx<span class="number">-1</span>)ans=<span class="built_in">min</span>(ans,<span class="built_in">dp</span>(x,y,i,yy)+<span class="built_in">dp</span>(i+<span class="number">1</span>,y,xx,yy));</span><br><span class="line">    <span class="built_in">fo</span>(i,y,yy<span class="number">-1</span>)ans=<span class="built_in">min</span>(ans,<span class="built_in">dp</span>(x,y,xx,i)+<span class="built_in">dp</span>(x,i+<span class="number">1</span>,xx,yy));</span><br><span class="line">    <span class="keyword">return</span> f[x][y][xx][yy]=ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line">    <span class="built_in">fo</span>(x,<span class="number">1</span>,n)&#123;</span><br><span class="line">        <span class="built_in">fo</span>(y,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="built_in">fo</span>(xx,<span class="number">1</span>,n)&#123;</span><br><span class="line">                <span class="built_in">fo</span>(yy,<span class="number">1</span>,n)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(x&gt;xx||y&gt;yy)f[x][y][xx][yy]=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span>(x==xx&amp;&amp;y==yy)f[x][y][xx][yy]=(a[x][y]==<span class="string">&#x27;#&#x27;</span>?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">dp</span>(<span class="number">1</span>,<span class="number">1</span>,n,n)&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##<a href="https://codeforces.com/contest/1199/problem/E">CF1190EMatching vs Independent Set </a> 图匹配</p><p>给定一个3*n个点m条边的简单无向图，要求在这个图里找出一个有n条边的连通图</p><p>或者找出一个有n个点的独立点集，并且输出答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> u[maxn],v[maxn];</span><br><span class="line"><span class="type">int</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;<span class="built_in">scan</span>(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scann</span>(n,m);</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,<span class="number">3</span>*n)vis[i]=<span class="number">0</span>;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;edge_ans;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">            <span class="type">int</span> u,v;<span class="built_in">scann</span>(u,v);</span><br><span class="line">            <span class="keyword">if</span>(vis[u]||vis[v])<span class="keyword">continue</span>;</span><br><span class="line">            vis[u]=<span class="number">1</span>,vis[v]=<span class="number">1</span>;</span><br><span class="line">            edge_ans.<span class="built_in">pb</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(edge_ans.<span class="built_in">size</span>()&gt;=n)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Matching\n&quot;</span>);</span><br><span class="line">            <span class="built_in">fo</span>(i,<span class="number">0</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>,edge_ans[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;IndSet\n&quot;</span>);</span><br><span class="line">            <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="built_in">fo</span>(i,<span class="number">1</span>,<span class="number">3</span>*n)&#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt&gt;=n)<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>(!vis[i])<span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>,i),cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="盒子-组合数"><a class="markdownIt-Anchor" href="#盒子-组合数"></a> 盒子-组合数</h2><p>隔板法；</p><p>子问题：给定n个物品，将它们分成m堆，保证每堆的物品个数不少于h个</p><p>则有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>n</mi><mo>−</mo><mi>m</mi><mo>∗</mo><mi>h</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">C_{n-m*h-1}^{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2138779999999998em;vertical-align:-0.35963899999999993em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.398692em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35963899999999993em;"><span></span></span></span></span></span></span></span></span></span>种分割方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> dbg(args...) do &#123;cout &lt;&lt; #args &lt;&lt; <span class="string">&quot; : &quot;</span>&lt;&lt; args &lt;&lt; endl;&#125; </span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[maxn],inv[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=maxn<span class="number">-1</span>;i++)f[i]=f[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">    inv[maxn<span class="number">-1</span>]=<span class="built_in">qpow</span>(f[maxn<span class="number">-1</span>],mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=maxn<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)inv[i]=inv[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[n]*inv[m]%mod*inv[n-m]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> f,w,h;</span><br><span class="line">    cin&gt;&gt;f&gt;&gt;w&gt;&gt;h;</span><br><span class="line">    <span class="type">int</span> fm=<span class="number">0</span>,fz=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w;i++)&#123;</span><br><span class="line">        fm+=(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f+<span class="number">1</span>,i))%mod;</span><br><span class="line">        fm%=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w/(h+<span class="number">1</span>);i++)&#123;</span><br><span class="line">        fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f+<span class="number">1</span>,i)%mod;</span><br><span class="line">        fz%=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=fz*<span class="built_in">qpow</span>(fm,mod<span class="number">-2</span>)%mod;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>组合数部分：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w;i++)&#123;</span><br><span class="line">        fm=fm+(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i<span class="number">-1</span>))*<span class="number">2</span>%mod;</span><br><span class="line">        fm=fm+(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i<span class="number">-2</span>))%mod;</span><br><span class="line">        fm=fm+(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i))%mod;</span><br><span class="line">        fm%=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w/(h+<span class="number">1</span>);i++)&#123;</span><br><span class="line">        fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="number">2</span>%mod;</span><br><span class="line">        fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i<span class="number">-2</span>)%mod;</span><br><span class="line">        fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f<span class="number">-1</span>,i)%mod;</span><br><span class="line">        fz%=mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以合并为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w;i++)&#123;</span><br><span class="line">    fm+=(<span class="built_in">C</span>(w<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f+<span class="number">1</span>,i))%mod;</span><br><span class="line">    fm%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=w/(h+<span class="number">1</span>);i++)&#123;</span><br><span class="line">    fz=fz+<span class="built_in">C</span>(w-i*h<span class="number">-1</span>,i<span class="number">-1</span>)*<span class="built_in">C</span>(f+<span class="number">1</span>,i)%mod;</span><br><span class="line">    fz%=mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="找朋友-状压dp"><a class="markdownIt-Anchor" href="#找朋友-状压dp"></a> 找朋友-状压DP</h2><p>赵队出的题，找朋友</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> dbg(args...) do &#123;cout &lt;&lt; #args &lt;&lt; <span class="string">&quot; : &quot;</span>&lt;&lt; args &lt;&lt; endl;&#125; </span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = (<span class="number">1</span>&lt;&lt;<span class="number">21</span>);</span><br><span class="line"><span class="type">int</span> x[<span class="number">25</span>],y[<span class="number">25</span>];</span><br><span class="line"><span class="type">int</span> n,f;</span><br><span class="line"><span class="type">double</span> dp[maxn];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        <span class="keyword">if</span>((!(s&amp;x))&amp;&amp;(t&amp;x))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dis</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">min_dis</span><span class="params">(<span class="type">int</span> t,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">double</span>&gt;v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        <span class="keyword">if</span>(t&amp;x)&#123;</span><br><span class="line">            v.<span class="built_in">pb</span>(<span class="built_in">dis</span>(i,j));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">if</span>(v.<span class="built_in">size</span>()&lt;=<span class="number">1</span>)<span class="keyword">return</span> inf;</span><br><span class="line">    <span class="keyword">return</span> v[<span class="number">0</span>]+v[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;<span class="built_in">scan</span>(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scan</span>(n);</span><br><span class="line">        <span class="type">int</span> s=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> xx=((<span class="number">1</span>&lt;&lt;(n+<span class="number">1</span>))<span class="number">-1</span>)^<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=maxn<span class="number">-1</span>;i++)dp[i]=inf;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="built_in">scannn</span>(x[i],y[i],f);</span><br><span class="line">            <span class="keyword">if</span>(f)s^=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        &#125;</span><br><span class="line">        dp[s]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=s;i&lt;=xx;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">check</span>(i,s))<span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">fo</span>(j,<span class="number">1</span>,n)&#123;</span><br><span class="line">                <span class="type">int</span> t=(<span class="number">1</span>&lt;&lt;j);</span><br><span class="line">                <span class="keyword">if</span>((i&amp;t)&amp;&amp;(!(s&amp;t)))&#123;</span><br><span class="line">                    <span class="type">int</span> x=i^t;</span><br><span class="line">                    dp[i]=<span class="built_in">min</span>(dp[x]+<span class="built_in">min_dis</span>(x,j),dp[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(dp[xx]==inf)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No Solution\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.6lf\n&quot;</span>,dp[xx]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="找质数-素数筛"><a class="markdownIt-Anchor" href="#找质数-素数筛"></a> 找质数-素数筛</h2><p>因为数字范围<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mo>=</mo><mn>1</mn><mi>e</mi><mn>14</mn></mrow><annotation encoding="application/x-tex">&lt;=1e14</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathnormal">e</span><span class="mord">1</span><span class="mord">4</span></span></span></span>,所以在快速幂的过程中会爆long long，要用__int128</p><p>也可以结合费马小定理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo>=</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a^{p-1} \  mod \ p == 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>,P为质数，已知质数间隔小于200</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">1e7</span>;</span><br><span class="line"><span class="function">__int128 <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">__int128 x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(__int128 x)</span></span>&#123;<span class="comment">/*__int128输出*/</span></span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>),x=-x;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">print</span>(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Prime</span>&#123;</span><br><span class="line">    <span class="type">int</span> prime_cnt;</span><br><span class="line">    <span class="type">int</span> prime[maxn+<span class="number">5</span>],vis[maxn+<span class="number">5</span>];</span><br><span class="line">    <span class="type">int</span> p[maxn+<span class="number">5</span>];</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Prime_init</span><span class="params">()</span></span>&#123;<span class="comment">/*将合数标记为vis[i]=1*/</span></span><br><span class="line">        prime_cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=maxn;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i])prime[++prime[<span class="number">0</span>]]=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>]&amp;&amp;i*prime[j]&lt;=maxn;j++)&#123;</span><br><span class="line">                vis[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*prime_cnt记录素数的数量*/</span><span class="comment">/*p数字记录每个素数*/</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;maxn;i++)<span class="keyword">if</span>(!vis[i])p[++prime_cnt]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(__int128 x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=prime_cnt;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p[i]&gt;=x)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(x%p[i]==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;F;</span><br><span class="line"><span class="function">__int128 <span class="title">qpow</span><span class="params">(__int128 a,__int128 b,__int128 mod)</span></span>&#123;<span class="comment">/*快速幂*/</span></span><br><span class="line">    __int128 res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;cin&gt;&gt;T;</span><br><span class="line">    F.<span class="built_in">Prime_init</span>();</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        __int128 a,p;p=<span class="built_in">read</span>(),a=<span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">for</span>(__int128 q=p<span class="number">-1</span>;q&gt;=<span class="number">1</span>;q--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(F.<span class="built_in">isprime</span>(q))&#123;</span><br><span class="line">                __int128 ans=<span class="built_in">qpow</span>(a,q,p);</span><br><span class="line">                <span class="built_in">print</span>(ans);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="codeforces204e-kmp"><a class="markdownIt-Anchor" href="#codeforces204e-kmp"></a> Codeforces204E KMP</h2><p>给定一主串,再查询某字符串是否可以由主串的两个子串拼接而成.</p><p>方法是顺着kmp一遍,再反着kmp一遍,记录查询的字符串的前缀和后缀在主串中的位置的最小值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">10005</span>;</span><br><span class="line"><span class="type">int</span> z[maxn];</span><br><span class="line"><span class="type">int</span> pi[maxn];</span><br><span class="line"><span class="type">int</span> pos1[<span class="number">1005</span>], pos2[<span class="number">1005</span>];</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line">string s, t;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">prefix</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n;i++)</span><br><span class="line">        pi[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = pi[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; s[i] != s[j]) j = pi[j - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (s[i] == s[j]) j++;</span><br><span class="line">        pi[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">kmp</span><span class="params">(string s,string t)</span><span class="comment">//s是待匹配的</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1000</span>;i++)</span><br><span class="line">        pos1[i] = pos2[i] = maxn + <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> m = t.<span class="built_in">size</span>();</span><br><span class="line">    string ss = s + <span class="string">&quot;#&quot;</span> + t;</span><br><span class="line">    <span class="built_in">prefix</span>(ss);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n + <span class="number">1</span>; i &lt;= m + n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = pi[i];</span><br><span class="line">        pos1[t] = <span class="built_in">min</span>(pos1[t], i - n);</span><br><span class="line">    &#125;</span><br><span class="line">    ss = s + <span class="string">&quot;#&quot;</span> + t;</span><br><span class="line">    <span class="built_in">prefix</span>(ss);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n + <span class="number">1</span>; i &lt;= m + n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = pi[i];</span><br><span class="line">        pos2[t] = <span class="built_in">min</span>(pos2[t], i - n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = pos1[i];</span><br><span class="line">        <span class="type">int</span> y = pos2[n - i];</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=m-y)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; q;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="built_in">kmp</span>(s, t);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="codeforces816e-树上背包"><a class="markdownIt-Anchor" href="#codeforces816e-树上背包"></a> Codeforces816E 树上背包</h2><p>注意最后求答案的时候一定是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[1][i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>或者是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[1][i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p><p>因为想要使用优惠券,就必须保证它们的父亲被选了,而点1就是根节点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">1e15</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">5000</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, b;</span><br><span class="line"><span class="type">int</span> c[maxn], d[maxn], x[maxn];</span><br><span class="line"><span class="type">int</span> dp[maxn][maxn][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> sz[maxn];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; G[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sz[u] = <span class="number">1</span>;</span><br><span class="line">    dp[u][<span class="number">1</span>][<span class="number">0</span>] = c[u];</span><br><span class="line">    dp[u][<span class="number">1</span>][<span class="number">1</span>] = c[u] - d[u];</span><br><span class="line">    dp[u][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:G[u])&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(v);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = sz[u]; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= sz[v];j++)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[u][i + j][<span class="number">0</span>] = <span class="built_in">min</span>(dp[u][i + j][<span class="number">0</span>], dp[u][i][<span class="number">0</span>] + dp[v][j][<span class="number">0</span>]);</span><br><span class="line">                dp[u][i + j][<span class="number">1</span>] = <span class="built_in">min</span>(dp[u][i + j][<span class="number">1</span>], dp[u][i][<span class="number">1</span>] + dp[v][j][<span class="number">0</span>]);</span><br><span class="line">                dp[u][i + j][<span class="number">1</span>] = <span class="built_in">min</span>(dp[u][i + j][<span class="number">1</span>], dp[u][i][<span class="number">1</span>] + dp[v][j][<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sz[u] += sz[v];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;n, &amp;b);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;c[<span class="number">1</span>], &amp;d[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;c[i], &amp;d[i], &amp;x[i]);</span><br><span class="line">        G[x[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n;i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= n;j++)</span><br><span class="line">            dp[i][j][<span class="number">0</span>] = dp[i][j][<span class="number">1</span>] = inf;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span>(dp[<span class="number">1</span>][j][<span class="number">0</span>]&lt;=b||dp[<span class="number">1</span>][j][<span class="number">1</span>]&lt;=b)</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, j);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="nowcoder-非递归实现组合型枚举"><a class="markdownIt-Anchor" href="#nowcoder-非递归实现组合型枚举"></a> NowCoder 非递归实现组合型枚举</h2><p>模拟汇编的操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> st[maxn], address, top;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void cal(int x)&#123;//参数x表示当前选择的数字</span></span><br><span class="line"><span class="comment">    if(v.size()&gt;m||v.size()+(n-x+1)&lt;m)</span></span><br><span class="line"><span class="comment">        return;</span></span><br><span class="line"><span class="comment">    if(x==n+1)&#123;</span></span><br><span class="line"><span class="comment">        for (int i = 0; i &lt; v.size();i++)&#123;</span></span><br><span class="line"><span class="comment">            printf(&quot;%d &quot;, v[i]);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        printf(&quot;\n&quot;);</span></span><br><span class="line"><span class="comment">        return;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    //选x</span></span><br><span class="line"><span class="comment">    v.push_back(x);</span></span><br><span class="line"><span class="comment">    cal(x + 1);</span></span><br><span class="line"><span class="comment">    //不选x</span></span><br><span class="line"><span class="comment">    v.pop_back();</span></span><br><span class="line"><span class="comment">    cal(x + 1);</span></span><br><span class="line"><span class="comment">    return;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> ret_addr)</span></span>&#123;<span class="comment">//新指令(数字)进栈</span></span><br><span class="line">    <span class="type">int</span> old_top = top;</span><br><span class="line">    st[++top] = x;</span><br><span class="line">    st[++top] = ret_addr;</span><br><span class="line">    st[++top] = old_top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ret</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret_addr = st[top - <span class="number">1</span>];</span><br><span class="line">    top = st[top];<span class="comment">//让最后一条语句出栈</span></span><br><span class="line">    <span class="keyword">return</span> ret_addr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">cal</span>(<span class="number">1</span>, <span class="number">0</span>);<span class="comment">//数字1进栈</span></span><br><span class="line">    <span class="keyword">while</span>(top)&#123;</span><br><span class="line">        <span class="type">int</span> x = st[top - <span class="number">2</span>]; <span class="comment">//获取的是数字x</span></span><br><span class="line">        <span class="keyword">switch</span>(address)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">if</span>(v.<span class="built_in">size</span>()&gt;m||v.<span class="built_in">size</span>()+(n-x+<span class="number">1</span>)&lt;m)&#123;</span><br><span class="line">                    address = <span class="built_in">ret</span>(); <span class="comment">//也就是return;</span></span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(x==n+<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, v[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    address = <span class="built_in">ret</span>();</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                v.<span class="built_in">push_back</span>(x);</span><br><span class="line">                <span class="built_in">cal</span>(x + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">                address = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                v.<span class="built_in">pop_back</span>();</span><br><span class="line">                <span class="built_in">cal</span>(x + <span class="number">1</span>, <span class="number">2</span>);<span class="comment">//返回后从cas2继续执行</span></span><br><span class="line">                address = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                address = <span class="built_in">ret</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ccpc秦皇岛-kmp"><a class="markdownIt-Anchor" href="#ccpc秦皇岛-kmp"></a> CCPC秦皇岛-KMP</h2><p>把原串反过来…而已QuQ</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e7</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">char</span> s[maxn], t[maxn];</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">prefix_function</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">pi</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> j = pi[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">while</span>(j&gt;<span class="number">0</span>&amp;&amp;t[i]!=t[j])j = pi[j - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(t[i]==t[j])j++;</span><br><span class="line">        pi[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pi;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;a&gt;&gt;b)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> ans = <span class="number">1e9</span> * <span class="number">1e7</span> * <span class="number">2</span>;</span><br><span class="line">        ans = -ans;</span><br><span class="line">        <span class="type">int</span> sz = <span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = sz - <span class="number">1</span>; i &gt;=<span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;.&#x27;</span>)<span class="keyword">break</span>;</span><br><span class="line">            t[l++] = s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; pi = <span class="built_in">prefix_function</span>(l);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; l; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> pos = i + <span class="number">1</span>;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> len = i + <span class="number">1</span>;</span><br><span class="line">            len = pos - pi[i];</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, a * pos - b * len);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="tree-dp"><a class="markdownIt-Anchor" href="#tree-dp"></a> Tree-DP</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">dp</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sz[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    f[u][<span class="number">1</span>] = val[x];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:to[u])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">dp</span>(v);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = sz[u];i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= sz[u];j++)</span><br><span class="line">            &#123;</span><br><span class="line">                f[u][i + j] = <span class="built_in">max</span>(f[u][i + j], f[u][i] + f[v][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sz[u] += sz[v];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dp</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:to[u])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++)</span><br><span class="line">            f[v][i] = f[u][i];</span><br><span class="line">        <span class="built_in">dp</span>(v);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = weight[v]; i &lt;= m;i++)</span><br><span class="line">            f[u][i] = <span class="built_in">max</span>(f[u][i], f[v][i - weight[v]] + value[v]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="点分治"><a class="markdownIt-Anchor" href="#点分治"></a> 点分治</h2><blockquote><p>树,n个点,边带权,求问边权和小于k的路径条数</p></blockquote><p>对于指定的根节点p,树上的路径分为:</p><p>1.经过p       (x ~ p)+(p ~ y )</p><p>2.包含于p的一棵子树,且不经过p(递归处理)</p><h2 id="hdu2222-ac自动机"><a class="markdownIt-Anchor" href="#hdu2222-ac自动机"></a> HDU2222 AC自动机</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Trie</span> &#123;</span><br><span class="line">    <span class="type">int</span> nxt[maxn][<span class="number">26</span>], fail[maxn], end[maxn];</span><br><span class="line">    <span class="type">int</span> root ,L;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">newnode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line">            nxt[L][i] = <span class="number">-1</span>;</span><br><span class="line">        end[L++] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> L - <span class="number">1</span>;<span class="comment">//返回节点的数量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        L = <span class="number">0</span>;</span><br><span class="line">        root = <span class="built_in">newnode</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> buf[])</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> len = <span class="built_in">strlen</span>(buf);</span><br><span class="line">        <span class="type">int</span> now = root;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> c = buf[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(nxt[now][c]==<span class="number">-1</span>)&#123;</span><br><span class="line">                nxt[now][c] = <span class="built_in">newnode</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            now = nxt[now][c];</span><br><span class="line">        &#125;</span><br><span class="line">        end[now]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">        queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">        fail[root] = root;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nxt[root][i] == <span class="number">-1</span>) &#123;</span><br><span class="line">                nxt[root][i] = root;<span class="comment">//empty,指向根</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                fail[nxt[root][i]] = root;</span><br><span class="line">                q.<span class="built_in">push</span>(nxt[root][i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="type">int</span> now = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(nxt[now][i] == <span class="number">-1</span>)&#123;</span><br><span class="line">                    nxt[now][i] = nxt[fail[now]][i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    fail[nxt[now][i]] = nxt[fail[now]][i];</span><br><span class="line">                    q.<span class="built_in">push</span>(nxt[now][i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">char</span> buf[])</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> len = <span class="built_in">strlen</span>(buf);</span><br><span class="line">        <span class="type">int</span> now = root;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++) &#123;</span><br><span class="line">            <span class="type">char</span> c = buf[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            now = nxt[now][c];</span><br><span class="line">            <span class="type">int</span> temp = now;</span><br><span class="line">            <span class="keyword">while</span>(temp!=root) &#123;</span><br><span class="line">                res += end[temp];</span><br><span class="line">                end[temp] = <span class="number">0</span>;</span><br><span class="line">                temp = fail[temp];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">char</span> buf[maxn*<span class="number">2</span>];</span><br><span class="line">Trie ac;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">        ac.<span class="built_in">init</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, buf);</span><br><span class="line">            ac.<span class="built_in">insert</span>(buf);</span><br><span class="line">        &#125;</span><br><span class="line">        ac.<span class="built_in">build</span>();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,buf);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ac.<span class="built_in">query</span>(buf));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="bitset"><a class="markdownIt-Anchor" href="#bitset"></a> Bitset</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">bitset&lt;5&gt; b, a;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl; <span class="comment">//00000</span></span><br><span class="line"></span><br><span class="line">    b.<span class="built_in">set</span>(<span class="number">2</span>);</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;<span class="comment">//00100</span></span><br><span class="line"></span><br><span class="line">    a.<span class="built_in">set</span>(<span class="number">3</span>);</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;<span class="comment">//01000</span></span><br><span class="line"></span><br><span class="line">    b ^= a;<span class="comment">//(00100)^(01000)</span></span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;<span class="comment">//01100</span></span><br><span class="line"></span><br><span class="line">    b.<span class="built_in">reset</span>(<span class="number">3</span>);<span class="comment">//00100</span></span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    b.<span class="built_in">flip</span>();<span class="comment">//11011</span></span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="最大子段和"><a class="markdownIt-Anchor" href="#最大子段和"></a> 最大子段和</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> best=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    sum=<span class="built_in">max</span>(array[i],sum+array[k]);</span><br><span class="line">    best=<span class="built_in">max</span>(sun,best);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;best&lt;&lt;endl;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="codeforces977e-dfs判环"><a class="markdownIt-Anchor" href="#codeforces977e-dfs判环"></a> Codeforces977E dfs判环</h2><p>187ms 用dfs找连通块,并且需要环上的每个点的度为2</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> vis[maxn];</span><br><span class="line"><span class="type">int</span> ans, f;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;   <span class="comment">//遍历每个联通块</span></span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(e[u].<span class="built_in">size</span>()!=<span class="number">2</span>)</span><br><span class="line">        f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v : e[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[v])</span><br><span class="line">            <span class="built_in">dfs</span>(v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++) &#123;</span><br><span class="line">        <span class="type">int</span> u,v;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;u,&amp;v);</span><br><span class="line">        e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(i);</span><br><span class="line">            <span class="keyword">if</span>(f==<span class="number">0</span>)ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>93ms 并查集</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[maxn];</span><br><span class="line"><span class="type">int</span> d[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> u, v;</span><br><span class="line">&#125;e[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x] == x ? x : f[x] = <span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">        f[i] = i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;e[i].u, &amp;e[i].v);</span><br><span class="line">        d[e[i].u]++;</span><br><span class="line">        d[e[i].v]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(d[e[i].u]==<span class="number">2</span>&amp;&amp;d[e[i].v]==<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="type">int</span> a = <span class="built_in">find</span>(e[i].u);</span><br><span class="line">            <span class="type">int</span> b = <span class="built_in">find</span>(e[i].v);</span><br><span class="line">            <span class="keyword">if</span>(a==b)</span><br><span class="line">                ans++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a&lt;b)</span><br><span class="line">                f[b] = a;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                f[a] = b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="codeforcesdp-k-tree"><a class="markdownIt-Anchor" href="#codeforcesdp-k-tree"></a> Codeforces[DP] k-Tree</h2><p>寒假手速赛第一场</p><p>题意:…</p><p>时间复杂度:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n*k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></p><p>思路:直接模拟，选或者不选，dp数组第一维为和，第二维为是否包含重量大于d的边</p><p>（考虑组合数做法？）</p><p><a href="https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/C">https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/C</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[maxn][<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;k, &amp;d);</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k;j++) &#123;   </span><br><span class="line">            <span class="keyword">if</span>(i&gt;=j) &#123;</span><br><span class="line">                <span class="keyword">if</span>(j&lt;d) &#123;</span><br><span class="line">                    dp[i][<span class="number">0</span>] = (dp[i][<span class="number">0</span>] + dp[i - j][<span class="number">0</span>]) % mod;</span><br><span class="line">                    dp[i][<span class="number">1</span>] = (dp[i][<span class="number">1</span>] + dp[i - j][<span class="number">1</span>]) % mod;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j&gt;=d) &#123;</span><br><span class="line">                    dp[i][<span class="number">1</span>] = (dp[i][<span class="number">1</span>] + dp[i - j][<span class="number">0</span>] + dp[i - j][<span class="number">1</span>]) % mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[n][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="codeforcesdp-lcis"><a class="markdownIt-Anchor" href="#codeforcesdp-lcis"></a> Codeforces[DP] LCIS</h2><p>寒假手速赛第一场</p><p>题意:求给定两个序列的公共最长子序列</p><p>时间复杂度:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>思路:增加一个指针，一个记录路径的数组即可</p><p><a href="https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/D">https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/D</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">500</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[maxn],s[maxn];</span><br><span class="line"><span class="type">int</span> dp[maxn], pre[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;s[j])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;s[j]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[j]&gt;dp[x])&#123;</span><br><span class="line">                    x = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i] == s[j]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[j]&lt;dp[x]+<span class="number">1</span>) &#123;</span><br><span class="line">                    dp[j] = dp[x] + <span class="number">1</span>;</span><br><span class="line">                    pre[j] = x;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[i]&gt;dp[t])&#123;</span><br><span class="line">            ans = dp[i];</span><br><span class="line">            t = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">while</span>(t) &#123;</span><br><span class="line">        v.<span class="built_in">push_back</span>(s[t]);</span><br><span class="line">        t = pre[t];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sz = v.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = sz - <span class="number">1</span>; i &gt;= <span class="number">0</span>;i--) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, v[i]);</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="codeforcesdp-elevator"><a class="markdownIt-Anchor" href="#codeforcesdp-elevator"></a> Codeforces[DP] Elevator</h2><p><a href="https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/E">https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/E</a></p><p>题意：某电梯可以承载4个人，上、下电梯均需要1s，上、下一层均需要1s，乘客按照排队顺序上电梯</p><p>给定每个乘客所在楼层和目标楼层，问送完所有乘客的最短时间</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> dp[maxn][<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> x[maxn], y[maxn];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dis</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">abs</span>(x - y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> cur,<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dp[i][cur][a][b][c])</span><br><span class="line">        <span class="keyword">return</span> dp[i][cur][a][b][c];</span><br><span class="line">    <span class="type">int</span> ans = inf;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!a&amp;&amp;!b&amp;&amp;!c)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(a)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, a, <span class="number">0</span>, b, c) + <span class="built_in">dis</span>(cur, a) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(b)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, b, a, <span class="number">0</span>, c) + <span class="built_in">dis</span>(cur, b) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(c)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, c, a, b, <span class="number">0</span>) + <span class="built_in">dis</span>(cur, c) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> dp[i][cur][a][b][c] = ans;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span>(a)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, a, <span class="number">0</span>, b, c) + <span class="built_in">dis</span>(cur, a) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(b)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, b, a, <span class="number">0</span>, c) + <span class="built_in">dis</span>(cur, b) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(c)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, c, a, b, <span class="number">0</span>) + <span class="built_in">dis</span>(cur, c) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(a&amp;&amp;b&amp;&amp;c) &#123;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, y[i], a, b, c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="built_in">dis</span>(x[i], y[i]) + <span class="number">2</span>);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, a, y[i], b, c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="built_in">dis</span>(x[i], a) + <span class="number">2</span>);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, b, a, y[i], c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="built_in">dis</span>(x[i], b) + <span class="number">2</span>);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, c, a, b, y[i]) + <span class="built_in">dis</span>(cur, x[i]) + <span class="built_in">dis</span>(x[i], c) + <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(!a)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, x[i], y[i], b, c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!b)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, x[i], a, y[i], c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!c)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, x[i], a, b, y[i]) + <span class="built_in">dis</span>(cur, x[i]) + <span class="number">1</span>);   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[i][cur][a][b][c] = ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x[i], &amp;y[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="codeforcesdp-状压-marbles"><a class="markdownIt-Anchor" href="#codeforcesdp-状压-marbles"></a> Codeforces[DP] 状压 Marbles</h2><p><a href="https://codeforces.com/contest/1215/problem/E">https://codeforces.com/contest/1215/problem/E</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">4e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> pre[<span class="number">30</span>][<span class="number">30</span>], cnt[<span class="number">30</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[<span class="number">1</span> &lt;&lt; <span class="number">21</span>];</span><br><span class="line"></span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span>(!mp[a[i]])&#123;</span><br><span class="line">            mp[a[i]] = tot++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x = mp[a[i]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; tot;j++) &#123;</span><br><span class="line">            pre[x][j] += cnt[j];</span><br><span class="line">        &#125;</span><br><span class="line">        cnt[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; (<span class="number">1</span> &lt;&lt; tot); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; tot;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j)) &#123;</span><br><span class="line">                <span class="type">long</span> <span class="type">long</span> temp = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; tot;k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(j!=k&amp;&amp;!(i&amp;(<span class="number">1</span>&lt;&lt;k))) &#123;</span><br><span class="line">                        temp += pre[j][k];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dp[i] = <span class="built_in">min</span>(dp[i], dp[i ^ (<span class="number">1</span> &lt;&lt; j)] + temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, dp[(<span class="number">1</span> &lt;&lt; tot) - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>其他</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/%E5%85%B6%E4%BB%96/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/%E5%85%B6%E4%BB%96/</url>
      
        <content type="html"><![CDATA[<p>暂未分类的题目</p><span id="more"></span><h1 id="暴力练习"><a class="markdownIt-Anchor" href="#暴力练习"></a> 暴力/练习</h1><h3 id="cf1293d-aromas-search"><a class="markdownIt-Anchor" href="#cf1293d-aromas-search"></a> [CF1293D] Aroma’s Search</h3><p><a href="https://codeforces.com/contest/1293/problem/D">https://codeforces.com/contest/1293/problem/D</a></p><p>注意:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>16</mn></msup></mrow><annotation encoding="application/x-tex">t \leq 10^{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span>,要将inf设置成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>17</mn></msup></mrow><annotation encoding="application/x-tex">10^{17}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1000</span>;</span><br><span class="line"><span class="type">const</span> ll limit = <span class="number">1e17</span>;</span><br><span class="line">ll x[maxn], y[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll  ax, bx, ay, by;</span><br><span class="line">    ll xs, ys, t;</span><br><span class="line">    cin &gt;&gt; x[<span class="number">0</span>] &gt;&gt; y[<span class="number">0</span>] &gt;&gt; ax &gt;&gt; ay &gt;&gt; bx &gt;&gt; by &gt;&gt; xs &gt;&gt; ys &gt;&gt; t;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x[cnt]&lt;(limit-bx+<span class="number">1</span>)/ax&amp;&amp;y[cnt]&lt;(limit-by+<span class="number">1</span>)/ay) &#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        x[cnt] = x[cnt - <span class="number">1</span>] * ax + bx;</span><br><span class="line">        y[cnt] = y[cnt - <span class="number">1</span>] * ay + by;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= cnt;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= cnt;j++) &#123;</span><br><span class="line">            ll a = <span class="built_in">abs</span>(xs - x[i]) + <span class="built_in">abs</span>(ys - y[i]);</span><br><span class="line">            ll b = <span class="built_in">abs</span>(x[i] - x[j]) + <span class="built_in">abs</span>(y[i] - y[j]);</span><br><span class="line">            <span class="keyword">if</span>(a&lt;=t-b) &#123;</span><br><span class="line">                ll m = <span class="built_in">abs</span>(i - j) + <span class="number">1</span>;</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, m);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="中缀表达式-bracket-sequence"><a class="markdownIt-Anchor" href="#中缀表达式-bracket-sequence"></a> 中缀表达式 Bracket Sequence</h3><p><a href="https://nanti.jisuanke.com/t/43466">https://nanti.jisuanke.com/t/43466</a></p><p>就是算一下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span>+<span class="number">10</span>;</span><br><span class="line">vector&lt;<span class="type">long</span> <span class="type">long</span>&gt; v[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">num</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len;i++) &#123;</span><br><span class="line">        ret = ret * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">&#x27;)&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(cnt%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">long</span> <span class="type">long</span> x = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(v[cnt].<span class="built_in">size</span>()) &#123;</span><br><span class="line">                    x += v[cnt].<span class="built_in">back</span>();</span><br><span class="line">                    x %= mod;</span><br><span class="line">                    v[cnt].<span class="built_in">pop_back</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                cnt--;</span><br><span class="line">                v[cnt].<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">long</span> <span class="type">long</span> x = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(v[cnt].<span class="built_in">size</span>()) &#123;</span><br><span class="line">                    x *= v[cnt].<span class="built_in">back</span>();</span><br><span class="line">                    x %= mod;</span><br><span class="line">                    v[cnt].<span class="built_in">pop_back</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                cnt--;</span><br><span class="line">                v[cnt].<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> x = <span class="built_in">num</span>(s);</span><br><span class="line">            v[cnt].<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(v[<span class="number">0</span>].<span class="built_in">size</span>()) &#123;</span><br><span class="line">        ans = ans + v[<span class="number">0</span>].<span class="built_in">back</span>();</span><br><span class="line">        ans %= mod;</span><br><span class="line">        v[<span class="number">0</span>].<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cf1175b-catch-overflow"><a class="markdownIt-Anchor" href="#cf1175b-catch-overflow"></a> [CF1175B] catch overflow</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> limit = ((<span class="type">long</span> <span class="type">long</span>)<span class="number">1</span> &lt;&lt; <span class="number">32</span>) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>,t = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> f = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    vector&lt;<span class="type">long</span> <span class="type">long</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">&#x27;a&#x27;</span>) &#123;</span><br><span class="line">            ans += t;</span><br><span class="line">            <span class="keyword">if</span>(ans&gt;limit) &#123;</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">&#x27;f&#x27;</span>)&#123;</span><br><span class="line">            <span class="type">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">            <span class="keyword">if</span>(t&gt;limit)&#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            t *= x;</span><br><span class="line">            v.<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">&#x27;e&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(cnt==<span class="number">0</span>)&#123;</span><br><span class="line">                t /= v.<span class="built_in">back</span>();</span><br><span class="line">                v.<span class="built_in">pop_back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cnt--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(f)</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">&quot;OVERFLOW!!!\n&quot;</span> );</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="nowcoder-非递归实现组合型枚举"><a class="markdownIt-Anchor" href="#nowcoder-非递归实现组合型枚举"></a> NowCoder 非递归实现组合型枚举</h3><p>模拟汇编的操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> st[maxn], address, top;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void cal(int x)&#123;//参数x表示当前选择的数字</span></span><br><span class="line"><span class="comment">    if(v.size()&gt;m||v.size()+(n-x+1)&lt;m)</span></span><br><span class="line"><span class="comment">        return;</span></span><br><span class="line"><span class="comment">    if(x==n+1)&#123;</span></span><br><span class="line"><span class="comment">        for (int i = 0; i &lt; v.size();i++)&#123;</span></span><br><span class="line"><span class="comment">            printf(&quot;%d &quot;, v[i]);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        printf(&quot;\n&quot;);</span></span><br><span class="line"><span class="comment">        return;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    //选x</span></span><br><span class="line"><span class="comment">    v.push_back(x);</span></span><br><span class="line"><span class="comment">    cal(x + 1);</span></span><br><span class="line"><span class="comment">    //不选x</span></span><br><span class="line"><span class="comment">    v.pop_back();</span></span><br><span class="line"><span class="comment">    cal(x + 1);</span></span><br><span class="line"><span class="comment">    return;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> ret_addr)</span></span>&#123;<span class="comment">//新指令(数字)进栈</span></span><br><span class="line">    <span class="type">int</span> old_top = top;</span><br><span class="line">    st[++top] = x;</span><br><span class="line">    st[++top] = ret_addr;</span><br><span class="line">    st[++top] = old_top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ret</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret_addr = st[top - <span class="number">1</span>];</span><br><span class="line">    top = st[top];<span class="comment">//让最后一条语句出栈</span></span><br><span class="line">    <span class="keyword">return</span> ret_addr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">cal</span>(<span class="number">1</span>, <span class="number">0</span>);<span class="comment">//数字1进栈</span></span><br><span class="line">    <span class="keyword">while</span>(top)&#123;</span><br><span class="line">        <span class="type">int</span> x = st[top - <span class="number">2</span>]; <span class="comment">//获取的是数字x</span></span><br><span class="line">        <span class="keyword">switch</span>(address)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">if</span>(v.<span class="built_in">size</span>()&gt;m||v.<span class="built_in">size</span>()+(n-x+<span class="number">1</span>)&lt;m)&#123;</span><br><span class="line">                    address = <span class="built_in">ret</span>(); <span class="comment">//也就是return;</span></span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(x==n+<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, v[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    address = <span class="built_in">ret</span>();</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                v.<span class="built_in">push_back</span>(x);</span><br><span class="line">                <span class="built_in">cal</span>(x + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">                address = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                v.<span class="built_in">pop_back</span>();</span><br><span class="line">                <span class="built_in">cal</span>(x + <span class="number">1</span>, <span class="number">2</span>);<span class="comment">//返回后从cas2继续执行</span></span><br><span class="line">                address = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                address = <span class="built_in">ret</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h1><h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2><h3 id="断言"><a class="markdownIt-Anchor" href="#断言"></a> 断言</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">assert</span>(a==<span class="number">0</span>);</span><br><span class="line">程序正常运行</span><br><span class="line">    </span><br><span class="line"><span class="built_in">assert</span>(a==<span class="number">1</span>);</span><br><span class="line">会报出错误,也就是说我所断言的a==<span class="number">1</span>是错误的</span><br></pre></td></tr></table></figure><h2 id="最大子段和"><a class="markdownIt-Anchor" href="#最大子段和"></a> 最大子段和</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> best=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    sum=<span class="built_in">max</span>(array[i],sum+array[k]);</span><br><span class="line">    best=<span class="built_in">max</span>(sun,best);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;best&lt;&lt;endl;</span><br></pre></td></tr></table></figure><h2 id="双指针问题"><a class="markdownIt-Anchor" href="#双指针问题"></a> 双指针问题</h2><h3 id="cf1304dshortest-and-longest-lis"><a class="markdownIt-Anchor" href="#cf1304dshortest-and-longest-lis"></a> [CF1304D]Shortest and Longest LIS</h3><p><a href="https://codeforces.com/contest/1304/problem/D">https://codeforces.com/contest/1304/problem/D</a></p><p>构造最长LIS时,要从最小的数开始填</p><p>构造最长LIS时,要从最大的数开始填</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> ans[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">int</span> n;string s;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">        <span class="type">int</span> num = n, last = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==n<span class="number">-1</span>||s[i]==<span class="string">&#x27;&gt;&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = i; j &gt;= last;j--) &#123;</span><br><span class="line">                    ans[j] = num--;</span><br><span class="line">                &#125;</span><br><span class="line">                last = i + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n;i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ans[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        num = <span class="number">1</span>, last = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==n<span class="number">-1</span>||s[i]==<span class="string">&#x27;&lt;&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = i; j &gt;= last;j--) &#123;</span><br><span class="line">                    ans[j] = num++;</span><br><span class="line">                &#125;</span><br><span class="line">                last = i + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n;i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ans[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cf1199c-mp3"><a class="markdownIt-Anchor" href="#cf1199c-mp3"></a> [CF1199C] mp3</h3><p>这题神烦</p><p><a href="https://codeforces.com/contest/1199/problem/C">https://codeforces.com/contest/1199/problem/C</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">4e5</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line"><span class="type">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    k *= <span class="number">8</span>;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">        <span class="keyword">if</span>(!mp[x]) &#123;</span><br><span class="line">            v.<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        mp[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    m = <span class="built_in">unique</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>())-v.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="type">int</span> tot = k / n;</span><br><span class="line">    <span class="keyword">if</span>(tot&gt;<span class="number">20</span>)</span><br><span class="line">        tot = <span class="number">20</span>;</span><br><span class="line">    tot = <span class="number">1</span> &lt;&lt; tot;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">            pre[i] = mp[v[i]];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            pre[i] = pre[i - <span class="number">1</span>] + mp[v[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m;i++) &#123;</span><br><span class="line">        <span class="type">int</span> j = i + tot - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(i!=<span class="number">0</span>)</span><br><span class="line">            x = pre[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(j&gt;=m) &#123;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, x);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> y = pre[j];</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, pre[m - <span class="number">1</span>] - y + x);</span><br><span class="line">    &#125;</span><br><span class="line">    ans = <span class="built_in">max</span>(ans, <span class="number">0</span>);</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hash</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/Hash/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/Hash/</url>
      
        <content type="html"><![CDATA[<h1 id="模板"><a class="markdownIt-Anchor" href="#模板"></a> 模板</h1><p><a href="http://xlorpaste.cn/y0xia1">http://xlorpaste.cn/y0xia1</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Hash</span>() &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> SEED = <span class="number">13331</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> p[maxn], f[maxn], ff[maxn];</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Hash</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        n = s.<span class="built_in">size</span>();</span><br><span class="line">        f[<span class="number">0</span>] = s[<span class="number">0</span>] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>;</span><br><span class="line">        p[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            f[i] = (f[i - <span class="number">1</span>] * SEED % mod + (s[i] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>)) % mod;</span><br><span class="line">            p[i] = p[i - <span class="number">1</span>] * SEED % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        ff[n - <span class="number">1</span>] = s[n - <span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            ff[i] = (ff[i + <span class="number">1</span>] * SEED % mod + (s[i] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>)) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">h</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> f[r];</span><br><span class="line">        <span class="keyword">return</span> (f[r] - f[l - <span class="number">1</span>] * p[r - l + <span class="number">1</span>] % mod + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">hh</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (r == n - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> ff[l];</span><br><span class="line">        <span class="keyword">return</span> (ff[l] - ff[r + <span class="number">1</span>] * p[r - l + <span class="number">1</span>] % mod + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><h2 id="google-kick-start-round-a"><a class="markdownIt-Anchor" href="#google-kick-start-round-a"></a> Google Kick Start Round A</h2><p>题意</p><blockquote><p>有L个单词,现在给定一个字符串S,长度为N.<br>1&lt;L&lt;20000,2&lt;N&lt;1e6。且所有单词的长度总和小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br>一个单词和S串匹配的方法是: 这个单词和S的一个子串的首字符和尾字符相同,中间的字母种类个数相同,但是顺序随意,求有多少个单词是匹配的?</p></blockquote><p>思路</p><blockquote><p>首先匹配的思路是：确定首尾之后，只要中间的字符出现的次数相同即可，那么用一个num[26]来记录即可<br>由于所以单词长度总和小于1e5，则可以知道不同长度有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{10^5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.08494599999999997em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9550540000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span><span style="top:-2.915054em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08494599999999997em;"><span></span></span></span></span></span></span></span></span>个,因为1+2+3+…+n = n*(n+1)/2<br>以这个长度枚举</p></blockquote><p>代码: <a href="http://xlorpaste.cn/sm4tac">http://xlorpaste.cn/sm4tac</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>动态规划</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>一些DP题目存档</p><span id="more"></span><h3 id="cf-k-tree"><a class="markdownIt-Anchor" href="#cf-k-tree"></a> [CF] k-Tree</h3><p>寒假手速赛第一场</p><p>题意:…</p><p>时间复杂度:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n*k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></p><p>思路:直接模拟，选或者不选，dp数组第一维为和，第二维为是否包含重量大于d的边</p><p>（考虑组合数做法？）</p><p><a href="https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/C">https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/C</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[maxn][<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;k, &amp;d);</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k;j++) &#123;   </span><br><span class="line">            <span class="keyword">if</span>(i&gt;=j) &#123;</span><br><span class="line">                <span class="keyword">if</span>(j&lt;d) &#123;</span><br><span class="line">                    dp[i][<span class="number">0</span>] = (dp[i][<span class="number">0</span>] + dp[i - j][<span class="number">0</span>]) % mod;</span><br><span class="line">                    dp[i][<span class="number">1</span>] = (dp[i][<span class="number">1</span>] + dp[i - j][<span class="number">1</span>]) % mod;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j&gt;=d) &#123;</span><br><span class="line">                    dp[i][<span class="number">1</span>] = (dp[i][<span class="number">1</span>] + dp[i - j][<span class="number">0</span>] + dp[i - j][<span class="number">1</span>]) % mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[n][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="操作集锦"><a class="markdownIt-Anchor" href="#操作集锦"></a> 操作集锦</h3><p><a href="https://ac.nowcoder.com/acm/contest/4853/C">https://ac.nowcoder.com/acm/contest/4853/C</a></p><p>题意</p><blockquote><p>找到长度为k的本质不同的子序列的个数</p></blockquote><p>思路</p><blockquote><p>按照长度枚举</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="type">int</span> v = s[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    pre[i] = pos[v];</span><br><span class="line">    pos[v] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!pre[j])</span><br><span class="line">            dp[i][j] = (dp[i][j - <span class="number">1</span>] + dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + (i &gt; <span class="number">1</span> ? <span class="number">0</span> : <span class="number">1</span>)) % mod;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            dp[i][j] = (dp[i][j<span class="number">-1</span>]+dp[i<span class="number">-1</span>][j<span class="number">-1</span>]-dp[i<span class="number">-1</span>][pre[j]<span class="number">-1</span>]+mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码 : <a href="https://xlorpaste.cn/gewr71">https://xlorpaste.cn/gewr71</a></p><h3 id="cf-lcis"><a class="markdownIt-Anchor" href="#cf-lcis"></a> [CF] LCIS</h3><p>寒假手速赛第一场</p><p>题意:求给定两个序列的公共最长子序列</p><p>时间复杂度:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>思路:增加一个指针，一个记录路径的数组即可</p><p><a href="https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/D">https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/D</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">500</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[maxn],s[maxn];</span><br><span class="line"><span class="type">int</span> dp[maxn], pre[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;s[j])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;s[j]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[j]&gt;dp[x])&#123;</span><br><span class="line">                    x = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i] == s[j]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[j]&lt;dp[x]+<span class="number">1</span>) &#123;</span><br><span class="line">                    dp[j] = dp[x] + <span class="number">1</span>;</span><br><span class="line">                    pre[j] = x;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[i]&gt;dp[t])&#123;</span><br><span class="line">            ans = dp[i];</span><br><span class="line">            t = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">while</span>(t) &#123;</span><br><span class="line">        v.<span class="built_in">push_back</span>(s[t]);</span><br><span class="line">        t = pre[t];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sz = v.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = sz - <span class="number">1</span>; i &gt;= <span class="number">0</span>;i--) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, v[i]);</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cf-elevator"><a class="markdownIt-Anchor" href="#cf-elevator"></a> [CF] Elevator</h3><p><a href="https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/E">https://codeforces.com/group/GlRm4CeuZ9/contest/266331/problem/E</a></p><p>题意：某电梯可以承载4个人，上、下电梯均需要1s，上、下一层均需要1s，乘客按照排队顺序上电梯</p><p>给定每个乘客所在楼层和目标楼层，问送完所有乘客的最短时间</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> dp[maxn][<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> x[maxn], y[maxn];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dis</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">abs</span>(x - y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> cur,<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dp[i][cur][a][b][c])</span><br><span class="line">        <span class="keyword">return</span> dp[i][cur][a][b][c];</span><br><span class="line">    <span class="type">int</span> ans = inf;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!a&amp;&amp;!b&amp;&amp;!c)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(a)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, a, <span class="number">0</span>, b, c) + <span class="built_in">dis</span>(cur, a) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(b)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, b, a, <span class="number">0</span>, c) + <span class="built_in">dis</span>(cur, b) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(c)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, c, a, b, <span class="number">0</span>) + <span class="built_in">dis</span>(cur, c) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> dp[i][cur][a][b][c] = ans;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span>(a)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, a, <span class="number">0</span>, b, c) + <span class="built_in">dis</span>(cur, a) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(b)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, b, a, <span class="number">0</span>, c) + <span class="built_in">dis</span>(cur, b) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(c)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i, c, a, b, <span class="number">0</span>) + <span class="built_in">dis</span>(cur, c) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(a&amp;&amp;b&amp;&amp;c) &#123;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, y[i], a, b, c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="built_in">dis</span>(x[i], y[i]) + <span class="number">2</span>);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, a, y[i], b, c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="built_in">dis</span>(x[i], a) + <span class="number">2</span>);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, b, a, y[i], c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="built_in">dis</span>(x[i], b) + <span class="number">2</span>);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, c, a, b, y[i]) + <span class="built_in">dis</span>(cur, x[i]) + <span class="built_in">dis</span>(x[i], c) + <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(!a)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, x[i], y[i], b, c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!b)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, x[i], a, y[i], c) + <span class="built_in">dis</span>(cur, x[i]) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!c)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, <span class="built_in">dfs</span>(i + <span class="number">1</span>, x[i], a, b, y[i]) + <span class="built_in">dis</span>(cur, x[i]) + <span class="number">1</span>);   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[i][cur][a][b][c] = ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x[i], &amp;y[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cf-状压-marbles"><a class="markdownIt-Anchor" href="#cf-状压-marbles"></a> [CF] 状压 Marbles</h3><p><a href="https://codeforces.com/contest/1215/problem/E">https://codeforces.com/contest/1215/problem/E</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">4e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> pre[<span class="number">30</span>][<span class="number">30</span>], cnt[<span class="number">30</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[<span class="number">1</span> &lt;&lt; <span class="number">21</span>];</span><br><span class="line"></span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span>(!mp[a[i]])&#123;</span><br><span class="line">            mp[a[i]] = tot++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x = mp[a[i]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; tot;j++) &#123;</span><br><span class="line">            pre[x][j] += cnt[j];</span><br><span class="line">        &#125;</span><br><span class="line">        cnt[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; (<span class="number">1</span> &lt;&lt; tot); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; tot;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j)) &#123;</span><br><span class="line">                <span class="type">long</span> <span class="type">long</span> temp = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; tot;k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(j!=k&amp;&amp;!(i&amp;(<span class="number">1</span>&lt;&lt;k))) &#123;</span><br><span class="line">                        temp += pre[j][k];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dp[i] = <span class="built_in">min</span>(dp[i], dp[i ^ (<span class="number">1</span> &lt;&lt; j)] + temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, dp[(<span class="number">1</span> &lt;&lt; tot) - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cf1216f-wi-fi"><a class="markdownIt-Anchor" href="#cf1216f-wi-fi"></a> [CF1216F]  Wi-Fi</h3><p><a href="https://codeforces.com/contest/1216/problem/F">https://codeforces.com/contest/1216/problem/F</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[maxn], tr[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> rt,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> pos,<span class="type">long</span> <span class="type">long</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==pos&amp;&amp;r==pos) &#123;</span><br><span class="line">        tr[rt] = v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos&lt;=mid) &#123;</span><br><span class="line">        <span class="built_in">update</span>(rt &lt;&lt; <span class="number">1</span>, l, mid, pos, v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">update</span>(rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r, pos, v);</span><br><span class="line">    &#125;</span><br><span class="line">    tr[rt] = <span class="built_in">min</span>(tr[rt &lt;&lt; <span class="number">1</span>], tr[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">query</span><span class="params">(<span class="type">int</span> rt,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> L,<span class="type">int</span> R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R) &#123;</span><br><span class="line">        <span class="keyword">return</span> tr[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=mid)</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, <span class="built_in">query</span>(rt &lt;&lt; <span class="number">1</span>, l, mid, L, R));</span><br><span class="line">    <span class="keyword">if</span>(R&gt;mid)</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, <span class="built_in">query</span>(rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r, L, R));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(tr, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(tr));</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">0</span>, n, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>)</span><br><span class="line">            dp[i] = <span class="built_in">min</span>(dp[i], dp[i - <span class="number">1</span>] + i);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> x = <span class="built_in">min</span>(i + k, n);</span><br><span class="line">            <span class="type">int</span> y = <span class="built_in">max</span>(i - k - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">            dp[x] = <span class="built_in">min</span>(dp[x], <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">0</span>, n, y, n) + i);</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">0</span>, n, x, dp[x]);</span><br><span class="line">        &#125;</span><br><span class="line">        dp[i] = <span class="built_in">min</span>(dp[i], <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">0</span>, n, i + <span class="number">1</span>, n));</span><br><span class="line">        <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">0</span>, n, i, dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, dp[n]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[maxn];</span><br><span class="line"><span class="type">int</span> f[maxn],a[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    f[n + <span class="number">1</span>] = <span class="number">2</span> * n + k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n;i&gt;=<span class="number">1</span>;i--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">1</span>) &#123;</span><br><span class="line">            f[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            f[i] = f[i + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        dp[i] = dp[i - <span class="number">1</span>] + i;</span><br><span class="line">        <span class="type">int</span> t = f[<span class="built_in">max</span>(<span class="number">1</span>, i - k)];</span><br><span class="line">        <span class="keyword">if</span>(t&lt;=i+k) &#123;</span><br><span class="line">            dp[i] = <span class="built_in">min</span>(dp[i], dp[<span class="built_in">max</span>(<span class="number">1</span>, t - k) - <span class="number">1</span>] + t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, dp[n]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最短路</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dis[maxn];</span><br><span class="line"><span class="type">int</span> vis[maxn];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> to;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> v;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;edge&gt; G[maxn];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> to;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> dis;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> node&amp; b)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> dis&gt;b.dis;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dijkstra</span><span class="params">(<span class="type">int</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>;i++)</span><br><span class="line">        dis[i] = <span class="number">1e18</span>;</span><br><span class="line"></span><br><span class="line">    priority_queue&lt;node&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>((node)&#123;s, <span class="number">0</span>&#125;);</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        node t = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> u = t.to;</span><br><span class="line">        <span class="keyword">if</span>(vis[u])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> sz = G[u].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sz; i++) &#123;</span><br><span class="line">            <span class="type">int</span> v = G[u][i].to;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> d = G[u][i].v;</span><br><span class="line">            <span class="keyword">if</span>(dis[u]+d&lt;dis[v]) &#123;</span><br><span class="line">                dis[v] = dis[u] + d;</span><br><span class="line">                q.<span class="built_in">push</span>((node)&#123;v, dis[v]&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> v = i;</span><br><span class="line">        G[i].<span class="built_in">push_back</span>((edge)&#123;i + <span class="number">1</span>, v&#125;);</span><br><span class="line">        G[i].<span class="built_in">push_back</span>((edge)&#123;i - <span class="number">1</span>, <span class="number">0</span>&#125;);</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">int</span> l = <span class="built_in">max</span>(i - k, <span class="number">1</span>);</span><br><span class="line">            <span class="type">int</span> r = <span class="built_in">min</span>(i + k, n) + <span class="number">1</span>;</span><br><span class="line">            G[l].<span class="built_in">push_back</span>((edge)&#123;r, v&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    G[n+<span class="number">1</span>].<span class="built_in">push_back</span>((edge)&#123;n, <span class="number">0</span>&#125;);</span><br><span class="line">    <span class="built_in">dijkstra</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, dis[n + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">4e5</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[maxn];</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    deque&lt;<span class="type">int</span>&gt; d;</span><br><span class="line">    d.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n + k;i++) &#123;</span><br><span class="line">        dp[i] = dp[i - <span class="number">1</span>] + i;</span><br><span class="line">        <span class="keyword">if</span>(i-k&gt;<span class="number">0</span>&amp;&amp;a[i-k]==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span>(!d.<span class="built_in">empty</span>()&amp;&amp;d.<span class="built_in">front</span>()&lt;i<span class="number">-2</span>*k<span class="number">-1</span>)</span><br><span class="line">                d.<span class="built_in">pop_front</span>();</span><br><span class="line">            dp[i] = <span class="built_in">min</span>(dp[i], dp[d.<span class="built_in">front</span>()] + i - k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!d.<span class="built_in">empty</span>()&amp;&amp;dp[d.<span class="built_in">back</span>()]&gt;=dp[i])</span><br><span class="line">            d.<span class="built_in">pop_back</span>();</span><br><span class="line">        d.<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &lt;= n + k;i++) &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="cf1324e-sleeping-schedule"><a class="markdownIt-Anchor" href="#cf1324e-sleeping-schedule"></a> [CF1324E] Sleeping Schedule</h3><p><a href="https://codeforces.com/contest/1324/problem/E">https://codeforces.com/contest/1324/problem/E</a></p><p>要么选<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,要么选<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a_i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="type">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n,h,l,r;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; h &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-0x3f</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; h;j++) &#123;</span><br><span class="line">            <span class="type">int</span> x = (j + a[i] - <span class="number">1</span>) % h;</span><br><span class="line">            <span class="type">int</span> f = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(l&lt;=x&amp;&amp;x&lt;=r)</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            dp[i][x] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][j] + f, dp[i][x]);</span><br><span class="line">            x = (j + a[i]) % h;</span><br><span class="line">            <span class="keyword">if</span>(l&lt;=x&amp;&amp;x&lt;=r)</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                f = <span class="number">0</span>;</span><br><span class="line">            dp[i][x] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][j] + f, dp[i][x]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; h;i++) &#123;</span><br><span class="line">        ans = <span class="built_in">max</span>(ans, dp[n][i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="状压dp"><a class="markdownIt-Anchor" href="#状压dp"></a> 状压DP</h2><h3 id="找朋友"><a class="markdownIt-Anchor" href="#找朋友"></a> 找朋友</h3><p>赵队出的题，找朋友</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> dbg(args...) do &#123;cout &lt;&lt; #args &lt;&lt; <span class="string">&quot; : &quot;</span>&lt;&lt; args &lt;&lt; endl;&#125; </span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = (<span class="number">1</span>&lt;&lt;<span class="number">21</span>);</span><br><span class="line"><span class="type">int</span> x[<span class="number">25</span>],y[<span class="number">25</span>];</span><br><span class="line"><span class="type">int</span> n,f;</span><br><span class="line"><span class="type">double</span> dp[maxn];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        <span class="keyword">if</span>((!(s&amp;x))&amp;&amp;(t&amp;x))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dis</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">min_dis</span><span class="params">(<span class="type">int</span> t,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">double</span>&gt;v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        <span class="keyword">if</span>(t&amp;x)&#123;</span><br><span class="line">            v.<span class="built_in">pb</span>(<span class="built_in">dis</span>(i,j));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">if</span>(v.<span class="built_in">size</span>()&lt;=<span class="number">1</span>)<span class="keyword">return</span> inf;</span><br><span class="line">    <span class="keyword">return</span> v[<span class="number">0</span>]+v[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;<span class="built_in">scan</span>(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scan</span>(n);</span><br><span class="line">        <span class="type">int</span> s=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> xx=((<span class="number">1</span>&lt;&lt;(n+<span class="number">1</span>))<span class="number">-1</span>)^<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=maxn<span class="number">-1</span>;i++)dp[i]=inf;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="built_in">scannn</span>(x[i],y[i],f);</span><br><span class="line">            <span class="keyword">if</span>(f)s^=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        &#125;</span><br><span class="line">        dp[s]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=s;i&lt;=xx;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">check</span>(i,s))<span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">fo</span>(j,<span class="number">1</span>,n)&#123;</span><br><span class="line">                <span class="type">int</span> t=(<span class="number">1</span>&lt;&lt;j);</span><br><span class="line">                <span class="keyword">if</span>((i&amp;t)&amp;&amp;(!(s&amp;t)))&#123;</span><br><span class="line">                    <span class="type">int</span> x=i^t;</span><br><span class="line">                    dp[i]=<span class="built_in">min</span>(dp[x]+<span class="built_in">min_dis</span>(x,j),dp[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(dp[xx]==inf)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No Solution\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.6lf\n&quot;</span>,dp[xx]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区间dp"><a class="markdownIt-Anchor" href="#区间dp"></a> 区间DP</h2><p>###[CF1199F] Rectangle Painting</p><p><a href="https://codeforces.com/contest/1199/problem/F">https://codeforces.com/contest/1199/problem/F</a></p><p>给定一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的矩阵,由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">#</mi><mtext>”</mtext><mo separator="true">,</mo><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;\#”,&quot;.&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">&quot;</span><span class="mord">#</span><span class="mord">”</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">&quot;</span><span class="mord">.</span><span class="mord">&quot;</span></span></span></span>组成，每次可以将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>×</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">h\times w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>矩形内的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">#</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;\#&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">&quot;</span><span class="mord">#</span><span class="mord">&quot;</span></span></span></span>变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;.&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span><span class="mord">.</span><span class="mord">&quot;</span></span></span></span></p><p>花费为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">max(h,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>,求将所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">#</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;\#&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">&quot;</span><span class="mord">#</span><span class="mord">&quot;</span></span></span></span>变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;.&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span><span class="mord">.</span><span class="mord">&quot;</span></span></span></span>的最小花费</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i,a,b) for(int i=a;i&lt;=b;i++)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> a[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">55</span>][<span class="number">55</span>][<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> xx,<span class="type">int</span> yy)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x][y][xx][yy]!=<span class="number">-1</span>)<span class="keyword">return</span> f[x][y][xx][yy];</span><br><span class="line">    <span class="type">int</span> ans=<span class="built_in">max</span>(xx-x+<span class="number">1</span>,yy-y+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">fo</span>(i,x,xx<span class="number">-1</span>)ans=<span class="built_in">min</span>(ans,<span class="built_in">dp</span>(x,y,i,yy)+<span class="built_in">dp</span>(i+<span class="number">1</span>,y,xx,yy));</span><br><span class="line">    <span class="built_in">fo</span>(i,y,yy<span class="number">-1</span>)ans=<span class="built_in">min</span>(ans,<span class="built_in">dp</span>(x,y,xx,i)+<span class="built_in">dp</span>(x,i+<span class="number">1</span>,xx,yy));</span><br><span class="line">    <span class="keyword">return</span> f[x][y][xx][yy]=ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line">    <span class="built_in">fo</span>(x,<span class="number">1</span>,n)&#123;</span><br><span class="line">        <span class="built_in">fo</span>(y,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="built_in">fo</span>(xx,<span class="number">1</span>,n)&#123;</span><br><span class="line">                <span class="built_in">fo</span>(yy,<span class="number">1</span>,n)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(x&gt;xx||y&gt;yy)f[x][y][xx][yy]=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span>(x==xx&amp;&amp;y==yy)f[x][y][xx][yy]=(a[x][y]==<span class="string">&#x27;#&#x27;</span>?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">dp</span>(<span class="number">1</span>,<span class="number">1</span>,n,n)&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最短路</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E7%AE%97%E6%B3%95/%E6%9C%80%E7%9F%AD%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>dijkstra 基于贪心思想，利用了三角不等式，因为全局最小值不可能再被其他节点更新</p><p>dijkstra 用于解决单源最短路问题</p><p>disjstra 用于解决非负权图问题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> v;</span><br><span class="line">    <span class="type">int</span> w;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node&gt; e[maxn];</span><br><span class="line"><span class="type">int</span> dis[maxn];</span><br><span class="line"><span class="type">bool</span> vis[maxn];</span><br><span class="line"><span class="type">int</span> pre[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dijkstra</span><span class="params">(<span class="type">int</span> s)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;pii, vector&lt;pii&gt;, greater&lt;pii&gt;&gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(dis, inf, <span class="built_in">sizeof</span>(dis));</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;dis[s], s&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        pii t = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> u = t.second;</span><br><span class="line">        <span class="keyword">if</span>(vis[u])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(node x:e[u]) &#123;</span><br><span class="line">            <span class="type">int</span> v = x.v;</span><br><span class="line">            <span class="type">int</span> w = x.w;</span><br><span class="line">            <span class="keyword">if</span>(dis[v]&gt;dis[u]+w) &#123;</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                pre[v] = u;</span><br><span class="line">                q.<span class="built_in">push</span>(&#123;dis[v], v&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        pre[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="type">int</span> u, v, w;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>((node)&#123;v, w&#125;);</span><br><span class="line">        <span class="comment">// e[v].push_back((node)&#123;u, w&#125;);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dijkstra</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>最短路计数，假设一张无权图，边长为1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">dijkstra</span><span class="params">(<span class="type">int</span> s)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;pii,vector&lt;pii&gt;,greater&lt;pii&gt;&gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(dis, inf, <span class="built_in">sizeof</span>(dis));</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, s&#125;);</span><br><span class="line">    cnt[s] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        pii tmp = q.<span class="built_in">top</span>();</span><br><span class="line">        <span class="type">int</span> u = tmp.second;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(vis[u])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[v]&gt;dis[u]+<span class="number">1</span>) &#123;</span><br><span class="line">                dis[v] = dis[u] + <span class="number">1</span>;</span><br><span class="line">                cnt[v] = cnt[u];</span><br><span class="line">                <span class="keyword">if</span>(!vis[v]) &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(&#123;dis[v],v&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(dis[v] == dis[u]+<span class="number">1</span>) &#123;</span><br><span class="line">                cnt[v] = (cnt[v] + cnt[u]) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SPFA<br>基于队列优化的Bellman-Ford算法</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/java/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/java/</url>
      
        <content type="html"><![CDATA[<p>Java课程笔记</p><span id="more"></span><h1 id="java笔记"><a class="markdownIt-Anchor" href="#java笔记"></a> Java笔记</h1><h2 id="uml"><a class="markdownIt-Anchor" href="#uml"></a> UML</h2><p>统一建模语言</p><h2 id="面向对象三大特征"><a class="markdownIt-Anchor" href="#面向对象三大特征"></a> 面向对象三大特征</h2><h3 id="封装性"><a class="markdownIt-Anchor" href="#封装性"></a> 封装性</h3><p>类的内部信息不能被外部程序<strong>直接访问</strong><br>但是可以用该类提供的<strong>方法</strong>(Method)对隐藏信息进行操作和访问<br>（注意，private成员只是不能被<strong>直接</strong>访问）</p><p>封装步骤</p><p>1.修改属性的可见性:<br>​改为private<br>2.创建公有方法:<br>​getter方法/setter方法<br>​(分别用于属性的读/写)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Mydate</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyDate</span>();</span><br><span class="line"></span><br><span class="line">d.setDay(<span class="number">31</span>);</span><br><span class="line">d.setDay(d.getDay()+<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>3.在getter/setter方法中加入属性控制语句:</p><p>​对属性值的合法性进行判断</p><p>​(不懂,判断什么合法性?这条看着像硬凑上去的)</p><p>继承性(Inheritance)</p><p>表示关系常用：is-a</p><p>父类更通用（一般特性），子类更具体（自身特性）</p><p>想象一棵树</p><p>多态性</p><p>不同对象对于同一个方法实现不同的行为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">X</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Y</span> <span class="keyword">extends</span> <span class="title class_">X</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestExtend</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">X</span> <span class="variable">x</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">X</span>();<span class="comment">//x的静态类型为X,动态类型为X</span></span><br><span class="line">        <span class="type">Y</span> <span class="variable">y</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Y</span>();</span><br><span class="line">        x = y;<span class="comment">//x的静态类型为X,动态类型为Y</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在概念上X包含Y。</p><p>在所有期望X为实例的场合，都允许用Y的实例来代替。</p><p>编译时完成的绑定为静态绑定，反之为动态绑定。</p><p>x为一多态引用变量，调用时使用的时Y中重定义的代码。</p><p>实际操作</p><p>创建项目<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>新建类 guagua.java<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>编译<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>得到guagua.class</p><blockquote><p>一个类对应一个文件</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> shipping.reports;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> shipping.domain.*;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pubilc <span class="keyword">class</span> <span class="title class_">Guagua</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String salutation;</span><br><span class="line">    Guagua(String S)&#123;</span><br><span class="line">        salutation = S;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">guagua</span><span class="params">(String C)</span> &#123;</span><br><span class="line">        System.out.println(salutation + <span class="string">&quot; &quot;</span> + C);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//out 是 System 类的一个static属性,它的类型是PrintStream</span></span><br><span class="line">    <span class="comment">//PrintStream 是 java.io 包里定义的一个类</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestGuagua</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">     <span class="type">Guagua</span> <span class="variable">hello</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Guagua</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">        hello.guagua(<span class="string">&quot;World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//提供输入参数,该参数就存入字符串中args[]中</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><p>​</p><h2 id="标记token"><a class="markdownIt-Anchor" href="#标记token"></a> 标记(token)</h2><blockquote><p>return 0 三个标记</p><p>return0 一个标记</p></blockquote><h3 id="词法分析器的贪婪性"><a class="markdownIt-Anchor" href="#词法分析器的贪婪性"></a> 词法分析器的&quot;贪婪性&quot;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">j = i+++++i;</span><br><span class="line">j = i++ + ++i;</span><br></pre></td></tr></table></figure><h2 id="类型"><a class="markdownIt-Anchor" href="#类型"></a> 类型</h2><p>默写一下基本类型?</p><p>boolean</p><p>char</p><p>byte(8),short(16),int(32),long(64)  (bits)</p><blockquote><p>注意一下,8 bits 代表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>7</mn></msup><mi>t</mi><mi>o</mi><msup><mn>2</mn><mn>7</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-2^7 to 2^7-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>整数型默认为int</p></blockquote><p>float(32),double(64) (bits)</p><blockquote><p>浮点数默认是double</p></blockquote><p><em>String</em> 是一个类</p><h3 id="引用类型"><a class="markdownIt-Anchor" href="#引用类型"></a> 引用类型</h3><p><strong>Primitive Variable</strong></p><p>byte x =7;</p><p><strong>Referenve Variable</strong></p><p>Dog myDog = new Dog();</p><p><strong>“Java中唯一的对象引用字面值(literals)是null”</strong></p><blockquote><p>这句话的意思就是,如果现在我们要写一个引用类型,然后现在其实并没有什么要引用的东西,我们就直接写个null,但是不能写别的东西,比如123,321这种东西(C++貌似就可以)</p><p>String s = null;也可以</p></blockquote><p>现在又讲到堆(Heap)和栈(Stack)</p><blockquote><p>栈用来存<strong>指令</strong>,堆用来存<strong>实例</strong>;</p><p>对象实例在heap中进行分配,然后呢在stack中保存一个4字节的heap的内存地址(这一部分好好玩,和我想象的一样);</p><p>然后再来说一下,栈里到底存什么:</p><p>1.基本数据类型,也就是刚才默写的那些东西啦~;</p><p>2.指令代码:函数方法属于指令;</p><p>3.对象的引用地址;</p><p>4.常量.也就是final 量?</p></blockquote><h3 id="变量生命周期"><a class="markdownIt-Anchor" href="#变量生命周期"></a> 变量生命周期</h3><h4 id="1成员变量"><a class="markdownIt-Anchor" href="#1成员变量"></a> 1.成员变量</h4><p>类被实例化的时候创建</p><p>没有赋值的话是会有默认值的</p><h4 id="2局部变量"><a class="markdownIt-Anchor" href="#2局部变量"></a> 2.局部变量</h4><p>静态成员变量的初始化要先于非静态成员变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">F</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">20</span>;<span class="comment">//被F的构造函数调用前,x被设置为20;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">30</span>;<span class="comment">//在F被加载时设置为30;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>局部变量不会被自动赋值</p><p>等一下,赋值这个东西…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LocalVariable</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">String[] s = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">2</span>];<span class="comment">//可以,初值为null</span></span><br><span class="line">        String[] s;<span class="comment">//不可以</span></span><br><span class="line">        System.out.println(s[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法参数(Method parameter)</strong></p><p>1.定义传入方法的参数</p><p>2.当调用该方法时,新变量被创建,生命周期持续到方法结束</p><blockquote><p>这一块不太懂,不知道这个方法参数应该怎么放</p><p>在那里写这个所谓的方法参数?方法参数指的具体是什么</p></blockquote><h4 id="3类变量"><a class="markdownIt-Anchor" href="#3类变量"></a> 3.类变量</h4><p><strong>即静态变量</strong></p><p>一看就是,和类同生同灭</p><p>“无论有多少对象,类变量始终只有一个<strong>拷贝</strong>,被多个对象共享”</p><p>初始化方法和成员变量相同,对</p><h4 id="final变量"><a class="markdownIt-Anchor" href="#final变量"></a> final变量</h4><p>这个东西跟const没设么区别</p><blockquote><p>如果一个final变量是对一个对象的引用,其引用必须相同,但对象本身可以不同</p><p>什么意思,这句话?</p><p>引用一个对象,引用必须相同,什么意思</p><p>是指我本来指向了一个地址,然后现在那个地址里的对象都换了,但是地址必须还指向那里的意思嘛??</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Walrus</span>&#123;</span><br><span class="line">    <span class="type">int</span> weight;</span><br><span class="line">    Walrus(<span class="type">int</span> w)&#123;</span><br><span class="line">        weight = w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tester</span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Walrus</span> <span class="variable">w1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Walrus</span>(<span class="number">1500</span>);</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        w1 = <span class="keyword">new</span> <span class="title class_">Walrus</span>(<span class="number">1400</span>); <span class="comment">//不合法的</span></span><br><span class="line">        w1.weight = <span class="number">1800</span>;<span class="comment">//合法的</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getValue</span><span class="params">(<span class="keyword">final</span> <span class="type">int</span> a)</span>&#123;</span><br><span class="line">    a = <span class="number">10</span>;<span class="comment">//wrong!</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getValue</span><span class="params">(<span class="keyword">final</span> Contract c)</span>&#123;</span><br><span class="line">    c.hourSpanName = <span class="string">&quot;aa&quot;</span>;<span class="comment">//right</span></span><br><span class="line">&#125;</span><br><span class="line">所以意思就是说,某类(并且是<span class="keyword">final</span>)的里面的局部变量是可以被改变的</span><br><span class="line">...对吧?</span><br></pre></td></tr></table></figure><h3 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h3><p>通俗易懂的一段话:</p><blockquote><p>在java中数组是对象,比如int是基本型,但是int[]是对象</p></blockquote><blockquote><p>数组的声明没有创建数组对象,只创建了对数组对象的引用</p></blockquote><blockquote><p>数组元素所占用的内存是通过new或者初始化有系统动态分配的</p></blockquote><p>数组具体怎么用我们就…先不说啦,感觉很简单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String[] a = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] ages;</span><br><span class="line"></span><br><span class="line">ages = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于heap和stack</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;<span class="comment">//stack memory</span></span><br><span class="line"><span class="type">int</span>[] b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;<span class="comment">//stack里面有int[]b的地址</span></span><br><span class="line"><span class="comment">//heap里面有1,2,3,4,5的内存</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数组长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> i.length;</span><br></pre></td></tr></table></figure><p>用new创建的变量都是引用型变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Shirt</span> <span class="variable">myShirt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Shirt</span>();</span><br><span class="line">Shirt [] shirts = &#123;<span class="keyword">new</span> <span class="title class_">Shirt</span>(),<span class="keyword">new</span> <span class="title class_">Shirt</span>(),<span class="keyword">new</span> <span class="title class_">Shirt</span>()&#125;;</span><br><span class="line"></span><br><span class="line">其中stack中存shirts和myShirt的地址</span><br><span class="line">heap里面存shirts里面三个新的Shirt的地址,然后继续存它们的具体值,还有myShirt的具体值。（看图）</span><br><span class="line">   </span><br></pre></td></tr></table></figure><h3 id="二维数组"><a class="markdownIt-Anchor" href="#二维数组"></a> 二维数组</h3><p>一旦数组被创建，就不能修改长度（和C++一样）</p><p>但是可以写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> Array[] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">6</span>];</span><br><span class="line">Array = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>]; </span><br></pre></td></tr></table></figure><h3 id="运算符"><a class="markdownIt-Anchor" href="#运算符"></a> 运算符</h3><p>instanceof 判断已给的对象是否是某个类或者是接口</p><blockquote><p>等一下 接口到底是啥啊？？</p></blockquote><p>右移运算符</p><p>算术右移，有符号，&gt;&gt;</p><p>逻辑右移，无符号，&gt;&gt;&gt;，最高位补0，只允许对int和long型，byte型会被扩展成int型</p><h3 id="表达式类型"><a class="markdownIt-Anchor" href="#表达式类型"></a> 表达式类型</h3><p>表达式中，char被扩展成int</p><h3 id="隐式转换"><a class="markdownIt-Anchor" href="#隐式转换"></a> 隐式转换</h3><p><strong>基本类型转换</strong></p><p>变宽转换是合法的，变窄转换是不合法的</p><p><strong>引用转换</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Oldtype</span> <span class="variable">x</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Oldtype</span>();</span><br><span class="line"><span class="type">Newtype</span> <span class="variable">y</span> <span class="operator">=</span> x;</span><br><span class="line"><span class="comment">//Oldtype 貌似是 Newtype的 子类</span></span><br></pre></td></tr></table></figure><h3 id="显示转换"><a class="markdownIt-Anchor" href="#显示转换"></a> 显示转换</h3><p>强制转换导致信息损失，需要显示转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">BigValue</span> <span class="operator">=</span> <span class="number">99L</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">squashed</span> <span class="operator">=</span> bigValue;</span><br><span class="line"><span class="type">int</span> <span class="variable">squashed</span> <span class="operator">=</span> (<span class="type">int</span>)bigValue;</span><br><span class="line"><span class="comment">//所以显式转换就是...加“(类型)”？？</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">(Employee e)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e <span class="keyword">instanceof</span> Manager)&#123;</span><br><span class="line">        <span class="type">Manager</span> <span class="variable">m</span> <span class="operator">=</span> (Manager) e;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is the magager of&quot;</span>+m.getDepartment());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//if you do not make the cast,an attempt to execute e.getDepartment() would fail,because the compiler cannot locate a method called getDepartment in the Employee class</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$，abcd$可以作为java标识符</span><br><span class="line">    </span><br><span class="line"><span class="type">char</span>[] a = &#123;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span> a[] = &#123;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>&#125;;</span><br><span class="line">都是合法的</span><br><span class="line">    (?)</span><br></pre></td></tr></table></figure><h2 id="基本"><a class="markdownIt-Anchor" href="#基本"></a> 基本</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">random</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> input.nextInt();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>“switch(表达式)支持字串、枚举的语法糖”</p><p>“JDK1.5之前switch只支持byte，short，char，int”</p><p>“JDK1.5之后的自动拆箱，对应的这四种基础类型的封装类型类也同样支持Byte，Short，Character，Integer“</p><p>对不起看不懂，还反编译</p><p>算了…</p><p>switch支持String，其实是支持String的hash值</p><p>本质上是switch-int结构</p><p>并且利用equals方法来放置hash冲突的问题</p><p>最后利用switch-byte精确匹配</p></blockquote><h3 id="特殊循环控制"><a class="markdownIt-Anchor" href="#特殊循环控制"></a> 特殊循环控制</h3><p>带标号的continue语句 和 带标号的break语句</p><p>这两个语句用来代替goto语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">outer:</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">        statement;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            statement;</span><br><span class="line">            <span class="keyword">if</span>(<span class="type">boolean</span> expression)&#123;</span><br><span class="line">                <span class="keyword">break</span> outer;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(<span class="type">boolean</span> expression)&#123;</span><br><span class="line"><span class="keyword">continue</span> outer;</span><br><span class="line">            &#125;</span><br><span class="line">            statement;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="type">boolean</span> expression);</span><br><span class="line">        statement;</span><br><span class="line">    &#125; <span class="keyword">while</span>(<span class="type">boolean</span> expression);</span><br></pre></td></tr></table></figure><h3 id="使用增强的for循环"><a class="markdownIt-Anchor" href="#使用增强的for循环"></a> 使用增强的for循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printElement</span><span class="params">(<span class="type">int</span>[] list)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> element : list)&#123;</span><br><span class="line">        System.out.println(element);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">privete Map&lt;String,Integer&gt;stockMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line"><span class="keyword">for</span>(Object i:stockMap.keySet())&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;代号：&quot;</span>+i+<span class="string">&quot;，数量：&quot;</span>+stockMap.get(i));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="类和对象"><a class="markdownIt-Anchor" href="#类和对象"></a> 类和对象</h1><h1 id="类"><a class="markdownIt-Anchor" href="#类"></a> 类</h1><p>类包括：</p><p>​字段field：对象包含的数据</p><p>​方法</p><p>​构造器(也就是构造函数)</p><p>​初始化程序块</p><p>​嵌套类(inner class)</p><h2 id="类的修饰符"><a class="markdownIt-Anchor" href="#类的修饰符"></a> 类的修饰符</h2><p>public:如果没写public 就只能在自己所属的包里访问</p><p>abstract：不能实例化</p><p>final:没有子类</p><p>类不可以是private和protected</p><p>包(package) 是用于区别类</p><p>java中的一个包相当于系统中的一个文件夹</p><p>protected 可以被子类的实例、同一个包内的所有类访问</p><h2 id="构造器"><a class="markdownIt-Anchor" href="#构造器"></a> 构造器</h2><p>其实就是构造函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Thing</span><span class="params">()</span>&#123;</span><br><span class="line">        x = <span class="number">233</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Thing</span><span class="params">(<span class="type">int</span> new_x)</span>&#123;</span><br><span class="line">        x = new_x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getX</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setX</span><span class="params">(<span class="type">int</span> new_x)</span>&#123;</span><br><span class="line">        x = new_x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不写构造器的话，系统自动创建</p><p>但如果写了带参数的构造器，系统不会帮忙创造一个不带参数的构造器</p><h3 id="构造器之间的相互调用使用this"><a class="markdownIt-Anchor" href="#构造器之间的相互调用使用this"></a> 构造器之间的相互调用(使用this)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    String title;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Hello</span><span class="params">()</span>&#123;</span><br><span class="line">        title+=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Hello</span><span class="params">(<span class="type">int</span> value)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>();<span class="comment">//必须在第一行调用，不能使用Hello();</span></span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Hello</span><span class="params">(String title,<span class="type">int</span> value)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(value);</span><br><span class="line">        <span class="built_in">this</span>.title += title;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>初始化块</p><p>不知道在说什么，不想看</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InitializationBlock</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line">    <span class="comment">//非静态初始化块:在创建对象时执行(先于构造器);</span></span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">5</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;字段x = &quot;</span>+x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//静态初始化块:仅在类被加载时执行一次;</span></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">//静态初始化块中的局部变量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;局部变量x = &quot;</span>+ x);</span><br><span class="line">        <span class="comment">//静态初始化块中，this.x不可用</span></span><br><span class="line">        System.out.println(<span class="string">&quot;静态字段d = &quot;</span>+ d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">InitializationBlock</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>起名可以用字母，‘<strong>_</strong>’，'<strong>$</strong>'开头</p><h3 id="类的方法"><a class="markdownIt-Anchor" href="#类的方法"></a> 类的方法</h3><h4 id="静态方法"><a class="markdownIt-Anchor" href="#静态方法"></a> 静态方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Count</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> serialNumber;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getTotalCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> counter;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Count</span><span class="params">()</span> &#123;</span><br><span class="line">        counter++;</span><br><span class="line">        serialNumber = counter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestCounter</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Number of counter is &quot;</span> + Count.getTotalCount());<span class="comment">//输出了0</span></span><br><span class="line">        <span class="type">Count</span> <span class="variable">count1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Count</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;Number of counter is &quot;</span>+ Count.getTotalCount());<span class="comment">//输出了1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//应该直接用类名来调用静态方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SomeClass</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">48</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        i += <span class="number">100</span>;</span><br><span class="line">        <span class="comment">// j *= 5;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFrame</span> <span class="keyword">extends</span> <span class="title class_">Frame</span> &#123;</span><br><span class="line">    MyFrame() &#123;</span><br><span class="line">    setSize(<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">MyFrame</span> <span class="variable">theFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyFrame</span>();</span><br><span class="line">        theFrame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 不知道写这一段东西是干嘛的</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">refValExample</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Change</span><span class="params">(<span class="type">int</span>[] pArray)</span> &#123;</span><br><span class="line">        pArray[<span class="number">0</span>] = <span class="number">888</span>;</span><br><span class="line">        pArray = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;-<span class="number">3</span>,-<span class="number">1</span>,-<span class="number">2</span>,-<span class="number">3</span>,-<span class="number">4</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法内，第一个元素是：&quot;</span>+pArray[<span class="number">0</span>]);<span class="comment">//-3</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用方法之前,第一个元素是:&quot;</span>+arr[<span class="number">0</span>]);<span class="comment">//1</span></span><br><span class="line">        Change(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;调用方法之后,第一个元素是:&quot;</span>+arr[<span class="number">0</span>]);<span class="comment">//888</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="包装类"><a class="markdownIt-Anchor" href="#包装类"></a> 包装类</h3><p>Java collection类中的元素必须为objects</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; a = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="type">Integer</span> <span class="variable">itg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(i);</span><br><span class="line"></span><br><span class="line"><span class="type">Integer</span> <span class="variable">jtg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">6</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> jtg.intValue();</span><br><span class="line"></span><br><span class="line"><span class="comment">//long转为Long</span></span><br><span class="line"><span class="type">long</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line"><span class="type">Long</span> <span class="variable">lng</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Long</span>(l);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Long转long</span></span><br><span class="line"><span class="type">Long</span> <span class="variable">gng</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Long</span>(<span class="number">9</span>);</span><br><span class="line"><span class="type">long</span> <span class="variable">g</span> <span class="operator">=</span> gng.longValue();</span><br><span class="line"></span><br><span class="line"><span class="type">Integer</span> <span class="variable">i1</span> <span class="operator">=</span> Integer.valueOf(<span class="number">42</span>);</span><br><span class="line"><span class="type">Integer</span> <span class="variable">i2</span> <span class="operator">=</span> Integer.valueOf(<span class="string">&quot;42&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">Boolean</span> <span class="variable">b1</span> <span class="operator">=</span> Boolean.valueOf(<span class="literal">true</span>);</span><br><span class="line"><span class="type">Boolean</span> <span class="variable">b2</span> <span class="operator">=</span> Boolean.valueOf(<span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">Long</span> <span class="variable">n1</span> <span class="operator">=</span> Long.valueOf(<span class="number">42000000L</span>);</span><br><span class="line"><span class="type">Long</span> <span class="variable">n2</span> <span class="operator">=</span> Long.valueOf(<span class="string">&quot;42000000L&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> Integer.parseInt(<span class="string">&quot;42&quot;</span>);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> Boolean.parseBoolean(<span class="string">&quot;true&quot;</span>);</span><br><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> Double.parseDouble(<span class="string">&quot;3.14&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>自动装箱的例子</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; li = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;<span class="number">50</span>;i++)li.add(i);</span><br><span class="line"><span class="comment">//等价于li.add(Integer.valueOf(i));</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sumEven</span><span class="params">(List&lt;Integer&gt;li)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(Integer i:li)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123; <span class="comment">//等价：if(i.intValue()%2==0)</span></span><br><span class="line">            sum += i;<span class="comment">//等价：sum += i.intValue();</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="static"><a class="markdownIt-Anchor" href="#static"></a> static</h2><p>1.在类被加载的时候,就会加载被static修饰的部分</p><p>2.静态对象与实例对象相对</p><h3 id="静态变量"><a class="markdownIt-Anchor" href="#静态变量"></a> <strong>静态变量</strong></h3><p>是由static修饰的成员变量,又叫做类变量。说明这个变量属于类而不是属于对象</p><p>内存：则它在内存中只存在一份。JVM为静态变量分配一次内存空间。</p><h3 id="实例变量"><a class="markdownIt-Anchor" href="#实例变量"></a> <strong>实例变量</strong></h3><p>指这个变量是属于某个具体的对象的。</p><p>内存：创建几次对象，就有几次成员变量。</p><p>不要通过对象的方式去访问静态变量或者静态方法</p><p>静态不能访问非静态，非静态可以访问静态。（很常见的例子）</p><h3 id="静态方法-2"><a class="markdownIt-Anchor" href="#静态方法-2"></a> 静态方法</h3><p>不存在this关键字</p><p>静态是由类的加载而加载，this是由对象的创建而存在的。所以静态比对象优先存在。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    public static class Fruit&#123;</span></span><br><span class="line"><span class="comment">        Fruit() &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;Yeah!Fruit!&quot;);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public static class Watermelon extends Fruit &#123;</span></span><br><span class="line"><span class="comment">        Watermelon() &#123;</span></span><br><span class="line"><span class="comment">            super();</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;Haha!Watermelon!&quot;);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Maybe...you?&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Haha!Who first?&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多线程"><a class="markdownIt-Anchor" href="#多线程"></a> 多线程</h2><p>分时利用CPU,也叫<strong>并发</strong></p><p>每一次调用start()相当于:放入等待队列,等待CPU调度,处于就绪状态</p><p>方法run()称为线程体,它包含了执行线程的内容</p><p>只有用start()方法来启动线程,才能实现真正的多线程运行,</p><p>将run()方法当作普通方法的方式调用,程序仍然按照顺序进行.</p><h3 id="实现多线程的两种方法"><a class="markdownIt-Anchor" href="#实现多线程的两种方法"></a> 实现多线程的两种方法</h3><h4 id="1继承thread类"><a class="markdownIt-Anchor" href="#1继承thread类"></a> 1.继承Thread类</h4><p>Thread类在java.lang包中定义</p><p>一个类继承Thread类同时覆写了本类中的run()方法 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 用start()启动线程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>实现多线程操作</p><blockquote><p>此方法的局限:<strong>一个类只能继承一个父类</strong></p><p>$\rightarrow $Runnable 接口为非Thread子类的类提供了一种激活方式</p></blockquote><h4 id="2实现runnable接口"><a class="markdownIt-Anchor" href="#2实现runnable接口"></a> 2.实现Runnable接口</h4><p>属于java.lang包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.runnable.demo;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;gua gua stand up!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现run()方法,用new Thread(Runnable target).start()方法来启动</p><blockquote><p>在使用Runnable定义的子类中没有start()方法,只有Thread类才有</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Runner1</span> <span class="variable">runner1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runner1</span>();</span><br><span class="line">        <span class="type">Runner2</span> <span class="variable">runner2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runner2</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runner1);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runner2);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//thread1.start();</span></span><br><span class="line">        <span class="comment">//thread2.start();</span></span><br><span class="line">        thread1.run();</span><br><span class="line">        thread2.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Runner1</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++) &#123;</span><br><span class="line">            System.out.printlen(<span class="string">&quot;Runner1 : i&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Runner2</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++) &#123;</span><br><span class="line">            System.out.printlen(<span class="string">&quot;Runner2 : i&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><hr><h2 id="class"><a class="markdownIt-Anchor" href="#class"></a> Class</h2><hr><h2 id="异常处理"><a class="markdownIt-Anchor" href="#异常处理"></a> 异常处理</h2><blockquote><p>java中异常被封装成了一个类</p><p>出现问题时，会创建异常类对象并且抛出异常相关信息</p></blockquote><h3 id="自定义的异常类"><a class="markdownIt-Anchor" href="#自定义的异常类"></a> 自定义的异常类</h3><p><a href="https://www.cnblogs.com/heliusKing/p/10858832.html">https://www.cnblogs.com/heliusKing/p/10858832.html</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/try...catch">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/try...catch</a></p><p><a href="https://www.runoob.com/jsref/jsref-statements.html">https://www.runoob.com/jsref/jsref-statements.html</a></p><p><a href="https://www.cnblogs.com/0328dongbin/p/9186676.html">https://www.cnblogs.com/0328dongbin/p/9186676.html</a></p><blockquote><p><strong>创建自定义的异常类需要继承自Exception类</strong></p><p>并提供含有一个<strong>String</strong>类型形参的构造方法，该形参就是一场的描述信息，</p><p>可以通过**getMessage()**方法获得。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NewException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="title function_">NewException</span><span class="params">(String s)</span>&#123;<span class="comment">//这个s就是自定义的精髓所在，想传啥传啥</span></span><br><span class="line">         <span class="built_in">super</span>(s);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>什么叫“自定义异常类”？</p><p>它具有哪几部分？try-catch,<strong>throw</strong>,throws,finally</p><p>throw用来抛出一个指定的异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> 异常类名(参数);</span><br></pre></td></tr></table></figure><p>throws用来声明异常</p><p>捕获异常：try…catch…finally</p><p><strong>Throwable类</strong>是所有异常类的<strong>超类</strong></p><p><strong>Exception类</strong>继承自Throwable类</p><p><strong>RuntimeException类</strong>是运行异常类,继承自Exception类，它以及它的子类只能在运行过程中存在，无需throws声明，也无需处理，一旦发生，需要修改源代码</p><p><strong>Error类</strong>与Exception类平级，表示java中的严重错误，只能通过修改代码来解决</p><p>异常：编译或运行时出现的异常问题</p><p>错误：运行时，无法处理，系统级别，只能通过修改源代码解决</p><p>过程：</p><blockquote><p>1.运行或者编译时产生异常</p><p>2.创建异常类的对象</p><p>3.声明异常类</p><p>4.将异常类对象传给调用者(main()方法)处理</p><p>5.调用者无法处理，再将异常类对象传给jvm虚拟机</p><p>6.jvm虚拟机将异常类的信息（名称、详细信息、异常所处的位置）打印在屏幕上，并且停止程序的运行</p><blockquote><p>API:</p></blockquote></blockquote><p>先跳过异常处理…</p><p>finally是无论有没有异常都会执行</p><hr><h2 id="java虚拟机"><a class="markdownIt-Anchor" href="#java虚拟机"></a> JAVA虚拟机</h2><p>Java Virtual Machine</p><p><a href="https://baijiahao.baidu.com/s?id=1615674728647851945&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1615674728647851945&amp;wfr=spider&amp;for=pc</a></p><p><a href="https://blog.csdn.net/qq_41701956/article/details/81664921">https://blog.csdn.net/qq_41701956/article/details/81664921</a></p><p><a href="https://baike.baidu.com/item/java%E8%99%9A%E6%8B%9F%E6%9C%BA/6810577?fr=aladdin">https://baike.baidu.com/item/java%E8%99%9A%E6%8B%9F%E6%9C%BA/6810577?fr=aladdin</a></p><blockquote><p>包括</p><p>一套字节码（Bytecode）（目标代码）指令集：</p><blockquote><p>操作码(8位二进制,高位bits在低字节)+操作数</p></blockquote><p>一组寄存器</p><blockquote><p>若JVM定义较多的寄存器，则减少对栈和内存进行访问，提高运行速度</p><p>但如果JVM的寄存器比CPU的寄存器多，则JVM运行速度实际降低</p><p>JVM设置了4个常用的寄存器</p><blockquote><p>pc 程序计数器：记录程序的执行</p><p>optop 操作数栈顶指针</p><p>frame 当前执行环境指针</p><p>vars 指向当前第一个局部变量的指针</p><p>optop,frame,vars用于记录指向Java<strong>栈区</strong>的指针</p></blockquote><p>寄存器均为32位</p></blockquote><p>一个栈</p><blockquote><p>JVM模拟真实计算机，作为基于栈结构的计算机，Java栈是储存JVM存储信息的主要方法</p><blockquote><p><strong>栈框架</strong></p></blockquote></blockquote><p>一个垃圾回收堆</p><p>一个存储方法域</p></blockquote><p>Java数组被当作Object处理</p><hr><h2 id="try-catch"><a class="markdownIt-Anchor" href="#try-catch"></a> try-catch</h2><p><a href="https://blog.csdn.net/qq_34427165/article/details/83929470">https://blog.csdn.net/qq_34427165/article/details/83929470</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="comment">//可能出现异常的代码</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(异常类名A e)&#123;</span><br><span class="line">  <span class="comment">//如果出现了异常类A类型的异常，那么执行该代码</span></span><br><span class="line">&#125; ...(<span class="keyword">catch</span>可以有多个)</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line"> <span class="comment">//最终肯定必须要执行的代码（例如释放资源的代码）</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>代码执行的顺序：</p><p>1.try内的代码从出现异常的那一行开始，中断执行</p><p>2.执行对应的catch块内的代码</p><p>3.继续执行try catch结构之后的代码</p></blockquote><blockquote><p>1.儿子不能比父亲的本事大</p><p>2.儿子要比父亲开放</p><p>3.儿子不能比父亲惹更大的麻烦（子类的异常的类型不能是父类的异常的父类型）</p></blockquote><hr><h2 id="接口"><a class="markdownIt-Anchor" href="#接口"></a> 接口</h2><p><a href="https://www.runoob.com/java/java-interfaces.html"><strong>Interface</strong></a></p><p>接口存在的重要原因：Java不支持多继承,所以要用接口实现多个类的功能</p><p>抽象方法的集合</p><p><strong>一个类继承接口,从而继承接口的抽象方法</strong></p><p><strong>接口不是类</strong></p><p>类描述对象的属性和方法, 接口包含类要实现的方法</p><p>除非实现接口的类是抽象类，否则该类要定义接口中的所有方法。</p><p>接口<strong>无法被实例化</strong>，但是可以被实现。</p><p>一个实现接口的类，必须实现接口内所描述的<strong>所有方法</strong>，否则就必须<strong>声明为抽象类</strong>。</p><p>接口类型可用来<strong>声明一个变量</strong>，他们可以成为一个<strong>空指针</strong>，或是被绑定在一个以此接口实现的对象。</p><p>接口和接口中的方法<strong>隐式抽象</strong>,声明时不必使用abstract</p><p>接口中的方法均为<strong>公有</strong></p><blockquote><h3 id="接口与类相似点"><a class="markdownIt-Anchor" href="#接口与类相似点"></a> 接口与类相似点：</h3><ul><li>一个接口可以有多个方法。</li><li>接口文件保存在 .java 结尾的文件中，文件名使用接口名。</li><li>接口的字节码文件保存在 .class 结尾的文件中。</li><li>接口相应的字节码文件必须在与包名称相匹配的目录结构中。</li></ul><h3 id="接口与类的区别"><a class="markdownIt-Anchor" href="#接口与类的区别"></a> 接口与类的区别：</h3><ul><li><p>接口不能用于实例化对象。</p></li><li><p>接口没有构造方法。</p></li><li><p>接口中所有的方法必须是<strong>抽象方法</strong>。</p></li><li><p><mark>接口不能包含成员变量，除了 static 和 final 变量</mark>。</p></li></ul><blockquote><p>接口中的变量都是public static final (会被隐式的指定)</p></blockquote><ul><li><p><strong>接口不是被类继承了</strong>，而是要被类实现。</p></li><li><p>接口支持<strong>多继承</strong>。</p></li></ul><h3 id="抽象类和接口的区别"><a class="markdownIt-Anchor" href="#抽象类和接口的区别"></a> 抽象类和接口的区别</h3><ul><li><p>抽象类中的方法可以有方法体，就是能实现方法的具体功能，但是接口中的方法不行。</p></li><li><p>抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是 <strong>public static final</strong> 类型的。</p></li><li><p>接口中不能含有静态代码块以及静态方法(用 static 修饰的方法)，而抽象类是可以有静态代码块和静态方法。</p></li><li><p>一个类只能继承一个抽象类，而<strong>一个类却可以实现多个接口</strong>。</p></li></ul><blockquote><p>多对多</p></blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Animal.java</span></span><br><span class="line"><span class="keyword">package</span> animals;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Animal</span> <span class="keyword">extends</span> <span class="title class_">Nature</span>,Universe &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">travel</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> animals;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MammalInt</span> <span class="keyword">implements</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Mammal eats&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">travel</span><span class="params">()</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Mammal travels&quot;</span>);</span><br><span class="line">   &#125; </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">noOfLegs</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">      <span class="type">MammalInt</span> <span class="variable">m</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MammalInt</span>();</span><br><span class="line">      m.eat();</span><br><span class="line">      m.travel();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命令行操作如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir animals</span><br><span class="line">$ cp Animal.<span class="keyword">class</span>  <span class="title class_">MammalInt</span>.<span class="keyword">class</span> <span class="title class_">animals</span></span><br><span class="line">$ java animals/MammalInt</span><br><span class="line">Mammal eats</span><br><span class="line">Mammal travel</span><br></pre></td></tr></table></figure><p>import 声明必须在包声明之后，类声明之前。</p><p>例子:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> haha;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Bye</span><span class="params">(Guagua a)</span> &#123;</span><br><span class="line">       a.standup();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> guaguastandup.Guagua;</span><br><span class="line"><span class="comment">//improt guaguastandup.*;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Bye</span><span class="params">(Guagua a)</span> &#123;</span><br><span class="line">       a.standup();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类名:guaguastandup.Guagua.Hello</p><p>路径名:guaguastandup\Guagua\Hello.java</p><h3 id="标记接口"><a class="markdownIt-Anchor" href="#标记接口"></a> 标记接口</h3><p>没有任何方法</p><p>目的:</p><p><strong>建立一个公共的父接口</strong></p><blockquote><p>&quot; 正如EventListener接口，这是由几十个其他接口扩展的Java API，你可以使用一个标记接口来建立一组接口的父接口。例如：当一个接口继承了EventListener接口，Java虚拟机(JVM)就知道该接口将要被用于一个事件的代理方案。 &quot;</p></blockquote><p><strong>向一个类添加数据类型</strong></p><blockquote><p>让该类通过多态性变成一个接口类型</p></blockquote><h3 id="instanceof"><a class="markdownIt-Anchor" href="#instanceof"></a> instanceof</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> obj <span class="keyword">instanceof</span> Class</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> author by runoob.com</span></span><br><span class="line"><span class="comment"> Main.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">Object</span> <span class="variable">testObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">      displayObjectClass(testObject);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">displayObjectClass</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Vector)</span><br><span class="line">      System.out.println(<span class="string">&quot;对象是 java.util.Vector 类的实例&quot;</span>);</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (o <span class="keyword">instanceof</span> ArrayList)</span><br><span class="line">      System.out.println(<span class="string">&quot;对象是 java.util.ArrayList 类的实例&quot;</span>);</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      System.out.println(<span class="string">&quot;对象是 &quot;</span> + o.getClass() + <span class="string">&quot; 类的实例&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="package"><a class="markdownIt-Anchor" href="#package"></a> package</h2><p>java.awt 图形,用户界面。</p><p><strong>java.lang</strong>  打包基础的类</p><p><strong><a href="http://java.io">java.io</a></strong> 通过数据流、序列化和文件系统提供系统输入输出。</p><p><strong>java.util</strong> 包含集合框架，旧集合类，事件模型，日期和时间设施。</p><h2 id="super"><a class="markdownIt-Anchor" href="#super"></a> super</h2><p>指向自己超类或父类的指针</p><p>超类指离自己最近的父类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Country</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">value</span><span class="params">()</span> &#123;</span><br><span class="line">name = <span class="string">&quot;China&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">City</span> <span class="keyword">extends</span> <span class="title class_">Country</span> &#123;</span><br><span class="line">String name;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">value</span><span class="params">()</span> &#123;</span><br><span class="line">name = <span class="string">&quot;Shanghai&quot;</span>;</span><br><span class="line">        <span class="built_in">super</span>.value();</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        System.out.println(<span class="built_in">super</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">City</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">City</span>();</span><br><span class="line">        c.value();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>引用构造函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">prt</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Person() &#123;</span><br><span class="line">        prt(<span class="string">&quot;父类无参数构造方法: &quot;</span> + <span class="string">&quot;A person.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Person(String name) &#123;</span><br><span class="line">        prt(<span class="string">&quot;父类含参数构造方法:  &quot;</span>+<span class="string">&quot;A person&#x27;s name is&quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Chinese</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">Chinese() &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line">prt(<span class="string">&quot;子类·调用父类&quot;</span>无参数构造方法<span class="string">&quot;： &quot;</span>+<span class="string">&quot;A chinese coder.);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">Chinese(String name) &#123;</span></span><br><span class="line"><span class="string">super(name);//调用基类的某一个构造函数</span></span><br><span class="line"><span class="string">        prt(&quot;</span>子类·调用父类<span class="string">&quot;含一个参数的构造方法&quot;</span>： <span class="string">&quot;+&quot;</span>his name is <span class="string">&quot; + name);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">    Chinese(String name, int age) &#123;</span></span><br><span class="line"><span class="string">        this(name);//调用本类的构造函数</span></span><br><span class="line"><span class="string">        prt(&quot;</span>子类：调用子类具有相同形参的构造方法：his age is <span class="string">&quot; + age); </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">    public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="string">        Chinese cn = new Chinese();</span></span><br><span class="line"><span class="string">        cn = new Chinese(&quot;</span>codersai<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        cn = new Chinese(&quot;</span>codersai<span class="string">&quot;,18);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Fruit</span>&#123;</span><br><span class="line">        Fruit() &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Yeah!Fruit!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Watermelon</span> <span class="keyword">extends</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">        Watermelon() &#123;</span><br><span class="line">            <span class="built_in">super</span>();</span><br><span class="line">            System.out.println(<span class="string">&quot;Haha!Watermelon!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Watermelon</span> <span class="variable">guagua</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Watermelon</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Yeah!Fruit!</span></span><br><span class="line"><span class="comment">//Haha!Watermelon!</span></span><br></pre></td></tr></table></figure><p>this是指向本身对象的指针,super是Java关键字</p><p>this和super不能同时出现在一个构造函数里面</p><p>this可以调用一个构造器,但不能调用两个</p><p>如果调用super(),必须写在子类构造方法的第一行</p><p>事实上,构造器的第一句都会隐式调用super(),因为要初始父类</p><h2 id="object类"><a class="markdownIt-Anchor" href="#object类"></a> Object类</h2><p>属于java.lang包</p><p>常用方法:</p><p>​<strong>equals()</strong></p><blockquote><p>相当于==,比较内存</p><p>如果需要比较对象内容,需要重写equal方法</p></blockquote><p>​**hashCode() **</p><p>​返回对象的哈希值</p><p>​<strong>toString()</strong></p><blockquote><p>返回值是String类型，描述当前对象的有关信息，当对象与String型数据的连接时，自动调用其toString()方法。</p></blockquote><p>改写的时候:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object anObject)</span> &#123;</span><br><span class="line">    ....</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重写"><a class="markdownIt-Anchor" href="#重写"></a> 重写</h2><p>重写Object中的equals时应该遵循的</p><p>1.自反性</p><p>​x.equals(x) == true</p><p>2.对称性</p><p>​x.equals(y) == y.equals(x)</p><p>3.传递性</p><p>​x.equals(y) == y.equals(z) == x.equals(z)</p><p>4.一致性</p><p>5.非空性</p><h2 id="system类"><a class="markdownIt-Anchor" href="#system类"></a> System类</h2><p>位于java.lang包内</p><p>用于获取系统的属性数据,<strong>没有构造方法</strong></p><h2 id="试题"><a class="markdownIt-Anchor" href="#试题"></a> 试题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++) &#123;</span><br><span class="line">            sum = sum + i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出:15.0</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Test2</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出:</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//报错</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> x;</span><br><span class="line">        System.out.println(x+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//报错</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(x+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> x;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(x+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:2.0</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Yayo~&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Test</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">        System.out.println(t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:Yayo~</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="comment">//public String toString() &#123;</span></span><br><span class="line">    <span class="comment">//    return &quot;Yayo~&quot;;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Test</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">        System.out.println(t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:Test@5d22bbb7</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="comment">//public String toString() &#123;</span></span><br><span class="line">    <span class="comment">//    return &quot;Yayo~&quot;;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">x</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++) &#123;</span><br><span class="line">                x = x+i;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出：123</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> x,y;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Point</span><span class="params">(<span class="type">double</span> x,<span class="type">double</span> y)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">distance</span><span class="params">(Point that)</span> &#123;</span><br><span class="line">        <span class="type">double</span> xdiff,ydiff;</span><br><span class="line">        xdiff = x - that.x;</span><br><span class="line">        ydiff = y - that.y;</span><br><span class="line">        <span class="keyword">return</span> Math.sqrt(xdiff*xdiff+ydiff*ydiff);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x=&quot;</span> + x + <span class="string">&quot;,&quot;</span> + <span class="string">&quot;y=&quot;</span> + y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span> &#123;</span><br><span class="line">        x = <span class="number">0</span>;</span><br><span class="line">        y = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Polygon</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Point[] vertices;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Polygon</span><span class="params">(Point... vers)</span> &#123;</span><br><span class="line">        vertices = <span class="keyword">new</span> <span class="title class_">Point</span>[vers.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; vertices.length; i++) &#123;</span><br><span class="line">            vertices[i] = vers[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(Point p : vertices) &#123;</span><br><span class="line">            System.out.println(p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getEdgeNum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vertices.length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        p.clear();</span><br><span class="line">        <span class="type">Polygon</span> <span class="variable">triangle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Polygon</span>(<span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">0</span>,<span class="number">1</span>),<span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">1</span>,<span class="number">1</span>),<span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">1</span>,<span class="number">0</span>),<span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        System.out.println(triangle.getEdgeNum());</span><br><span class="line">        triangle.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;guaguaStandup&quot;</span>;</span><br><span class="line">        s[<span class="number">4</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//报错:A.java:4: 错误: 需要数组, 但找到String</span></span><br><span class="line"><span class="comment">//        s[4] = &#x27;a&#x27;;</span></span><br></pre></td></tr></table></figure><p>字符串对象是只读的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;guaguaStandup&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;guaguaStandup&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">u</span> <span class="operator">=</span> s;</span><br><span class="line">        <span class="keyword">if</span>(s.equals(t)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Yes</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">f</span> <span class="operator">=</span> <span class="string">&quot;guagua&quot;</span> <span class="keyword">instanceof</span> String;</span><br><span class="line">        System.out.println(f);</span><br><span class="line">        <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//f = &#x27;a&#x27; instanceof String;</span></span><br><span class="line"></span><br><span class="line">        f = <span class="literal">null</span> <span class="keyword">instanceof</span> String;</span><br><span class="line">        System.out.println(f);</span><br><span class="line">        <span class="comment">//false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        s.append(<span class="string">&quot;guagua&quot;</span>).append(<span class="string">&quot;standup&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//guaguastandup</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="comment">//表示申请了一个没有名字的A()类,调用了A类的构造函数</span></span><br><span class="line">        <span class="comment">//匿名对象</span></span><br><span class="line"></span><br><span class="line">        A a;</span><br><span class="line">        <span class="comment">//代表一个名为a的引用变量</span></span><br><span class="line">        <span class="comment">//保存对象地址</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="comment">//此时a是A的实例化对象</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(a.x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出：0</span></span><br></pre></td></tr></table></figure><p>每个数组都有一个length域</p><p>数组越界，系统会引发：IndexOutOfBoundsException异常</p><p>Java标准版：J2SE，企业版J2EE，微缩版J2ME</p><h2 id="静态域"><a class="markdownIt-Anchor" href="#静态域"></a> 静态域</h2><p>用static说明的一个域是一个类域或类变量,通常称为静态域</p><h2 id="复用"><a class="markdownIt-Anchor" href="#复用"></a> 复用</h2><p>println是一种名复用的方法</p><h3 id="名复用"><a class="markdownIt-Anchor" href="#名复用"></a> 名复用</h3><p>名字相同,基调不同</p><p>基调:signature,方法名字及形参数目和类型</p><p>基调不包括返回类型和引发异常，不能依据这些因素来得到名复用</p><h2 id="路径"><a class="markdownIt-Anchor" href="#路径"></a> 路径</h2><p>JAVA_HOME:也就是jdk的安装路径</p><p>path:PATH = JAVA_HOME\bin</p><blockquote><p><strong>PATH=%JAVA_HOME%\bin;%PATH%</strong></p></blockquote><p>class_path:绝对路径,定位到.class文件处</p><p>​classpath = <strong>.;</strong>  JAVA_HOME \lib</p><blockquote><p><strong>CLASSPATH=.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar</strong></p></blockquote><h2 id="构造器-2"><a class="markdownIt-Anchor" href="#构造器-2"></a> 构造器</h2><p>自动提供的无参构造器与相对应的类具有相同的访问控制</p><p>Java不自动提供一个缺省的拷贝构造器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Body(Body other)&#123;</span><br><span class="line">    idNum = other.idNum;</span><br><span class="line">  name = other.name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="uml-2"><a class="markdownIt-Anchor" href="#uml-2"></a> UML</h2><p><a href="https://www.jianshu.com/p/2828874af134">https://www.jianshu.com/p/2828874af134</a></p><p><a href="https://blog.csdn.net/shenshenzhiwen/article/details/80299747">https://blog.csdn.net/shenshenzhiwen/article/details/80299747</a></p><h2 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h2><p>String类是只读类型</p><p>如果要修改一个字符串:使用一个与String独立的类:StringBuffer类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">replace</span><span class="params">(StringBuffer str,<span class="type">char</span> oldChar,<span class="type">char</span> newChar)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(str.charAt(i)==oldChar) &#123;</span><br><span class="line">            str.setCharAt(i,newChar);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        System.out.println(s==t);</span><br><span class="line">        t = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        System.out.println(s==t);</span><br><span class="line">        System.out.println(s.equals(t));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:true</span></span><br><span class="line"><span class="comment">//    false</span></span><br><span class="line"><span class="comment">//    true</span></span><br></pre></td></tr></table></figure><h1 id="试卷"><a class="markdownIt-Anchor" href="#试卷"></a> 试卷</h1><h2 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h2><h3 id="第一张试卷2015年12月"><a class="markdownIt-Anchor" href="#第一张试卷2015年12月"></a> 第一张试卷(2015年12月)</h3><p>1.java中定义常量需要的修饰符:final</p><p><mark>2</mark>.为了使自定义异常类受检测,必须使它为哪个类的子类:Exception</p><p>A.Exception B.Object C.RuntimeException D.Error</p><p>3.哪个类创建的对象是线程:Thread类</p><p>4.(“hello” instanceof Object)取值:True</p><p>5.对应于float的包装类是:Float</p><p>==6.==若要在自定义的类中改写Object类中的toString方法,则访问控制可以是:</p><blockquote><p>public</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;haha&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:haha</span></span><br></pre></td></tr></table></figure><p>7.java中隐藏信息体现了面向对象的哪一特性:封装性</p><ol start="8"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;static init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//static init</span></span><br><span class="line"><span class="comment">//init</span></span><br></pre></td></tr></table></figure><ol start="9"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">w</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x&lt;<span class="number">5</span>; x++) &#123;</span><br><span class="line">            inner:</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>;y&lt;<span class="number">100</span>; y++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(y==<span class="number">3</span>)</span><br><span class="line">                <span class="keyword">break</span> inner;</span><br><span class="line">                w++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(w);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//15</span></span><br></pre></td></tr></table></figure><p>==10.==Unicode码的长度是:</p><blockquote><p>2字节==16比特</p></blockquote><p>11.为了使一个名为MyClass的自定义类在mypack命名包,则在源程序的第一行应该是:</p><blockquote><p>package mypack;</p></blockquote><ol start="12"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span>... x)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;x.length; i++) &#123;</span><br><span class="line">            sum = sum + x[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.f(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//12345</span></span><br></pre></td></tr></table></figure><ol start="13"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.println(x+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.0</span></span><br></pre></td></tr></table></figure><h3 id="第二张试卷2016"><a class="markdownIt-Anchor" href="#第二张试卷2016"></a> 第二张试卷(2016)</h3><p>1.Java程序的安装路径为c:\java,则环境变量设置正确的是:</p><p>PATH = C:\java\bin</p><p>2.“下列属于合法标识符的为”:…</p><p>合法标识符满足:首字母: $ 或者 _ 或者 字母</p><p>​后面的字符:$ 或者 __ 或者 字母 或者 数字</p><p>3.用64位储存的数据类型是:…</p><p>4.下列表达式正确的是:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0.9</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> -<span class="number">128</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">B</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><blockquote><p>byte b = -128;正确</p></blockquote><p>​从大精度往小精度转化,必须强制转化</p><ol start="5"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(args[<span class="number">0</span>]+args[<span class="number">1</span>]);</span><br><span class="line">        <span class="comment">//命令行javac Test.java&amp;&amp;java Test 1 2</span></span><br><span class="line">        <span class="comment">//输出:12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.错误的是:A</p><p>A.数组下标不能为表达式</p><p>B.数组成份的数目是由使用new创建时确定的,不是在说明时确定的</p><p>C.Java数组是同类型元素的有序集合</p><p>D.对数组的越界访问会引发IndexOutOfBoundsException异常</p><p>7.关于静态域的描述,错误的是: C</p><p>A.Java中用static来说明的域 -&gt;对</p><p>B.不论是否创建对象,静态域都存在-&gt; 对</p><p>C.抽象类中不能有静态域 错</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">        <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span>;</span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        String[] a = <span class="keyword">new</span> <span class="title class_">String</span>[length*<span class="number">5</span>+<span class="number">10</span>];</span><br><span class="line">        <span class="comment">//命令行javac Test.java&amp;&amp;java Test 1 2</span></span><br><span class="line">        <span class="comment">//输出:12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>D.静态域的调用方法时:类名.域名</p><p>8.接口中的所有方法的默认为:</p><p>public abstract</p><p>9.java中定义实例方法和类方法区别:</p><p>前者没有static修饰,后者有static修饰</p><p>10.启动线程执行的方法:start();</p><ol start="11"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        System.out.println(b+<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输出:truehello</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><mark>12</mark>.关于下列接口和抽象类的说法,错误的是:B</p><p>A.含有抽象方法的类必须是抽象类</p><p>B.抽象类可以用final修饰,接口不可以</p><blockquote><p>错,抽象类不能被final修饰</p></blockquote><p>C.接口与抽象类一样,不能用new实例化一个对象</p><p>D.接口类可以被继承,再派生类中实现接口的方法</p><p>13.处理异常使用的关键字:</p><p>A.catch B.switch C.throws D.throw</p><p>14.关于继承正确的是:B</p><p>A.抽象方法不能继承</p><blockquote><p>错</p></blockquote><p>B.静态方法可以被继承</p><blockquote><p>对</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">y</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">123</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> <span class="keyword">extends</span> <span class="title class_">y</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Test</span> <span class="variable">y</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">y</span>();</span><br><span class="line">        y.f();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C.final修饰的类可以有子类</p><blockquote><p>错</p></blockquote><p>D.继承的方法的权限只能缩小不能扩大</p><blockquote><p>错</p></blockquote><h3 id="第三张试卷2013"><a class="markdownIt-Anchor" href="#第三张试卷2013"></a> 第三张试卷(2013)</h3><p>1.哪种访问控制修饰符的方法不能被改写：final</p><p>2.“任何非检测异常被引发后，都不能对其进行捕获处理”是正确的吗？</p><blockquote><p>不正确</p></blockquote><p>3.“利用Runnbale接口实现类所创建的对象使线程“，是正确的吗</p><blockquote><p>不正确</p></blockquote><p>4.“Java语言中，接口只支持单一继承机制”，正确吗？</p><p>错</p><ol start="5"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">T</span> &#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;haha&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">T</span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;gaga&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:haha</span></span><br><span class="line"><span class="comment">//    gaga</span></span><br></pre></td></tr></table></figure><p>6.”一个类中有两个基调相同的方法，但返回类型不同，这两个方法是否为名复用？“ B</p><p>A.正确 B.不正确 C.不能肯定是否正确</p><p>7.若要在自定义的类中改写Object类中的toString()方法，形参的数目可以是： B</p><p>A.1个 B.不能有形参 C.可变数目 D.任意多个</p><p>8.方法改写属于：多态性</p><p><mark>9</mark>.安装好JDK，在命令行方式下，为了运行解释器，一般要正确设置哪个环境变量？</p><blockquote><p>classpath</p></blockquote><ol start="10"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(x+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//b编译失败</span></span><br></pre></td></tr></table></figure><h3 id="第四张试卷"><a class="markdownIt-Anchor" href="#第四张试卷"></a> 第四张试卷</h3><p>1.不能用于顶层类的定义的修饰符:private</p><ol start="2"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getInstanceCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> counter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">()</span>&#123;</span><br><span class="line">        counter++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="type">A</span> <span class="variable">a2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="type">A</span> <span class="variable">a3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(A.getInstanceCount());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getInstanceCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> counter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">()</span>&#123;</span><br><span class="line">        counter++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="type">A</span> <span class="variable">a2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="type">A</span> <span class="variable">a3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(A.getInstanceCount());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//编译错误，静态无法引用非静态</span></span><br></pre></td></tr></table></figure><ol start="3"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> x,y;<span class="comment">//x=0,y=0;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        myMethod();</span><br><span class="line">        System.out.println(x+<span class="string">&quot; &quot;</span>+y);<span class="comment">//0 0</span></span><br><span class="line">        System.out.println(x++ + y + ++x);<span class="comment">//2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">myMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        y = x-- + ++x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:0 0</span></span><br><span class="line"><span class="comment">//    2</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">char</span>[] c = &#123;<span class="string">&#x27;南&#x27;</span>,<span class="string">&#x27;大&#x27;</span>&#125;;</span><br><span class="line">        String[] s = &#123;<span class="string">&quot;南邮&quot;</span>,<span class="string">&quot;南航&quot;</span>,<span class="string">&quot;东南&quot;</span>&#125;;</span><br><span class="line">        <span class="type">A</span> <span class="variable">ex</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        ex.modify(c,s);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> c1 : c) &#123;</span><br><span class="line">            System.out.print(c1);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;不比&quot;</span> + s[<span class="number">2</span>] + <span class="string">&quot;差!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">modify</span><span class="params">(<span class="type">char</span>[] c,String[] s)</span> &#123;</span><br><span class="line">        c = <span class="keyword">new</span> <span class="title class_">char</span>[] &#123;<span class="string">&#x27;南&#x27;</span>,<span class="string">&#x27;理&#x27;</span>,<span class="string">&#x27;工&#x27;</span>&#125;;<span class="comment">//这种新申请的不行</span></span><br><span class="line">        s[s.length-<span class="number">1</span>] = <span class="string">&quot;南大&quot;</span>;<span class="comment">//引用可以改变,因为现在指针正指在原地址进行修改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出:南大不比南大差!</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> String s;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;s=&quot;</span> + s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出:s = null</span></span><br></pre></td></tr></table></figure><ol start="6"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.show().length() &lt; <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        <span class="type">B</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(b.show()+<span class="string">&quot; &quot;</span>+c.show());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//编译报错:</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">A.java:1: 错误: 类 B 是公共的, 应在名为 B.java 的文件中声明</span></span><br><span class="line"><span class="comment">public class B &#123;</span></span><br><span class="line"><span class="comment">       ^</span></span><br><span class="line"><span class="comment">A.java:7: 错误: A中的show()无法覆盖B中的show()</span></span><br><span class="line"><span class="comment">    public boolean show() &#123;</span></span><br><span class="line"><span class="comment">                   ^</span></span><br><span class="line"><span class="comment">  返回类型boolean与String不兼容</span></span><br><span class="line"><span class="comment">2 个错误</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ol start="7"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;NJUST&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;NJUST&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.print((s1==s2)+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;ABC&quot;</span>);</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">b2</span> <span class="operator">=</span> b1;</span><br><span class="line"></span><br><span class="line">        b1.append(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">        System.out.print(b1==b2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输出:false,true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;NJUST&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;NJUST&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.print((s1==s2)+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;ABC&quot;</span>);</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">b2</span> <span class="operator">=</span> b1;</span><br><span class="line"></span><br><span class="line">        b1.append(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">        System.out.println(b1==b2);</span><br><span class="line">        System.out.println(b1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    输出:</span></span><br><span class="line"><span class="comment">    false,true</span></span><br><span class="line"><span class="comment">    ABCD</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Jumpable</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">lion</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> <span class="keyword">implements</span> <span class="title class_">Jumpable</span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>下列哪个代码是正确的：D</p><p>A.Jumpable var1 = new Jumpable();</p><p>B.Lion var3 = new Animal();</p><p>C.Jumpable var4 = new Animal();</p><p>D.Jumpable var5 = new Lion();</p><ol start="10"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    A(String name) &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;haha&quot;</span>);</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>(RED);<span class="comment">//WRONG</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><mark>11</mark>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//package njust;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">pages</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="variable">interviews</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Magazine</span> <span class="keyword">extends</span> <span class="title class_">Book</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">totalPages</span><span class="params">()</span>&#123;</span><br><span class="line">        interviews = <span class="number">8</span>;</span><br><span class="line">        <span class="comment">//System.out.println(super.interviews);//8</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.interviews*<span class="built_in">super</span>.interviews*pages;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">Magazine</span>().totalPages());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出:128</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="12"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">C</span>(<span class="string">&quot;z&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">B</span><span class="params">(String y)</span> &#123;</span><br><span class="line">        System.out.print(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">extends</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">C</span><span class="params">(String c)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(c);</span><br><span class="line">        <span class="type">A</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:xzxy</span></span><br></pre></td></tr></table></figure><h3 id="第五张试卷2013年"><a class="markdownIt-Anchor" href="#第五张试卷2013年"></a> 第五张试卷(2013年)</h3><p>1.定义局部变量可以用的修饰符:</p><blockquote><p>final(唯一可用的)</p></blockquote><p><mark>2</mark>.异常类必是__的子类</p><blockquote><p>Object\Exception\Throwable都对!!!</p></blockquote><p>3.在自定义的类中该写Object类中的toString()类型,返回类型可以是</p><blockquote><p>String</p></blockquote><ol start="4"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;static init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">method0</span><span class="params">()</span>&#123;</span><br><span class="line">        method1();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">method1</span><span class="params">()</span> &#123;</span><br><span class="line">        x=<span class="number">11</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubClass</span> <span class="keyword">extends</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">method1</span><span class="params">()</span> &#123;</span><br><span class="line">        x = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SubClass</span> <span class="variable">rSub</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubClass</span>();</span><br><span class="line">        <span class="type">SuperClass</span> <span class="variable">rSuper</span> <span class="operator">=</span> rSub;</span><br><span class="line"></span><br><span class="line">        rSub.method0();</span><br><span class="line"></span><br><span class="line">        System.out.println(rSuper.x + <span class="string">&quot;,&quot;</span> +rSub.x);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:0,2</span></span><br></pre></td></tr></table></figure><h3 id="第六张试卷2014"><a class="markdownIt-Anchor" href="#第六张试卷2014"></a> 第六张试卷(2014)</h3><ol><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">B</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> a;</span><br><span class="line">        System.out.println(b <span class="keyword">instanceof</span> A);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;haha&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hh&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:</span></span><br><span class="line"><span class="comment">haha</span></span><br><span class="line"><span class="comment">hh</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;haha&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hh&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:</span></span><br><span class="line"><span class="comment">hh</span></span><br><span class="line"><span class="comment">haha</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>3.在类中定义一个toString方法,形参限定为:无形参</p><blockquote><p>改写保证基调相同</p></blockquote><ol start="4"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">method0</span><span class="params">()</span> &#123;</span><br><span class="line">        method1();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">method1</span><span class="params">()</span> &#123;</span><br><span class="line">        x = <span class="number">11</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubClass</span> <span class="keyword">extends</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">method1</span><span class="params">()</span> &#123;</span><br><span class="line">        x = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SubClass</span> <span class="variable">rSub</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubClass</span>();</span><br><span class="line">        <span class="type">SuperClass</span> <span class="variable">rSuper</span> <span class="operator">=</span> rSub;<span class="comment">//</span></span><br><span class="line">        rSub.method0();<span class="comment">//</span></span><br><span class="line">        System.out.println(rSuper.x+<span class="string">&quot;,&quot;</span>+rSub.x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:11,0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>去掉private后!</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">method0</span><span class="params">()</span> &#123;</span><br><span class="line">        method1();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">method1</span><span class="params">()</span> &#123;</span><br><span class="line">        x = <span class="number">11</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubClass</span> <span class="keyword">extends</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">method1</span><span class="params">()</span> &#123;</span><br><span class="line">        x = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SubClass</span> <span class="variable">rSub</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubClass</span>();</span><br><span class="line">        <span class="type">SuperClass</span> <span class="variable">rSuper</span> <span class="operator">=</span> rSub;</span><br><span class="line"></span><br><span class="line">        rSub.method0();</span><br><span class="line">        System.out.println(rSuper.x+<span class="string">&quot;,&quot;</span>+rSub.x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:0,2</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="判断题"><a class="markdownIt-Anchor" href="#判断题"></a> 判断题</h2><h3 id="第一张试卷"><a class="markdownIt-Anchor" href="#第一张试卷"></a> 第一张试卷</h3><p>1.抽象方法必须定义在抽象类中,所以抽象类中的方法都是抽象方法</p><blockquote><p>错</p><p>抽象类中不一定要包含抽象方法,且不一定都是抽象方法</p><p>只要一个类里面有抽象方法,则该类一定是抽象类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;GUAGUA&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.接口中只能定义常量和抽象方法</p><blockquote><p>对</p></blockquote><p>3.一个类中如果没有定义构造器,那么这个类就没有构造器</p><blockquote><p>错,</p><p>缺省构造器</p></blockquote><p>4.static关键字可以修饰成员变量,也可以修饰局部变量</p><blockquote><p>错,不可以修饰局部变量</p><p><mark>成员变量</mark>：类变量、实例变量和常量统称成员变量</p></blockquote><p>5.Java配置环境变量path的目的是为了可以查找到.class文件</p><blockquote><p>错</p><p>查找或创建?</p></blockquote><p>6.一个实例对象只能被一个变量引用</p><blockquote><p>错</p></blockquote><p>7.子类中改写父类的方法需要和父类被改写的方法具有相同的方法名、参数列表以及返回值类型</p><blockquote><p>答案写的是错</p><p>因为返回值类型可以是原返回类型的子类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A_father</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;guagua&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">A_father</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;standup&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;guagua&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//编译错误</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">A.java:7: 错误: A中的print()无法覆盖A_father中的print()</span></span><br><span class="line"><span class="comment">    public String print() &#123;</span></span><br><span class="line"><span class="comment">                  ^</span></span><br><span class="line"><span class="comment">  返回类型String与void不兼容</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//需要改成:</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A_father</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;guagua&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">A_father</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;standup&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//standup</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">sclass A_father&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;guagua&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">A_father</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;standup&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">superprint</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.print();</span><br><span class="line">        a.superprint();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:</span></span><br><span class="line"><span class="comment">standup</span></span><br><span class="line"><span class="comment">guagua</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//看起来要在子类里写一个调用父亲print函数的函数</span></span><br><span class="line"><span class="comment">//如果要避免改写造成的后果,可以在改写的时候调用super.print();</span></span><br></pre></td></tr></table></figure><p>8.构造器不是方法，不能名复用</p><blockquote><p>错,构造器可以名复用</p></blockquote><p>9.Android技术由Google公司创立</p><blockquote><p>对</p></blockquote><p>10.I为接口，由于不能用I创建对象，因此也不能利用“new I[10]&quot;创建数组对象</p><blockquote><p>错</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">H</span> &#123; &#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">implements</span> <span class="title class_">H</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        H[] h = <span class="keyword">new</span> <span class="title class_">H</span>[<span class="number">20</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//正常运行</span></span><br></pre></td></tr></table></figure><p>11.基本数据的局部变量没有缺省值，但引用数据类型的局部类型有缺省值</p><blockquote><p>错,引用数据类型的局部类型也没有缺省值</p></blockquote><p>12.接口中的方法都是final的</p><blockquote><p>错</p><p>接口中的变量都是final的</p><p>但是方法都不是 默认public abstract</p></blockquote><p>13.在java中，子类可以改写父类的任意方法</p><blockquote><p>错</p><p>父类的不能被继承的不能改写 比如private方法</p><p>父类中final的也不能</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//package njust;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">pages</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="variable">interviews</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">234</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Magazine</span> <span class="keyword">extends</span> <span class="title class_">Book</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">totalPages</span><span class="params">()</span>&#123;</span><br><span class="line">        interviews = <span class="number">8</span>;</span><br><span class="line">        <span class="comment">//System.out.println(super.interviews);//8</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.interviews*<span class="built_in">super</span>.interviews*pages;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">123</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">Magazine</span>().totalPages());<span class="comment">//128</span></span><br><span class="line">        Book.f();<span class="comment">//234</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Magazine</span>().f();<span class="comment">//123</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出:128</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>14.抽象类不能定义引用</p><blockquote><p>错</p></blockquote><p><mark>15</mark>.Java中没有缺省的访问控制修饰符</p><blockquote><p>错</p><p>貌似是对的</p><p>java中的缺省访问控制就是friendly,也可以认为访问限制为包(包权限)</p><p>错?</p><p>错!!</p><p>缺省值为default</p><p>貌似是对的…???</p><p>错!</p><p>就是package</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">B</span> <span class="variable">x</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        x.f();</span><br><span class="line">        System.out.println(x.i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二张试卷"><a class="markdownIt-Anchor" href="#第二张试卷"></a> 第二张试卷</h3><p>1.java的int类型所占字节有具体软硬件环境决定</p><blockquote><p>错</p></blockquote><p>2.Java的形参唯一可用的修饰符为final</p><blockquote><p>对</p><p>形参指的是调用时传递的值</p></blockquote><p>3.在局部变量中,如果没有给定初始值,Java会按照默认值赋值</p><blockquote><p>错</p></blockquote><p>4.Java程序中,可以将一个数组赋给一个类型为Object的变量</p><blockquote><p>对</p></blockquote><p>5.在类型转换中有些类型转换是不允许的,如boolean不能够转换为int</p><blockquote><p>对,boolean与int不兼容</p></blockquote><p>6.null instanceof Object 总是返回false</p><blockquote><p>对</p></blockquote><p>7.Java源文件中最多只能有一个public类,所以编译后只能产生一个.class文件</p><blockquote><p>错</p></blockquote><p>8.子类中如果使用super()调用超类构造器,必须子类构造器的第一条语句</p><blockquote><p>对</p></blockquote><p>9.如果超类没有无参构造器,则子类必须至少提供一个构造器</p><blockquote><p>对</p></blockquote><p><mark>10</mark>.子类重写超类的方法抛出的异常只可以列出比其超类更少更具体地类型(子类型)</p><blockquote><p>错</p><p>只需要保证是原来的类型或者是原来类型的子类</p></blockquote><p><mark>11</mark>.如果一个方法会抛出异常,必须用try catch语句进行处理</p><blockquote><p>错</p></blockquote><p>12.在Java中十六进制整型常量是以数字字符0x开头进行表示</p><blockquote><p>对</p></blockquote><p>13.java语言中,利用对象引用作为实参调用System.out.println方法可以得到该对象的字符串表示</p><blockquote><p>对</p></blockquote><p>14.一个源文件中最多只有一个main方法</p><blockquote><p>错</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;guagua&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">B</span>().main();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>15.实现接口的类可以有非静态域,也可以用静态方法</p><blockquote><p>对</p></blockquote><h3 id="第三章试卷"><a class="markdownIt-Anchor" href="#第三章试卷"></a> 第三章试卷</h3><p>1.JVM只能由软件实现</p><blockquote><p>错</p></blockquote><p>2.Java中String是基本类型</p><blockquote><p>错</p></blockquote><p>3.任何类中都有缺省的构造器</p><blockquote><p>错</p><p>自己写过就没有了</p></blockquote><p>4.final类可以是抽象的</p><blockquote><p>错!!!</p><p>抽象类用于被改写</p><p>final类不能被改写</p><p>QuQ</p></blockquote><p>5.Java中的私有方法不能被改写</p><blockquote><p>对</p><p>public 和 protected可以</p></blockquote><p>6.类B是A的子类，C是B的子类，则A是C的超类型</p><blockquote><p>对</p></blockquote><p>7.整型实例变量的缺省值为0</p><blockquote><p>对</p></blockquote><p>8.作为程序执行入口的main方法中可以出现this引用</p><blockquote><p>错,不可以用静态引用非静态</p></blockquote><p>9.Java中没有缺省的拷贝构造器</p><blockquote><p>对</p></blockquote><p>10.通过对象引用也可以访问静态成员</p><blockquote><p>对</p></blockquote><p>11.受保护的成员在包外无法被访问</p><blockquote><p>对</p></blockquote><p>12.Java中提供了带标号的break语句</p><blockquote><p>对</p></blockquote><p>13.java中的构造器可以名复用</p><blockquote><p>对</p></blockquote><p>14.java中的构造器可以被继承</p><blockquote><p>错</p></blockquote><p>15.java中字符数组不是字符串对象</p><blockquote><p>对</p></blockquote><h3 id="第四章试卷"><a class="markdownIt-Anchor" href="#第四章试卷"></a> 第四章试卷</h3><p>1…因为抽象的类不能实例化,故抽象的类中不能有构造器</p><blockquote><p>错</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">abstractClass</span>&#123;</span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">abstractClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//抽象类中可以定义构造器，虽然不能初始化，但仍然可以被调用</span></span><br><span class="line">System.out.println(<span class="string">&quot;abstract class&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">aFunc</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;i am static func&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AbstractClassTest</span> <span class="keyword">extends</span> <span class="title class_">abstractClass</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">AbstractClassTest</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;子类构造器&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">AbstractClassTest.aFunc(); </span><br><span class="line"><span class="keyword">new</span> <span class="title class_">AbstractClassTest</span>().print();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//output：</span></span><br><span class="line"><span class="comment">//i am static func</span></span><br><span class="line"><span class="comment">//abstract class</span></span><br><span class="line"><span class="comment">//子类构造器</span></span><br><span class="line"><span class="comment">//test</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.父类中的final方法不能被子类改写</p><blockquote><p>对</p></blockquote><p><mark>3</mark>.如果一个类声明可以实现某个接口,就必须给出该接口的所有方法的具体实现</p><blockquote><p>对</p><p>要给出主体</p><p>否则报错显示&quot;未覆盖&quot;</p></blockquote><p>4.表达式3.0+2类型为double</p><blockquote><p>对</p></blockquote><p>5.接口中可以声明非静态的属性(域)</p><blockquote><p>错</p></blockquote><p>6.X是一个接口,Y是一个类,&quot;X extends Y&quot;是正确的</p><blockquote><p>错</p></blockquote><p>7.异常处理时,应先捕获父类异常,再捕获子类异常</p><blockquote><p>先捕获子类,再捕获父类</p><p>否则会直接抛出父类的异常不再往上捕获</p></blockquote><p>8.既然调用线程对象start()方法会执行run()方法,我们也可以直接调用线程对象的run()方法来实现多线程功能</p><blockquote><p>错</p></blockquote><p>9.Java内部符号编码为Unicode码</p><blockquote><p>对</p></blockquote><p>10.protected修饰的成员变量只能被自身或同一个包中的类访问</p><blockquote><p>错</p></blockquote><p>11.Java方法重载(方法名复用)不受方法返回值的限制</p><blockquote><p>对</p><p>基调不同即可</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> t)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>12.异常处理时必须要有finally程序块</p><blockquote><p>错</p></blockquote><p>13.创建二维数组时,第二个维度的大小可以不固定</p><blockquote><p>对</p></blockquote><p>14.Exception类是Error的子类</p><blockquote><p>错</p><p>它俩都是Throwable的子类</p></blockquote><p>15.只要某个对象不是null,都可以调用该对象的同String()方法</p><blockquote><p>对</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>; </span><br><span class="line">       s.toString();<span class="comment">//报错</span></span><br><span class="line">       System.out.println(s);<span class="comment">//输出null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第五张试卷"><a class="markdownIt-Anchor" href="#第五张试卷"></a> 第五张试卷</h3><p>1.接口中不能有数据成员</p><blockquote><p>错</p></blockquote><p>2.Java抽象类不能创建对象</p><blockquote><p>对</p></blockquote><p>3.java中类和接口都只支持单一继承机制</p><blockquote><p>错</p></blockquote><p>4.final类可以派生子类</p><blockquote><p>错</p></blockquote><p>5.4的类型是long</p><blockquote><p>错</p><p>默认int</p></blockquote><p>6.私有方法不能被改写</p><blockquote><p>对</p></blockquote><p>7.0.5的类型为double</p><blockquote><p>对</p><p>默认double</p></blockquote><p>8…</p><p>9.Java构造器可以被继承</p><blockquote><p>错</p></blockquote><p>10.通过对象引用无法访问静态成员</p><blockquote><p>错</p></blockquote><p>11.一个类只能实现一个接口</p><blockquote><p>错</p><p>接口支持多继承</p></blockquote><p>12.数组对象的length域不允许被程序修改</p><blockquote><p>对</p></blockquote><p>13.Java中任何类都有缺省的构造器</p><blockquote><p>错</p><p>自己定义之后就没有缺省的构造器了</p></blockquote><p>14.局部变量无缺省值</p><blockquote><p>对</p></blockquote><h3 id="第六张试卷"><a class="markdownIt-Anchor" href="#第六张试卷"></a> 第六张试卷</h3><p>1.改变数组的length域…</p><blockquote><p>错</p></blockquote><p>2.无参构造器只能缺省提供,不能自己定义</p><blockquote><p>错错错!</p></blockquote><p>3.Java的类只支持单一继承机制</p><blockquote><p>对</p></blockquote><p>4.final类不能创建对象</p><blockquote><p>错</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    B() &#123;</span><br><span class="line">        System.out.println(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.字符串对象的长度可以通过调用其length()方法得到</p><blockquote><p>对</p></blockquote><p>6.Java中任意方法都能被改写</p><blockquote><p>错</p></blockquote><p>7.Java中没有缺省的访问控制修饰符</p><blockquote><p>缺省为:package</p></blockquote><p>8.final方法不能被改写</p><blockquote><p>对</p></blockquote><p>9.Java中提供了带标号的continue语句</p><blockquote><p>对</p></blockquote><p>10.抽象类可以创建对象</p><blockquote><p>…错</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    B() &#123;</span><br><span class="line">        System.out.println(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">B</span> <span class="variable">x</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>(); <span class="comment">//引用,没有实例化B</span></span><br><span class="line">        B[] y = <span class="keyword">new</span> <span class="title class_">B</span>[<span class="number">20</span>]; <span class="comment">//创建数组对象,没有实例化B</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>11.接口中的方法都是抽象的</p><blockquote><p>yes</p></blockquote><p>12.java中缺省的访问控制修饰符是package</p><blockquote><p>yes</p></blockquote><p>13.Java中任何类都有缺省的拷贝构造器</p><blockquote><p>错</p></blockquote><h2 id="大题"><a class="markdownIt-Anchor" href="#大题"></a> 大题</h2><h3 id="第一张试卷-2"><a class="markdownIt-Anchor" href="#第一张试卷-2"></a> 第一张试卷</h3><p>第一大题</p><p><img src="https://img2018.cnblogs.com/blog/1560652/201912/1560652-20191206195942442-295532781.jpg" alt></p><p><img src="https://img2018.cnblogs.com/blog/1560652/201912/1560652-20191206200020190-896390143.jpg" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">I</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setXY</span><span class="params">(<span class="type">float</span> x,<span class="type">float</span> y)</span>;</span><br><span class="line">    <span class="type">float</span> <span class="title function_">getX</span><span class="params">()</span>;</span><br><span class="line">    <span class="type">float</span> <span class="title function_">getY</span><span class="params">()</span>;</span><br><span class="line">    <span class="type">float</span> <span class="title function_">distance</span><span class="params">()</span>;</span><br><span class="line">    <span class="type">float</span> <span class="title function_">distance</span><span class="params">(<span class="type">float</span> x,<span class="type">float</span> y)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">City</span> <span class="keyword">implements</span> <span class="title class_">I</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setXY</span><span class="params">(<span class="type">float</span> x,<span class="type">float</span> y)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getX</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getY</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">distance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">float</span>)Math.sqrt((<span class="type">double</span>)(<span class="built_in">this</span>.x*<span class="built_in">this</span>.x+<span class="built_in">this</span>.y*<span class="built_in">this</span>.y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">distance</span><span class="params">(<span class="type">float</span> x,<span class="type">float</span> y)</span> &#123;</span><br><span class="line">        x -= <span class="built_in">this</span>.x;</span><br><span class="line">        y -= <span class="built_in">this</span>.y;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">float</span>)Math.sqrt((<span class="type">double</span>)(x*x+y*y));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestCity</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        City[] c = <span class="keyword">new</span> <span class="title class_">City</span>[<span class="number">1000</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;c.length;i++) &#123;</span><br><span class="line">            c[i] = <span class="keyword">new</span> <span class="title class_">City</span>();</span><br><span class="line">            c[i].setXY(i,i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        I[] p = c;</span><br><span class="line">        <span class="type">float</span> <span class="variable">ans1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">ans2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;p.length; i++) &#123;</span><br><span class="line">            ans1 += p[i].distance();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;p.length; i++) &#123;</span><br><span class="line">            ans2 += (p[i].distance(p[i-<span class="number">1</span>].getX(),p[i-<span class="number">1</span>].getY()));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(ans1);</span><br><span class="line">        System.out.println(ans2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二题</p><p><img src="https://img2018.cnblogs.com/blog/1560652/201912/1560652-20191206195939447-1184896025.jpg" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>  &#123;</span><br><span class="line">    <span class="keyword">private</span> String studentName;</span><br><span class="line">    <span class="keyword">private</span> String studentID;</span><br><span class="line">    <span class="keyword">private</span> String studentUniversity;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> credit;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String studentID,String studentName,String studentUniversity,<span class="type">int</span> credit,<span class="type">float</span> score)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.studentID = studentID;</span><br><span class="line">        <span class="built_in">this</span>.studentName = studentName;</span><br><span class="line">        <span class="built_in">this</span>.studentUniversity = studentUniversity;</span><br><span class="line">        <span class="built_in">this</span>.credit = credit;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getID</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> studentID;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setID</span><span class="params">(String studentID)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.studentID = studentID;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> studentName;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String studentName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.studentName = studentName;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUniversity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> studentUniversity;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUniversity</span><span class="params">(String studentUniversity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.studentUniversity = studentUniversity;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCredit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> credit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCredit</span><span class="params">(<span class="type">int</span> credit)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.credit = credit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">float</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Student ID = &quot;</span>+studentID);</span><br><span class="line">        System.out.println(<span class="string">&quot;Student Name = &quot;</span>+studentName);</span><br><span class="line">        System.out.println(<span class="string">&quot;Student University = &quot;</span>+score);</span><br><span class="line">        System.out.println(<span class="string">&quot;Credit = &quot;</span>+credit);</span><br><span class="line">        System.out.println(<span class="string">&quot;score = &quot;</span>+score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestStudent</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;123&quot;</span>,<span class="string">&quot;guagua&quot;</span>,<span class="string">&quot;NJUST&quot;</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        s.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第三题</p><p><img src="https://img2018.cnblogs.com/blog/1560652/201912/1560652-20191206195936717-23466588.jpg" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Number</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> value;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> isEven;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Triangle</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">depth</span> <span class="operator">=</span> Integer.parseInt(args[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">int</span> fib[] = &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">21</span>,<span class="number">34</span>,<span class="number">55</span>&#125;;</span><br><span class="line">        Number[][] x = <span class="keyword">new</span> <span class="title class_">Number</span>[depth][];</span><br><span class="line">        <span class="comment">//System.out.println(x.length);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;x.length;i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> random.nextInt(<span class="number">10</span>);</span><br><span class="line">            x[i] = <span class="keyword">new</span> <span class="title class_">Number</span>[length];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;length;j++) &#123;</span><br><span class="line">                x[i][j] = <span class="keyword">new</span> <span class="title class_">Number</span>();</span><br><span class="line">                x[i][j].value = fib[j];</span><br><span class="line">                <span class="keyword">if</span>(fib[j]%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">                    x[i][j].isEven = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> x[i][j].isEven = <span class="literal">false</span>;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;x.length;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;x[i].length;j++) &#123;</span><br><span class="line">                System.out.print(x[i][j].value);</span><br><span class="line">                <span class="keyword">if</span>(j==x[i].length-<span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二张试卷-2"><a class="markdownIt-Anchor" href="#第二张试卷-2"></a> 第二张试卷</h3><p>1.输入一系列整数,输入0时结束。输出最大值和最大值的个数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1000</span>]; </span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(num==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//a[id] = new int();</span></span><br><span class="line">            a[id] = num;</span><br><span class="line"></span><br><span class="line">            id++;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;max) &#123;</span><br><span class="line">                max = num;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;id;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] == max) &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;The maximum number is &quot;</span>+max+<span class="string">&quot;,The number of the max number is &quot;</span>+cnt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.<img src="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/java/../googledownload/MobileFile/IMG_7098(20191210-145947).JPG" alt="IMG_7098(20191210-145947)"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle2D</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> x,y;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> width,height;</span><br><span class="line">    Rectangle2D() &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.y = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.width = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.height = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Rectangle2D(<span class="type">double</span> x,<span class="type">double</span> y,<span class="type">double</span> width,<span class="type">double</span> height) &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setX</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setY</span><span class="params">(<span class="type">double</span> y)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setwidth</span><span class="params">(<span class="type">double</span> width)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setheight</span><span class="params">(<span class="type">double</span> height)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">getX</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getY</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getWidth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getHeight</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">getPerimter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">this</span>.width+<span class="built_in">this</span>.height)*<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getArea</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">this</span>.width)*(<span class="built_in">this</span>.height);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Rectangle2D</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rectangle2D</span>();</span><br><span class="line">        <span class="type">Rectangle2D</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rectangle2D</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">4</span>);</span><br><span class="line">        System.out.println(t1.getPerimter()+<span class="string">&quot; &quot;</span>+t1.getArea());</span><br><span class="line">        System.out.println(t2.getPerimter()+<span class="string">&quot; &quot;</span>+t2.getArea());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3。<img src="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/java/../googledownload/MobileFile/IMG_7099(20191210-150020).JPG" alt="IMG_7099(20191210-150020)"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle2D</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> x,y;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> width,height;</span><br><span class="line">    Rectangle2D() &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.y = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.width = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.height = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Rectangle2D(<span class="type">double</span> width,<span class="type">double</span> height) &#123;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line">    Rectangle2D(<span class="type">double</span> x,<span class="type">double</span> y,<span class="type">double</span> width,<span class="type">double</span> height) &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setX</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setY</span><span class="params">(<span class="type">double</span> y)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setwidth</span><span class="params">(<span class="type">double</span> width)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setheight</span><span class="params">(<span class="type">double</span> height)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">getX</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getY</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getWidth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getHeight</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">getPerimter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">this</span>.width+<span class="built_in">this</span>.height)*<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getArea</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">this</span>.width)*(<span class="built_in">this</span>.height);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Comparable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Object obj)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ComparableRectangle2D</span> <span class="keyword">extends</span> <span class="title class_">Rectangle2D</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span> &#123;</span><br><span class="line">    ComparableRectangle2D(<span class="type">double</span> a,<span class="type">double</span> b) &#123;</span><br><span class="line">        <span class="built_in">super</span>(a,b);</span><br><span class="line">    &#125;</span><br><span class="line">    ComparableRectangle2D(<span class="type">double</span> a,<span class="type">double</span> b,<span class="type">double</span> c,<span class="type">double</span> d) &#123;</span><br><span class="line">        <span class="built_in">super</span>(a,b,c,d);</span><br><span class="line">    &#125;</span><br><span class="line">    ComparableRectangle2D() &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="built_in">this</span>.getArea();</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> ((Rectangle2D)obj).getArea();</span><br><span class="line">        <span class="keyword">if</span>(a&gt;b)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ComparableRectangle2D</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComparableRectangle2D</span>();</span><br><span class="line">        <span class="type">ComparableRectangle2D</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComparableRectangle2D</span>(<span class="number">6</span>,<span class="number">4</span>);</span><br><span class="line">        System.out.println(t1.compareTo(t2));</span><br><span class="line">        System.out.println(t1.getPerimter()+<span class="string">&quot; &quot;</span>+t1.getArea());</span><br><span class="line">        System.out.println(t2.getPerimter()+<span class="string">&quot; &quot;</span>+t2.getArea());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三张试卷"><a class="markdownIt-Anchor" href="#第三张试卷"></a> 第三张试卷</h3><p>1.easy</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String CourseId;</span><br><span class="line">    <span class="keyword">private</span> String CourseName;</span><br><span class="line">    <span class="keyword">private</span> String CourseClass;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> time;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> score;</span><br><span class="line">    Course(String CourseId,String CourseName,String CourseClass,<span class="type">int</span> time,<span class="type">float</span> score) &#123;</span><br><span class="line">        <span class="built_in">this</span>.CourseId = CourseId;</span><br><span class="line">        <span class="built_in">this</span>.CourseName = CourseName;</span><br><span class="line">        <span class="built_in">this</span>.CourseClass = CourseClass;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">        <span class="built_in">this</span>.score;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    getXXX();</span></span><br><span class="line"><span class="comment">    setXXX();</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Course</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Course</span>(..........);    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li></li></ol><p><img src="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/java/../googledownload/MobileFile/IMG_7114(20191210-190158).JPG" alt="IMG_7114(20191210-190158)"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">I</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">calCircum</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">claArea</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyGraphic</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String lineColor;</span><br><span class="line">    <span class="keyword">public</span> String fillColor;</span><br><span class="line">    MyGraphic(String lineColor,String fillColor) &#123;</span><br><span class="line">        <span class="built_in">this</span>.lineColor = lineColor;</span><br><span class="line">        <span class="built_in">this</span>.fillColor = fillColor;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Linecolor is &quot;</span>+lineColor);</span><br><span class="line">        System.out.println(<span class="string">&quot;Fillcolor is &quot;</span>+fillColor);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MyCircle</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyCircle</span>(<span class="string">&quot;black&quot;</span>,<span class="string">&quot;white&quot;</span>,<span class="number">4</span>);</span><br><span class="line">        <span class="type">MyRectangle</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRectangle</span>(<span class="string">&quot;red&quot;</span>,<span class="string">&quot;blue&quot;</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        c.print();</span><br><span class="line">        System.out.println(c.claArea()+<span class="string">&quot; &quot;</span>+c.calCircum());</span><br><span class="line">        r.print();</span><br><span class="line">        System.out.println(r.claArea()+<span class="string">&quot; &quot;</span>+r.calCircum());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyRectangle</span> <span class="keyword">extends</span> <span class="title class_">MyGraphic</span> <span class="keyword">implements</span> <span class="title class_">I</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> rLong,rWidth;</span><br><span class="line">    MyRectangle(String lineColor,String fillColor,<span class="type">float</span> rLong,<span class="type">float</span> rWidth) &#123;</span><br><span class="line">        <span class="comment">//this.lineColor = lineColor;</span></span><br><span class="line">        <span class="comment">//this.fillColor = fillColor;</span></span><br><span class="line">        <span class="built_in">super</span>(lineColor,fillColor);</span><br><span class="line">        <span class="built_in">this</span>.rLong = rLong;</span><br><span class="line">        <span class="built_in">this</span>.rWidth = rWidth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">calCircum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>*(rLong+rWidth);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">claArea</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> rLong*rWidth;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyCircle</span> <span class="keyword">extends</span> <span class="title class_">MyGraphic</span> <span class="keyword">implements</span> <span class="title class_">I</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> radius;</span><br><span class="line">    MyCircle(String lineColor,String fillColor,<span class="type">float</span> radius) &#123;</span><br><span class="line">        <span class="comment">//this.lineColor = lineColor;</span></span><br><span class="line">        <span class="comment">//this.fillColor = fillColor;</span></span><br><span class="line">        <span class="built_in">super</span>(lineColor,fillColor);</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">calCircum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>*<span class="number">3.1415926535f</span>*radius;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">claArea</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3.1415926535f</span>*radius*radius;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li></li></ol><p><img src="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/java/../googledownload/MobileFile/IMG_7113(20191210-190040).JPG" alt="IMG_7113(20191210-190040)"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Number</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> value;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> isEven;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pascal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">cal</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> j+<span class="number">1</span>;k&lt;=i;k++) &#123;</span><br><span class="line">            ans*=k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>;k&lt;=i-j;k++) &#123;</span><br><span class="line">            ans/=k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i==j)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">depth</span> <span class="operator">=</span> Integer.parseInt(args[<span class="number">0</span>]);<span class="comment">//将字符串转化为整数</span></span><br><span class="line">        Number[][] x = <span class="keyword">new</span> <span class="title class_">Number</span>[depth][];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;x.length;i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> i+<span class="number">1</span>;</span><br><span class="line">            x[i] = <span class="keyword">new</span> <span class="title class_">Number</span>[length];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;length;j++) &#123;</span><br><span class="line">                x[i][j] = <span class="keyword">new</span> <span class="title class_">Number</span>();</span><br><span class="line">                x[i][j].value = cal(i,j);</span><br><span class="line">                <span class="keyword">if</span>(x[i][j].value%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">                    x[i][j].isEven = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> x[i][j].isEven = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;x.length;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;x[i].length;j++) &#123;</span><br><span class="line">                System.out.print(x[i][j].value);</span><br><span class="line">                <span class="keyword">if</span>(j==x[i].length-<span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第四张试卷-2"><a class="markdownIt-Anchor" href="#第四张试卷-2"></a> 第四张试卷</h3><ol><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cosx</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">f</span><span class="params">(<span class="type">float</span> x,<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">float</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            ans*=(-<span class="number">1</span>)*(x*x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">float</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++) &#123;</span><br><span class="line">            ans/=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        String s = Float.toString(ans);</span></span><br><span class="line"><span class="comment">        System.out.println(s);</span></span><br><span class="line"><span class="comment">        if(s.length()&gt;=7)&#123;</span></span><br><span class="line"><span class="comment">            return ans;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">//System.out.println(ans);</span></span><br><span class="line">        <span class="keyword">if</span>(ans&lt;=<span class="number">0.00001</span>&amp;&amp;ans&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ans&lt;=<span class="number">0</span>&amp;&amp;ans&gt;=-<span class="number">0.00001</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> ans+ f(x,n+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;please input the value:&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">float</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextFloat();</span><br><span class="line">        <span class="type">cosx</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">cosx</span>();</span><br><span class="line">        <span class="type">float</span> <span class="variable">ans</span> <span class="operator">=</span> c.f(x,<span class="number">0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;cos(&quot;</span>+x+<span class="string">&quot;) = &quot;</span>+ans);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.简单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String education;</span><br><span class="line">    <span class="keyword">private</span> String position;</span><br><span class="line"></span><br><span class="line">    Teacher(String name,<span class="type">int</span> age,String education,String position) &#123;</span><br><span class="line">        <span class="comment">/*......*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    setXX(XX ..)&#123;&#125;</span></span><br><span class="line"><span class="comment">    getXX() &#123;&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">introduction</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;.......................&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TeacherTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;123&quot;</span>,<span class="number">213</span>,<span class="string">&quot;132&quot;</span>,<span class="string">&quot;321&quot;</span>);</span><br><span class="line">        t.introduction();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li></li></ol><p>假题???</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Pet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">play</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> legs;</span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">Animal</span><span class="params">(<span class="type">int</span> legs)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.legs = legs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">walk</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">l</span> <span class="operator">=</span> Integer.toString(legs);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;This animal use &quot;</span> + l + <span class="string">&quot;legs to walk.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLegs</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.legs;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> <span class="keyword">implements</span> <span class="title class_">Pet</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    Cat(<span class="type">int</span> legs,String name) &#123;</span><br><span class="line">        <span class="built_in">super</span>(legs);</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">play</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name + <span class="string">&quot; likes to catch the mouse.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fish</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> <span class="keyword">implements</span> <span class="title class_">Pet</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    Fish(<span class="type">int</span> legs,String name) &#123;</span><br><span class="line">        <span class="built_in">super</span>(legs);</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">play</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name + <span class="string">&quot; likes to swim.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestAnimal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Animal[] animal= <span class="keyword">new</span> <span class="title class_">Animal</span>[<span class="number">2</span>];</span><br><span class="line">        animal[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="number">4</span>,<span class="string">&quot;doudou&quot;</span>);</span><br><span class="line">        animal[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">Fish</span>(<span class="number">0</span>,<span class="string">&quot;blue gem&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;i++) &#123;</span><br><span class="line">            System.out.println(animal[i].play());</span><br><span class="line">            System.out.println(animal[i].walk());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第五张试卷-2"><a class="markdownIt-Anchor" href="#第五张试卷-2"></a> 第五张试卷</h3><p>1.简单不写了</p><p>2.写过了不写了</p><p>3.写过了不写了</p><h3 id="第六张试卷-2"><a class="markdownIt-Anchor" href="#第六张试卷-2"></a> 第六张试卷</h3><p>简单不写了</p><h2 id="第七张试卷2007"><a class="markdownIt-Anchor" href="#第七张试卷2007"></a> 第七张试卷(2007)</h2><ol><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">50</span>,b = <span class="number">30</span>,c=<span class="number">20</span>;</span><br><span class="line">        System.out.println((a==(b-<span class="number">10</span>)&amp;&amp;(b&lt;=c)));</span><br><span class="line">        <span class="comment">//输出:false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li></li></ol><p>一个char是_____ 个字节,一个汉字需要______char存放</p><blockquote><p>两个字节,一个char</p></blockquote><ol start="3"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>,b = <span class="number">20</span>;</span><br><span class="line">        System.out.println(a&lt;b?b-<span class="number">20</span>:a+<span class="number">12</span>);</span><br><span class="line">        <span class="comment">//输出:0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li></li></ol><p>_____方法,可以直接通过类名来调用.</p><blockquote><p>静态方法</p></blockquote><p>_____方法,其名字和类名相同,并且没有返回类型</p><blockquote><p>构造器</p></blockquote><ol start="5"><li></li></ol><p>定义一个包用package关键字,包由一组____和_____组成.</p><ol start="6"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;\\&quot;</span>);</span><br><span class="line">        <span class="comment">//输出:\</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestA</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> (B)a;</span><br><span class="line">        <span class="comment">//B类型不可以强制转化为A</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestA</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> count;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">TestA</span>().print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li></li></ol><blockquote><p>byte的范围为-128~127</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MIPS</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/MIPS/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/MIPS/</url>
      
        <content type="html"><![CDATA[<p>MIPS课程笔记</p><span id="more"></span><h1 id="存储单位寻址"><a class="markdownIt-Anchor" href="#存储单位寻址"></a> 存储单位寻址</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lw </span>$<span class="built_in">s1</span>,<span class="number">8</span>($<span class="built_in">a1</span>)</span><br><span class="line"><span class="keyword">sw </span>$<span class="built_in">s1</span>,<span class="number">8</span>($<span class="built_in">a1</span>)</span><br><span class="line"><span class="keyword">lw </span>rt,offset(rs) <span class="comment">#源操作数为基址寻址</span></span><br><span class="line"><span class="keyword">sw </span>rt,offset(rs) <span class="comment">#目标操作数为基址寻址</span></span><br></pre></td></tr></table></figure><h1 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h1><p>一下列举一些cpp到mips的转换:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cin&gt;&gt;h;</span><br><span class="line">A[<span class="number">12</span>] = A[<span class="number">8</span>]+h;</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">li $<span class="built_in">v0</span>,<span class="number">5</span></span><br><span class="line"><span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">move </span>$<span class="built_in">s2</span>,$<span class="built_in">v0</span></span><br><span class="line"><span class="comment">#ori $s2,$v0,0</span></span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">t0</span>,<span class="number">32</span>($<span class="built_in">s3</span>) <span class="comment">#4*8 = 32,基址寻址</span></span><br><span class="line"><span class="keyword">add </span>$<span class="built_in">t0</span>,$<span class="built_in">s2</span>,$<span class="built_in">t0</span></span><br><span class="line"><span class="keyword">sw</span>$<span class="built_in">t0</span>,<span class="number">48</span>($<span class="built_in">s3</span>) <span class="comment">#4*12 = 48</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> array[<span class="number">1024</span>];</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">.data</span></span><br><span class="line"><span class="symbol">array:</span><span class="meta">.space</span> <span class="number">4096</span> </span><br><span class="line"><span class="comment">#.word 1024 is ok</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> pof2[<span class="number">16</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">pof2:</span><span class="meta">.word</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">la$<span class="built_in">a0</span>,pof2</span><br><span class="line"><span class="keyword">lw</span>$<span class="built_in">s0</span>,<span class="number">8</span>($<span class="built_in">a0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lui</span>$<span class="built_in">s1</span>,<span class="number">0x1234</span></span><br><span class="line"><span class="keyword">ori</span>$<span class="built_in">s1</span>,$<span class="built_in">s1</span></span><br><span class="line"><span class="keyword">addi</span>        $<span class="built_in">t0</span>,$<span class="number">0</span>,<span class="number">100</span></span><br><span class="line"><span class="keyword">sw</span>$<span class="built_in">t0</span>,<span class="number">0</span>($<span class="built_in">s1</span>)</span><br></pre></td></tr></table></figure><p>立即数寻址/寄存器寻址{addi/add <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mn>0</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">s0,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">s</span><span class="mord">0</span><span class="mpunct">,</span></span></span></span>s1,5/$s2}</p><h1 id="赋值"><a class="markdownIt-Anchor" href="#赋值"></a> 赋值</h1><p>全局/static变量:</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">.data</span></span><br><span class="line">i<span class="meta">.word</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####################</span></span><br><span class="line"><span class="meta">.data</span></span><br><span class="line">i:<span class="meta">.space</span> <span class="number">4</span></span><br><span class="line"><span class="comment">####################</span></span><br><span class="line"><span class="meta">.text</span></span><br><span class="line">la$<span class="built_in">t0</span>,i</span><br><span class="line"><span class="keyword">addi</span>        $<span class="built_in">t1</span>,$<span class="number">0</span>,<span class="number">100</span></span><br><span class="line"><span class="keyword">sw</span>$<span class="built_in">t1</span>,<span class="number">0</span>($<span class="built_in">t0</span>)</span><br><span class="line"><span class="comment">####################</span></span><br><span class="line">li$<span class="built_in">t0</span>,<span class="number">100</span></span><br><span class="line"><span class="keyword">sw</span>$<span class="built_in">t0</span>,i</span><br><span class="line"><span class="comment">####################</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#语句：i=j;</span></span><br><span class="line"><span class="comment">############################################</span></span><br><span class="line"><span class="comment">#设i,j分别为$s1,$s0</span></span><br><span class="line"><span class="keyword">add </span> $<span class="built_in">s1</span>,$<span class="number">0</span>,$<span class="built_in">s0</span></span><br><span class="line"><span class="comment">############################################</span></span><br><span class="line"><span class="comment">#situation1:</span></span><br><span class="line"><span class="comment">#i为动态变量，地址为0x12345678</span></span><br><span class="line"><span class="comment">#j被指派到寄存器$s1</span></span><br><span class="line"><span class="comment">############################################</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="built_in">t0</span>,<span class="number">0x1234</span>      <span class="comment"># $s1&lt;----0x12340000</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="built_in">t0</span>,$<span class="built_in">t0</span>,<span class="number">0x5678</span>  <span class="comment"># $s1&lt;----0x12345678</span></span><br><span class="line"><span class="keyword">lw </span> $<span class="built_in">s1</span>,<span class="number">0</span>($<span class="built_in">t0</span>)</span><br><span class="line"><span class="comment">############################################</span></span><br><span class="line"><span class="comment">#situation2:</span></span><br><span class="line"><span class="comment">#i,j均为动态变量，地址分别为</span></span><br><span class="line"><span class="comment">#0x12345678,0x87654320</span></span><br><span class="line"><span class="comment">############################################</span></span><br><span class="line"><span class="keyword">lui </span> $<span class="built_in">t0</span>,<span class="number">0x1234</span>　　<span class="comment">#取出来放到高位</span></span><br><span class="line"><span class="keyword">ori </span> $<span class="built_in">t0</span>,$<span class="built_in">t0</span>,<span class="number">0x5678</span></span><br><span class="line"><span class="keyword">lw </span>  $<span class="built_in">t1</span>,<span class="number">0</span>($<span class="built_in">t0</span>)</span><br><span class="line"><span class="keyword">lui </span> $<span class="built_in">t0</span>,<span class="number">0x8765</span></span><br><span class="line"><span class="keyword">ori </span> $<span class="built_in">t0</span>,<span class="number">0x4320</span></span><br><span class="line"><span class="keyword">sw </span>  $<span class="built_in">t1</span>,<span class="number">0</span>($<span class="built_in">t0</span>)</span><br><span class="line"><span class="comment">############################################</span></span><br><span class="line"><span class="comment">#i,j均为自动变量，宏寻址</span></span><br><span class="line"><span class="keyword">lw </span>  $<span class="built_in">t0</span>,i </span><br><span class="line"><span class="keyword">sw </span>  $<span class="built_in">t0</span>,<span class="keyword">j </span></span><br></pre></td></tr></table></figure><h1 id="宏指令"><a class="markdownIt-Anchor" href="#宏指令"></a> 宏指令</h1><p>mult和div都是二元的，指令周期分别为32和38，它们的宏指令为三元</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mult</span>$<span class="built_in">a1</span>,$<span class="built_in">s1</span></span><br><span class="line"><span class="keyword">mflo</span>$<span class="built_in">v0</span><span class="comment">#存低32位</span></span><br><span class="line"><span class="keyword">mfhi</span>$<span class="built_in">v1</span><span class="comment">#存高32位</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">div</span>$<span class="built_in">a1</span>,$<span class="built_in">s1</span></span><br><span class="line"><span class="keyword">mflo</span>$<span class="built_in">v0</span><span class="comment">#存商</span></span><br><span class="line"><span class="keyword">mfhi</span>$<span class="built_in">v1</span><span class="comment">#存余数</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#加载地址宏指令</span></span><br><span class="line">laRdest,<span class="keyword">address</span></span><br><span class="line"><span class="keyword"></span><span class="comment">#加载立即数宏指令</span></span><br><span class="line">liRdest,imm</span><br><span class="line"></span><br><span class="line"><span class="comment">#$at寄存器编号为1,给汇编程序使用,把address或者imm加载到$at里面</span></span><br><span class="line"><span class="keyword">lui</span>$<span class="built_in">at</span>,imm</span><br><span class="line"><span class="keyword">ori</span>Rdest,$<span class="built_in">at</span>,imm</span><br><span class="line"></span><br><span class="line"><span class="keyword">move</span>        Rdest,Rsrc</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Rdest:</span>存放结果的寄存器</span><br><span class="line"><span class="symbol">Rsrc:</span>立即数或者寄存器名</span><br><span class="line">(rs/rt):源操作数</span><br><span class="line"><span class="symbol">rd:</span>目的操作数</span><br></pre></td></tr></table></figure><p>循环移位宏指令</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rolRd,Rs,Src2<span class="comment">#循环左移</span></span><br><span class="line">rorRd,Rs,Src2<span class="comment">#循环右移</span></span><br></pre></td></tr></table></figure><p>查看实现方法：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#rol</span></span><br><span class="line"><span class="keyword">srl</span>$<span class="built_in">at</span>,Rs,<span class="number">32</span>-sa<span class="comment">#假设sa = 1,则at = rs&gt;&gt;31,仅保留最高位</span></span><br><span class="line"><span class="keyword">sll</span>Rd,Rs,sa<span class="comment">#rd = rs&lt;&lt;1,向左移一位</span></span><br><span class="line"><span class="keyword">or</span>Rd,Rd,$<span class="built_in">at</span><span class="comment">#rd = (rs&lt;&lt;1)|(rs&gt;&gt;31)</span></span><br><span class="line"><span class="comment">#ror</span></span><br><span class="line"><span class="keyword">sll</span>$<span class="built_in">a1</span>,Rs,<span class="number">32</span>-sa</span><br><span class="line">sriRd,Rs,sa</span><br><span class="line"><span class="keyword">or</span>Rd,Rd,$<span class="built_in">at</span></span><br></pre></td></tr></table></figure><p>跳转</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">blez </span>$<span class="built_in">s6</span>,Quiz<span class="comment">#小于等于0</span></span><br><span class="line"><span class="keyword">beqz </span>$<span class="built_in">s6</span>,Quiz<span class="comment">#等于0</span></span><br><span class="line"><span class="keyword">bgez </span>$<span class="built_in">s6</span>,Quiz<span class="comment">#大于等于0</span></span><br></pre></td></tr></table></figure><p>统计字符串中字符的数量</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">la $<span class="built_in">t2</span>,str</span><br><span class="line"><span class="keyword">xor</span>$<span class="built_in">t1</span>,$<span class="built_in">t1</span>,$<span class="built_in">t1</span><span class="comment">#清空$t1</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">nextCh:</span></span><br><span class="line"><span class="keyword">lb</span>$<span class="built_in">t0</span>,($<span class="built_in">t2</span>)<span class="comment">#load a byte from $t2(the string)</span></span><br><span class="line"><span class="keyword">begz</span>$<span class="built_in">t0</span>,strEnd</span><br><span class="line"><span class="keyword">addiu</span>$<span class="built_in">t1</span>,$<span class="built_in">t1</span>,<span class="number">1</span></span><br><span class="line"><span class="keyword">addiu</span>$<span class="built_in">t2</span>,$<span class="built_in">t2</span>,<span class="number">1</span><span class="comment">#t2地址加1,移动one byte</span></span><br><span class="line"><span class="keyword">j </span>nextCh</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">strEnd:</span></span><br></pre></td></tr></table></figure><p>sqrt函数的使用</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#$s0=sqrt($a0*$a0+$a1*a1);</span></span><br><span class="line"><span class="keyword">mult </span>$<span class="built_in">a0</span>,$<span class="built_in">a0</span></span><br><span class="line"><span class="keyword">mflo </span>$<span class="built_in">t0</span>        <span class="comment">#注意这里体会只低位</span></span><br><span class="line"><span class="keyword">mult </span>$<span class="built_in">a1</span>,$<span class="built_in">a1</span></span><br><span class="line"><span class="keyword">mflo </span>$<span class="built_in">t1</span></span><br><span class="line"><span class="keyword">add </span> $<span class="built_in">a0</span>,$<span class="built_in">t0</span>,$<span class="built_in">t1</span></span><br><span class="line"><span class="keyword">jal </span> srt        <span class="comment">#call the sqrt function</span></span><br><span class="line"><span class="keyword">move </span>$<span class="built_in">s0</span>,$<span class="built_in">v0</span>    <span class="comment">#result of sqr is returned in $v0(standard convention)</span></span><br></pre></td></tr></table></figure><p>set操作</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">slt</span>&lt;</span><br><span class="line">seq==</span><br><span class="line">sge&gt;=</span><br><span class="line">slesleu        &lt;=</span><br><span class="line">sne!=</span><br></pre></td></tr></table></figure><p>跳转</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">j</span>target<span class="comment">#无条件跳转</span></span><br><span class="line"><span class="keyword">beq</span>xxxxxx<span class="comment">#条件跳转</span></span><br><span class="line"><span class="comment">#bne,bgez,bgtz,blez,bltz</span></span><br></pre></td></tr></table></figure><p>syscall</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 指令编号(服务号)放入:$v0</span><br><span class="line"># 输入参数事先放入$a1,$a0</span><br><span class="line"># 执行syscall</span><br><span class="line"># 返回值在$v0中</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">.data</span></span><br><span class="line"><span class="symbol">msg:</span>    .asciiz <span class="string">&quot;input a char&quot;</span>、</span><br><span class="line"></span><br><span class="line"><span class="meta">.text</span></span><br><span class="line">.globl main</span><br><span class="line">.ent main   </span><br><span class="line"><span class="symbol">main:</span>   </span><br><span class="line">li $<span class="built_in">v0</span>,<span class="number">4</span></span><br><span class="line">la $<span class="built_in">a0</span>,msg</span><br><span class="line"><span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">li $<span class="built_in">v0</span>,<span class="number">12</span></span><br><span class="line"><span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">move </span>        $<span class="built_in">a1</span>,$<span class="built_in">v0</span></span><br><span class="line"></span><br><span class="line">li $<span class="built_in">v0</span>,<span class="number">11</span></span><br><span class="line">li $<span class="built_in">a0</span>,<span class="number">0x0a</span> </span><br><span class="line"><span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">move </span>        $<span class="built_in">a0</span>,$<span class="built_in">a1</span></span><br><span class="line">li $<span class="built_in">v0</span>,<span class="number">11</span></span><br><span class="line"><span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">li $<span class="built_in">v0</span>,<span class="number">10</span></span><br><span class="line"><span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span><span class="meta">.end</span> main</span><br></pre></td></tr></table></figure><p>while循环/for循环</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">v0=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(a1&lt;a1)&#123;</span><br><span class="line">    t1=mem[a1];</span><br><span class="line">    t2=mem[a2];</span><br><span class="line">    <span class="keyword">if</span>(t1!=t2)<span class="keyword">break</span>;</span><br><span class="line">    a1++;</span><br><span class="line">    a2--;     </span><br><span class="line">&#125;</span><br><span class="line">v0=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">li$<span class="built_in">v0</span>,<span class="number">1</span></span><br><span class="line"><span class="symbol">loop:</span></span><br><span class="line"><span class="keyword">bgeu</span>        $<span class="built_in">a1</span>,$<span class="built_in">a2</span>,done</span><br><span class="line"><span class="keyword">lb</span>$<span class="built_in">t1</span>,<span class="number">0</span>($<span class="built_in">a1</span>)</span><br><span class="line"><span class="keyword">lb</span>$<span class="built_in">t2</span>,<span class="number">0</span>($<span class="built_in">a2</span>)</span><br><span class="line"><span class="keyword">bne</span>$<span class="built_in">t1</span>,$<span class="built_in">t2</span>,<span class="keyword">break</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">addi</span>        $<span class="built_in">a1</span>,$<span class="built_in">a1</span>,<span class="number">1</span></span><br><span class="line"><span class="keyword">addi</span>        $<span class="built_in">a2</span>,$<span class="built_in">a2</span>,-<span class="number">1</span></span><br><span class="line"><span class="keyword">b</span>loop</span><br><span class="line"><span class="keyword">break:</span></span><br><span class="line"><span class="keyword"></span>li$<span class="built_in">v0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a0 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> t0 = <span class="number">10</span>;t0&gt;<span class="number">0</span>;t0--)</span><br><span class="line">    a0+=t0;</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">li$<span class="built_in">a0</span>,<span class="number">1</span></span><br><span class="line">li$<span class="built_in">t0</span>,<span class="number">10</span></span><br><span class="line"><span class="symbol">loop:</span></span><br><span class="line"><span class="keyword">add</span>$<span class="built_in">a0</span>,$<span class="built_in">a0</span>,$<span class="built_in">t0</span></span><br><span class="line"><span class="keyword">addi</span>        $<span class="built_in">t0</span>,$<span class="built_in">t0</span>,-<span class="number">1</span></span><br><span class="line"><span class="keyword">bgtz</span>        $<span class="built_in">t0</span>,loop</span><br></pre></td></tr></table></figure><p>switch语句：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s0=<span class="number">32</span></span><br><span class="line">top:</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;input a value from 1 to 3&quot;</span>;</span><br><span class="line">    cin&gt;&gt;v0;</span><br><span class="line">    <span class="keyword">switch</span>(v0)&#123;</span><br><span class="line">        <span class="built_in">case</span>(<span class="number">1</span>)&#123;s0&lt;&lt;=<span class="number">1</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="built_in">case</span>(<span class="number">2</span>)&#123;s0&lt;&lt;=<span class="number">2</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="built_in">case</span>(<span class="number">3</span>)&#123;s0&lt;&lt;=<span class="number">3</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">        defalt:<span class="keyword">goto</span> top;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;s0;</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">            <span class="meta">.data</span></span><br><span class="line">            <span class="meta">.align</span>  <span class="number">2</span>          </span><br><span class="line"><span class="comment">###############################################################</span></span><br><span class="line"><span class="comment"># 插播一个小知识：</span></span><br><span class="line"><span class="comment">#   alignment:</span></span><br><span class="line"><span class="comment">#   字节：占用一个内存单元</span></span><br><span class="line"><span class="comment">#   半字：占用相邻两个内存单元，地址必须为偶地址，末尾至少1个0</span></span><br><span class="line"><span class="comment">#   字：四个，末尾至少2个0</span></span><br><span class="line"><span class="comment">#   双字：八个，被8整除，末尾至少3个0</span></span><br><span class="line"><span class="comment">#因为MIPS指令字规模是32bits定长，所以每次都要以字对齐的方式在内存中存放指令</span></span><br><span class="line"><span class="comment">#所以要.align 2#貌似是4字节对齐</span></span><br><span class="line"><span class="comment">#&quot;当一条指令已从内存取出并存放到指令寄存器(IR)中后，PC地址增量4&quot;</span></span><br><span class="line"><span class="comment">###############################################################</span></span><br><span class="line"><span class="keyword">jumptable: </span> <span class="meta">.word</span>   top,case1,case2,case3</span><br><span class="line"><span class="symbol">msg:</span>        .asciiz <span class="string">&quot;\n\ninput a value from 1 to 3:&quot;</span></span><br><span class="line">            <span class="meta">.text</span></span><br><span class="line"><span class="symbol">top:</span></span><br><span class="line">            li    $<span class="built_in">v0</span>,<span class="number">4</span></span><br><span class="line">            la    $<span class="built_in">a0</span>,msg</span><br><span class="line">            <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">            li    $<span class="built_in">v0</span>,<span class="number">5</span></span><br><span class="line">            <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">            <span class="keyword">blez </span> $<span class="built_in">v0</span>,top</span><br><span class="line">            li    $<span class="built_in">t3</span>,<span class="number">3</span></span><br><span class="line">            <span class="keyword">bgt </span>  $<span class="built_in">v0</span>,$<span class="built_in">t3</span>,top</span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line">            la    $<span class="built_in">a1</span>,<span class="keyword">jumptable </span>  <span class="comment">#jumptable的首地址保存在$a1寄存器里面</span></span><br><span class="line">            <span class="keyword">sll </span>  $<span class="built_in">t0</span>,$<span class="built_in">v0</span>,<span class="number">2</span>       <span class="comment">#这个程序利用输入的字符在jumptable里面寻址，地址是4个byte一个单元的</span></span><br><span class="line">                                  <span class="comment">#$t0是位移量，$a1是基地址 </span></span><br><span class="line">                                  <span class="comment">#compute word offset</span></span><br><span class="line">            <span class="keyword">add </span>  $<span class="built_in">t1</span>,$<span class="built_in">a1</span>,$<span class="built_in">t0</span>     <span class="comment">#$t1现在应该是一个在jumptable里的指针,那么也就是jumptable的基地址</span></span><br><span class="line">            <span class="keyword">lw </span>   $<span class="built_in">t2</span>,<span class="number">0</span>($<span class="built_in">t1</span>)      <span class="comment">#$t2:load an address from jumptable</span></span><br><span class="line">                                  <span class="comment">#访问主存单元寻址必须用lw Rt,offset(Rs)</span></span><br><span class="line">            <span class="keyword">jr </span>   $<span class="built_in">t2</span>             <span class="comment">#是你小伙计!!!!!</span></span><br><span class="line"><span class="comment">################################################################################################</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">case1:</span>      <span class="keyword">sll </span>  $<span class="built_in">s0</span>,$<span class="built_in">s0</span>,<span class="number">1</span></span><br><span class="line">            <span class="keyword">b </span>    output</span><br><span class="line"><span class="symbol">case2:</span>      <span class="keyword">sll </span>  $<span class="built_in">s0</span>,$<span class="built_in">s0</span>,<span class="number">2</span></span><br><span class="line">            <span class="keyword">b </span>    output</span><br><span class="line"><span class="symbol">case3:</span>      <span class="keyword">sll </span>  $<span class="built_in">s0</span>,$<span class="built_in">s0</span>,<span class="number">3</span></span><br><span class="line"><span class="symbol">output:</span></span><br><span class="line">            li    $<span class="built_in">v0</span>,<span class="number">1</span></span><br><span class="line">            <span class="keyword">move </span> $<span class="built_in">a0</span>,$<span class="built_in">s0</span></span><br><span class="line">            <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br></pre></td></tr></table></figure><blockquote><p>寄存器 rigister 速度快，代价高，数量有限<br>内存：速度慢，容量大，G字节规模，代价低<br>高速缓冲储存器：cache<br>符号扩展：将符号位扩展为高位数字<br>二进制加法；不同符号只要不溢出可以直接相加<br>二进制减法：减数取负然后二进制加法<br>溢出检测：<br>符号不同:不可能溢出<br>符号相同:必须和操作数有相同的符号,否则溢出<br>ATTENTION:最高位进位不一定溢出，两个负数相加一定进位但不一定溢出</p></blockquote><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">la$<span class="built_in">a0</span>,string<span class="comment">#string的起始位置在$a0处</span></span><br><span class="line"><span class="keyword">jal</span>string_len</span><br><span class="line"><span class="keyword">move</span>$<span class="built_in">t0</span>,$<span class="built_in">v0</span><span class="comment">#调用结束,$v0被存放了string_len的结果,将$v0的值放入$t0</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">.text</span></span><br><span class="line">.globlmain</span><br><span class="line">.ent main</span><br><span class="line"><span class="symbol">main:</span></span><br><span class="line"><span class="keyword">jal</span>ret<span class="comment"># way1 of calling function </span></span><br><span class="line">        la$<span class="built_in">t0</span>,ret<span class="comment"># way2 of calling function </span></span><br><span class="line">        <span class="keyword">jalr</span>        $<span class="built_in">ra</span>,$<span class="built_in">t0</span></span><br><span class="line">        li$<span class="built_in">v0</span>,<span class="number">1</span></span><br><span class="line">        <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span>        <span class="meta">.end</span>main</span><br><span class="line"><span class="symbol">ret:</span></span><br><span class="line">        <span class="keyword">jr</span>$<span class="built_in">ra</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##########################################</span></span><br><span class="line"><span class="comment">#HOMEWORK4:Fibonacci</span></span><br><span class="line"><span class="comment">#Rabbit array</span></span><br><span class="line"><span class="comment">#Editor:VScode</span></span><br><span class="line"><span class="comment">##########################################</span></span><br><span class="line"><span class="comment">##########################################</span></span><br><span class="line">        <span class="meta">.data</span></span><br><span class="line"><span class="symbol">msg1:</span>   .asciiz <span class="string">&quot;Now you have 10 rabbits~\n&quot;</span></span><br><span class="line"><span class="symbol">msg2:</span>   .asciiz <span class="string">&quot;the Fibonacci number of 10 is : &quot;</span></span><br><span class="line"><span class="symbol">msg3:</span>   .asciiz <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="comment">###########################################</span></span><br><span class="line">        <span class="meta">.text</span></span><br><span class="line">        .globl main</span><br><span class="line"><span class="symbol">main:</span></span><br><span class="line"></span><br><span class="line">    li    $<span class="built_in">v0</span>,<span class="number">4</span></span><br><span class="line">    la    $<span class="built_in">a0</span>,msg1</span><br><span class="line">    <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">    <span class="comment">##1</span></span><br><span class="line">    <span class="keyword">subi </span> $<span class="built_in">sp</span>,$<span class="built_in">sp</span>,<span class="number">32</span></span><br><span class="line">    <span class="keyword">sw </span>   $<span class="built_in">ra</span>,<span class="number">28</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">sw </span>   $<span class="built_in">fp</span>,<span class="number">24</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">addiu </span>$<span class="built_in">fp</span>,$<span class="built_in">sp</span>,<span class="number">28</span></span><br><span class="line">    <span class="comment">##2</span></span><br><span class="line"></span><br><span class="line">    li    $<span class="built_in">t0</span>,<span class="number">10</span></span><br><span class="line">    <span class="keyword">sw </span>   $<span class="built_in">t0</span>,<span class="number">16</span>($<span class="built_in">sp</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">lw </span>   $<span class="built_in">a0</span>,<span class="number">16</span>($<span class="built_in">sp</span>)     <span class="comment">#argument fib(n)</span></span><br><span class="line">    <span class="keyword">jal </span>  fib</span><br><span class="line">    <span class="keyword">move </span> $<span class="built_in">t0</span>,$<span class="built_in">v0</span></span><br><span class="line"></span><br><span class="line">    li    $<span class="built_in">v0</span>,<span class="number">4</span></span><br><span class="line">    la    $<span class="built_in">a0</span>,msg2</span><br><span class="line">    <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">    li    $<span class="built_in">v0</span>,<span class="number">1</span></span><br><span class="line">    <span class="keyword">move </span> $<span class="built_in">a0</span>,$<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">    <span class="keyword">lw </span>   $<span class="built_in">ra</span>,<span class="number">28</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">lw </span>   $<span class="built_in">fp</span>,<span class="number">24</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">addiu </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,<span class="number">32</span></span><br><span class="line"></span><br><span class="line">    li    $<span class="built_in">v0</span>,<span class="number">10</span></span><br><span class="line">    <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span><span class="symbol"></span></span><br><span class="line"><span class="symbol">fib:</span></span><br><span class="line">                            <span class="comment">#if(n==1||n==0)return 1;</span></span><br><span class="line">                            <span class="comment">#else return tailfib(n,1,1);</span></span><br><span class="line">    <span class="keyword">addiu </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,-<span class="number">24</span></span><br><span class="line">    <span class="keyword">sw </span>   $<span class="built_in">ra</span>,<span class="number">20</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">sw </span>   $<span class="built_in">fp</span>,<span class="number">16</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">addiu </span>$<span class="built_in">fp</span>,$<span class="built_in">sp</span>,<span class="number">20</span>        <span class="comment">#set up a frame pointer</span></span><br><span class="line"></span><br><span class="line">    li    $<span class="built_in">t0</span>,<span class="number">1</span></span><br><span class="line">    <span class="keyword">sw </span>   $<span class="built_in">a0</span>,<span class="number">4</span>($<span class="built_in">fp</span>)        <span class="comment">#save argument(n) fp4 saves n</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">move </span> $<span class="built_in">v1</span>,$<span class="built_in">a0</span></span><br><span class="line">    <span class="keyword">beqz </span> $<span class="built_in">v1</span>,then          <span class="comment">#if n==0</span></span><br><span class="line">    <span class="keyword">beq </span>  $<span class="built_in">v1</span>,$<span class="built_in">t0</span>,then      <span class="comment">#if n==1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lw </span>   $<span class="built_in">a0</span>,<span class="number">4</span>($<span class="built_in">fp</span>)        <span class="comment">#load argument(n)</span></span><br><span class="line">    li    $<span class="built_in">a1</span>,<span class="number">1</span>             <span class="comment">#$a1 is pre1</span></span><br><span class="line">    <span class="keyword">move </span> $<span class="built_in">s3</span>,$<span class="built_in">a0</span></span><br><span class="line">    <span class="keyword">move </span> $<span class="built_in">s1</span>,$<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">move </span> $<span class="built_in">s2</span>,$<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">jal </span>  tailfib</span><br><span class="line">    <span class="keyword">j </span>done</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">then:</span></span><br><span class="line"></span><br><span class="line">    li   $<span class="built_in">v0</span>,<span class="number">1</span></span><br><span class="line">    <span class="keyword">j </span>   done</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">done:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lw </span>   $<span class="built_in">ra</span>,<span class="number">20</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">lw </span>   $<span class="built_in">fp</span>,<span class="number">16</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">addiu </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,<span class="number">24</span></span><br><span class="line">    <span class="keyword">jr </span>   $<span class="built_in">ra</span></span><br><span class="line">    <span class="meta">.end</span>  fact</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">tailfib:</span></span><br><span class="line">    li     $<span class="built_in">t1</span>,<span class="number">2</span></span><br><span class="line">    <span class="keyword">beq </span>   $<span class="built_in">s3</span>,$<span class="built_in">t1</span>,then1</span><br><span class="line">    <span class="keyword">lw </span>    $<span class="built_in">v0</span>,<span class="number">4</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">add </span>   $<span class="built_in">v0</span>,$<span class="built_in">s1</span>,$<span class="built_in">s2</span></span><br><span class="line">    <span class="keyword">move </span>  $<span class="built_in">s2</span>,$<span class="built_in">s1</span></span><br><span class="line">    <span class="keyword">move </span>  $<span class="built_in">s1</span>,$<span class="built_in">v0</span></span><br><span class="line">    <span class="keyword">sub </span>   $<span class="built_in">s3</span>,$<span class="built_in">s3</span>,<span class="number">1</span></span><br><span class="line">    <span class="keyword">sw </span>    $<span class="built_in">v0</span>,<span class="number">4</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">j </span>     tailfib</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">then1:</span></span><br><span class="line">    <span class="keyword">lw </span>    $<span class="built_in">v0</span>,<span class="number">4</span>($<span class="built_in">sp</span>)</span><br><span class="line">    <span class="keyword">jr </span>    $<span class="built_in">ra</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###########EOF############################</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#homework6:</span></span><br><span class="line"><span class="comment">#       int tak(int x,int y,int z)&#123;</span></span><br><span class="line"><span class="comment">#               x&lt;=y?:z:tak(tak(x-1,y,z),tak(y-1,z,x),tak(z-1,x,y));</span></span><br><span class="line"><span class="comment">#       &#125;</span></span><br><span class="line"><span class="comment">#editor:VScode</span></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line">           <span class="meta">.data</span></span><br><span class="line"><span class="symbol">msg1:</span>      .asciiz  <span class="string">&quot;tak(18,12,6)is: &quot;</span></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line">        <span class="meta">.text</span></span><br><span class="line">        .globl main</span><br><span class="line"><span class="symbol">main:</span></span><br><span class="line">        li    $<span class="built_in">v0</span>,<span class="number">4</span>            <span class="comment">#instruction</span></span><br><span class="line">        la    $<span class="built_in">a0</span>,msg1</span><br><span class="line">        <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">        <span class="comment">##</span></span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,-<span class="number">28</span></span><br><span class="line">           <span class="keyword">sw </span>$<span class="built_in">ra</span>,<span class="number">24</span>($<span class="built_in">sp</span>)</span><br><span class="line">           <span class="keyword">sw </span>$<span class="built_in">fp</span>,<span class="number">20</span>($<span class="built_in">sp</span>)</span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">fp</span>,$<span class="built_in">sp</span>,<span class="number">24</span></span><br><span class="line">        <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">        li     $<span class="built_in">a0</span>,<span class="number">18</span>            <span class="comment">#x==18</span></span><br><span class="line">        li     $<span class="built_in">a1</span>,<span class="number">12</span>            <span class="comment">#y==12</span></span><br><span class="line">        li     $<span class="built_in">a2</span>,<span class="number">6</span>            <span class="comment">#z==6</span></span><br><span class="line">        <span class="keyword">move </span>  $<span class="built_in">a3</span>,$<span class="built_in">a2</span></span><br><span class="line">        <span class="keyword">jal </span>    tak</span><br><span class="line"></span><br><span class="line">        <span class="keyword">move </span>$<span class="built_in">a0</span>,$<span class="built_in">v0</span>        <span class="comment">#out put the result</span></span><br><span class="line">        li $<span class="built_in">v0</span>,<span class="number">1</span></span><br><span class="line">        <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">ra</span>,<span class="number">24</span>($<span class="built_in">sp</span>)        <span class="comment">#restore $ra</span></span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">fp</span>,<span class="number">20</span>($<span class="built_in">sp</span>)        <span class="comment">#restore $fp</span></span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,<span class="number">28</span>    <span class="comment">#pop stack</span></span><br><span class="line"></span><br><span class="line">        li    $<span class="built_in">v0</span>,<span class="number">10</span>        <span class="comment">#YOU NEED ONE !!!!!!!</span></span><br><span class="line">        <span class="keyword">syscall</span></span><br><span class="line"><span class="keyword"></span><span class="symbol"></span></span><br><span class="line"><span class="symbol">tak:</span></span><br><span class="line">        <span class="comment">##</span></span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,-<span class="number">28</span>    <span class="comment">#stack frame is 28 bytes long</span></span><br><span class="line">        <span class="keyword">sw </span>$<span class="built_in">ra</span>,<span class="number">24</span>($<span class="built_in">sp</span>)</span><br><span class="line">        <span class="keyword">sw </span>$<span class="built_in">fp</span>,<span class="number">20</span>($<span class="built_in">sp</span>)</span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">fp</span>,$<span class="built_in">sp</span>,<span class="number">24</span></span><br><span class="line">        <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">sw </span>$<span class="built_in">a0</span>,<span class="number">4</span>($<span class="built_in">fp</span>)        <span class="comment">#x</span></span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">v0</span>,<span class="number">4</span>($<span class="built_in">fp</span>)        <span class="comment">#x</span></span><br><span class="line">        <span class="keyword">sw </span>$<span class="built_in">a1</span>,<span class="number">8</span>($<span class="built_in">fp</span>)        <span class="comment">#y</span></span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">v1</span>,<span class="number">8</span>($<span class="built_in">fp</span>)        <span class="comment">#y</span></span><br><span class="line">        <span class="keyword">sw </span>$<span class="built_in">a2</span>,<span class="number">12</span>($<span class="built_in">fp</span>)       <span class="comment">#z</span></span><br><span class="line">        <span class="keyword">bgt </span>$<span class="built_in">a0</span>,$<span class="built_in">a1</span>,endless</span><br><span class="line">        <span class="keyword">move </span>$<span class="built_in">v0</span>,$<span class="built_in">a2</span></span><br><span class="line">        <span class="keyword">j </span>end</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">endless:</span></span><br><span class="line">        #</span><br><span class="line">        <span class="keyword">lw </span> $<span class="built_in">v1</span>,<span class="number">4</span>($<span class="built_in">fp</span>)</span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">a0</span>,$<span class="built_in">v1</span>,-<span class="number">1</span>    <span class="comment">#a==tak(x-1,y,z)</span></span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">a1</span>,<span class="number">8</span>($<span class="built_in">fp</span>)</span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">a2</span>,<span class="number">12</span>($<span class="built_in">fp</span>)</span><br><span class="line">        <span class="keyword">move </span>   $<span class="built_in">a3</span>,$<span class="built_in">a2</span></span><br><span class="line">        <span class="keyword">jal </span>tak</span><br><span class="line">        <span class="keyword">sw </span>$<span class="built_in">v0</span>,<span class="number">16</span>($<span class="built_in">fp</span>)</span><br><span class="line">        #</span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">v1</span>,<span class="number">8</span>($<span class="built_in">fp</span>)        <span class="comment">#b==tak(y-1,z,x)</span></span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">a0</span>,$<span class="built_in">v1</span>,-<span class="number">1</span></span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">a1</span>,<span class="number">12</span>($<span class="built_in">fp</span>)</span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">a2</span>,<span class="number">4</span>($<span class="built_in">fp</span>)</span><br><span class="line">        <span class="keyword">move </span>   $<span class="built_in">a3</span>,$<span class="built_in">a2</span></span><br><span class="line">        <span class="keyword">jal </span>tak</span><br><span class="line">        <span class="keyword">sw </span>$<span class="built_in">v0</span>,<span class="number">20</span>($<span class="built_in">fp</span>)</span><br><span class="line">        #</span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">v1</span>,<span class="number">12</span>($<span class="built_in">fp</span>)        <span class="comment">#c==tak(z-1,x,y)</span></span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">a0</span>,$<span class="built_in">v1</span>,-<span class="number">1</span></span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">a1</span>,<span class="number">4</span>($<span class="built_in">fp</span>)</span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">a2</span>,<span class="number">8</span>($<span class="built_in">fp</span>)</span><br><span class="line">        <span class="keyword">move </span>$<span class="built_in">a3</span>,$<span class="built_in">a2</span></span><br><span class="line">        <span class="keyword">jal </span>tak</span><br><span class="line">        <span class="keyword">move </span>$<span class="built_in">a2</span>,$<span class="built_in">v0</span></span><br><span class="line">        #</span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">a0</span>,<span class="number">16</span>($<span class="built_in">fp</span>)        <span class="comment">#answer==tak(a,b,c)</span></span><br><span class="line">        <span class="keyword">lw </span>$<span class="built_in">a1</span>,<span class="number">20</span>($<span class="built_in">fp</span>)</span><br><span class="line">        <span class="keyword">move </span>   $<span class="built_in">a3</span>,$<span class="built_in">a2</span></span><br><span class="line">        <span class="keyword">jal </span>tak</span><br><span class="line"><span class="symbol">end:</span></span><br><span class="line">        <span class="keyword">lw,$ra,24($sp)</span></span><br><span class="line"><span class="keyword"></span>        <span class="keyword">lw </span>$<span class="built_in">fp</span>,<span class="number">20</span>($<span class="built_in">sp</span>)</span><br><span class="line">        <span class="keyword">addiu </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,<span class="number">28</span></span><br><span class="line">        <span class="keyword">jr </span>$<span class="built_in">ra</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###########EOF#########################</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
          <category> MIPS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>优先队列</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">priority_queue&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,greater&lt;<span class="type">int</span>&gt; &gt;q;<span class="comment">//小顶堆</span></span><br><span class="line">priority_queue&lt;<span class="type">int</span>&gt; q;<span class="comment">//大顶堆,默认</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> c, fc;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> node&amp; a) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> fc &lt; a.fc;<span class="comment">//大顶</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;node&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node2</span>&#123;<span class="comment">//重写仿函数</span></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">oprator</span><span class="params">()</span> <span class="params">(node a,node b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a,x&lt;b.x;<span class="comment">//大顶</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;node,vector&lt;node&gt;,node2&gt; q;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>语法问题</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/%E8%AF%AD%E6%B3%95%E9%97%AE%E9%A2%98/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/%E8%AF%AD%E6%B3%95%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>一些C++的语法问题</p><span id="more"></span><p><a href="https://codeforces.com/blog/entry/15643">https://codeforces.com/blog/entry/15643</a></p><h2 id="scanf"><a class="markdownIt-Anchor" href="#scanf"></a> scanf</h2><p><code>scanf(&quot;%c&quot;,&amp;c);</code> 可以输入换行符<br><code>scanf(&quot;%s&quot;,s+1);</code> 不会读取换行符</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; p;</span><br><span class="line">p = &#123;<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v;</span><br><span class="line">v = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br></pre></td></tr></table></figure><h2 id="tuple"><a class="markdownIt-Anchor" href="#tuple"></a> tuple</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tuple&lt;<span class="type">int</span>,<span class="type">int</span>,<span class="type">int</span>&gt; t;</span><br><span class="line">t = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> x =  <span class="built_in">get</span>&lt;<span class="number">1</span>&gt;(t);</span><br><span class="line">cout&lt;&lt;x&lt;&lt;endl;</span><br></pre></td></tr></table></figure><h3 id="builtin"><a class="markdownIt-Anchor" href="#builtin"></a> builtin</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x = __builtin_ffs(<span class="number">16</span>);<span class="comment">//返回最低位1的位置</span></span><br><span class="line"><span class="type">int</span> y = __builtin_ctz(<span class="number">16</span>);<span class="comment">//返回尾0的个数</span></span><br><span class="line"><span class="type">int</span> z = __builtin_popcount(x);<span class="comment">//返回1的个数</span></span><br></pre></td></tr></table></figure><h3 id="output"><a class="markdownIt-Anchor" href="#output"></a> Output</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        cout &lt;&lt; a[i][j] &lt;&lt; <span class="string">&quot; \n&quot;</span>[j == m];</span><br></pre></td></tr></table></figure><h3 id="pow"><a class="markdownIt-Anchor" href="#pow"></a> pow</h3><p>今天long long范围内调用了pow函数,然后WA了</p><p>改成这样就过了,待解决</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">p</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=b;i==)&#123;</span><br><span class="line">        ans*=a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="vectorvectorint"><a class="markdownIt-Anchor" href="#vectorvectorint"></a> vector&lt;vector<int>&gt;</int></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">pre</span>(m, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n + <span class="number">1</span>));</span><br></pre></td></tr></table></figure><p>相当于开了一个<code>int pre[m][n+1]</code>的数组,但是不会MLE(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mi>n</mi><mo>≤</mo><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">\sum n \leq {10}^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.848448em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord">1</span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.848448em;"><span style="top:-3.09734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>)</p><p>反正是动态的</p>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>单调栈</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<p><a href="https://xlor.cn/2019/4/2019nanchang/">https://xlor.cn/2019/4/2019nanchang/</a></p><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>树相关的题目</p><span id="more"></span><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><h2 id="cf1325c-ehab-and-path-etic-mexs"><a class="markdownIt-Anchor" href="#cf1325c-ehab-and-path-etic-mexs"></a> [CF1325C]  Ehab and Path-etic MEXS</h2><p><a href="https://codeforces.com/contest/1325/problem/C">https://codeforces.com/contest/1325/problem/C</a></p><p>给一棵树的边附上0~n-2的权值,使得Mex(u,v)的最大值最小</p><p>思路:只需要考虑0,1,2的情况</p><p>​对于所有不经过0的路径,mex = 0</p><p>​对于所有不经过1\2,但经过0的路径,mex = 1\2</p><p>​这样就可以满足所有情况</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> to, id;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node&gt; e[maxn];</span><br><span class="line"><span class="type">int</span> x[maxn], y[maxn];</span><br><span class="line"><span class="type">int</span> vis[maxn];</span><br><span class="line"><span class="type">int</span> ans[maxn];</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> sz = e[u].<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sz;i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = e[u][i].to;</span><br><span class="line">        <span class="type">int</span> id = e[u][i].id;</span><br><span class="line">        <span class="keyword">if</span>(v==fa||vis[id])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        ans[id] = l++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i&lt;sz;i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = e[u][i].to;</span><br><span class="line">        <span class="type">int</span> id = e[u][i].id;</span><br><span class="line">        <span class="keyword">if</span>(v==fa||vis[id])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        vis[id]++;</span><br><span class="line">        <span class="built_in">dfs</span>(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x[i], &amp;y[i]);</span><br><span class="line">        e[x[i]].<span class="built_in">push_back</span>((node)&#123;y[i], i&#125;);</span><br><span class="line">        e[y[i]].<span class="built_in">push_back</span>((node)&#123;x[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    l = <span class="number">0</span>, r = n - <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> d = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> sz = e[i].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(sz&gt;d) &#123;</span><br><span class="line">            d = sz;</span><br><span class="line">            m = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">dfs</span>(m, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="cf1325fehabs-last-theorem"><a class="markdownIt-Anchor" href="#cf1325fehabs-last-theorem"></a> [CF1325F]Ehab’s Last Theorem</h2><p>令t为ceil(sqrt(n))</p><p>解法一:考虑DFS树的原理,如果从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">u</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>,经过的不是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>这条边,说明先前存在另一条路径使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">u</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>,那么此时可以形成一个环,具体的见这篇文章: <a href="https://codeforces.com/blog/entry/68138">https://codeforces.com/blog/entry/68138</a></p><p>并且!如果一个点的dfs子树中所有的点都不能与它满足构成长度大于t的环这个条件,也就是情况2,那么这个点就可以存在于独立点集中</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!vis[u]) &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">           vis[v] = <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>u必然不会存在与一个长度大于t的环当中,那么它必然在独立集里,则把它的连边全部标记起来。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> dep[maxn];</span><br><span class="line"><span class="type">int</span> f[maxn],vis[maxn];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dep[v]) &#123;</span><br><span class="line">            dep[v] = dep[u] + <span class="number">1</span>;</span><br><span class="line">            f[v] = u;</span><br><span class="line">            <span class="built_in">dfs</span>(v, u);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(dep[v]-dep[u]+<span class="number">1</span>&gt;=t) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">                <span class="type">int</span> len = dep[v] - dep[u] + <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, len);</span><br><span class="line">                <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(v) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(cnt==len)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, v);</span><br><span class="line">                    v = f[v];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!vis[u]) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">            vis[v] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    t = <span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(n));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        e[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    dep[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt==t)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解法2：</p><p>一个结论：如果一张图里的每个点的度数都大于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>,那么必然存在一个环，长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>在寻找环的过程中将所有度数小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的点的邻边都删掉，这个点作为独立集的备选</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line">set&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt; s;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v[maxn];</span><br><span class="line"><span class="type">bool</span> del[maxn];</span><br><span class="line"><span class="type">int</span> deg[maxn],occ[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">remove</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (del[x])</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    s.<span class="built_in">erase</span>(&#123;deg[x],x&#125;);</span><br><span class="line">    del[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> u:v[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!del[u]) &#123;</span><br><span class="line">            s.<span class="built_in">erase</span>(&#123;deg[u],u&#125;);</span><br><span class="line">            deg[u]--;</span><br><span class="line">            s.<span class="built_in">insert</span>(&#123;deg[u],u&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m,sq;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    sq = <span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(n));</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">        v[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">        v[b].<span class="built_in">push_back</span>(a);</span><br><span class="line">        deg[a]++;</span><br><span class="line">        deg[b]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    s.<span class="built_in">insert</span>(&#123;deg[i],i&#125;);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">while</span> (!s.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="keyword">auto</span> p=*s.<span class="built_in">begin</span>();</span><br><span class="line">        s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>());</span><br><span class="line">        <span class="keyword">if</span> (p.first+<span class="number">1</span>&gt;=sq) &#123;<span class="comment">//度数大于等于sq-1</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">            <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">d</span><span class="params">(&#123;p.second&#125;)</span></span>;</span><br><span class="line">            occ[p.second]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="function">pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; <span class="title">nex</span><span class="params">(<span class="number">1e9</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> u:v[d.<span class="built_in">back</span>()]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!del[u])</span><br><span class="line">                    nex=<span class="built_in">min</span>(nex,<span class="built_in">make_pair</span>(occ[u],u));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (nex.first) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="type">int</span>)d.<span class="built_in">size</span>()-nex.first+<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> i=nex.first<span class="number">-1</span>;i&lt;d.<span class="built_in">size</span>();i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,d[i]);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                d.<span class="built_in">push_back</span>(nex.second);</span><br><span class="line">                occ[nex.second]=d.<span class="built_in">size</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//度数小于sq-1</span></span><br><span class="line">        ans.<span class="built_in">push_back</span>(p.second);</span><br><span class="line">        <span class="built_in">remove</span>(p.second);<span class="comment">//删除所有邻边</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> u:v[p.second])<span class="comment">//双向删除</span></span><br><span class="line">        <span class="built_in">remove</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;sq;i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="cf1139c-edgy-tree"><a class="markdownIt-Anchor" href="#cf1139c-edgy-tree"></a> [CF1139C] Edgy Tree</h2><p><a href="https://codeforces.com/contest/1139/problem/C">https://codeforces.com/contest/1139/problem/C</a></p><p>题意:一棵树,且需要构建长度为k的序列,序列中相邻两点的路径一定经过&quot;黑边&quot;,节点可以重复</p><p>思路:&quot;黑边&quot;不加入连通块,将&quot;红边&quot;的各个连通块的大小找出来,减去这一部分构造的长度为k的序列</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line"><span class="type">int</span> vis[maxn];</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> add(x, y) (x + y) % mod;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> sz = e[u].<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ret = <span class="number">1</span>;</span><br><span class="line">    vis[u]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sz;i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = e[u][i];</span><br><span class="line">        <span class="keyword">if</span>(v==fa||vis[v])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ret += <span class="built_in">dfs</span>(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">qpow</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x,<span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(k) &#123;</span><br><span class="line">        <span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">            ret = ret * x % mod;</span><br><span class="line">        x = x * x % mod;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y, w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;w);</span><br><span class="line">        <span class="keyword">if</span>(!w) &#123;</span><br><span class="line">            e[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">            e[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (vis[i])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> cnt = <span class="built_in">dfs</span>(i, <span class="number">-1</span>);</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> x = <span class="built_in">qpow</span>(cnt, k);</span><br><span class="line">        sum = <span class="built_in">add</span>(sum, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="built_in">qpow</span>(n, k);</span><br><span class="line">    ans = (ans - sum + mod) % mod;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最近公共祖先</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88(LCA)/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88(LCA)/</url>
      
        <content type="html"><![CDATA[<h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> head[maxn], to[maxn * <span class="number">2</span>], nxt[maxn * <span class="number">2</span>], d[maxn * <span class="number">2</span>], tot;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> w)</span></span>&#123;</span><br><span class="line">    to[++tot] = y; nxt[tot] = head[x]; d[tot] = w; head[x] = tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> dp[maxn][<span class="number">20</span>], dep[maxn], dis[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> fa)</span></span>&#123;</span><br><span class="line">    dp[u][<span class="number">0</span>] = fa; dep[u] = dep[fa] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = head[u]; i; i = nxt[i]) &#123;</span><br><span class="line">        <span class="type">int</span> v = to[i];</span><br><span class="line">        <span class="keyword">if</span> (v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        dis[v] = dis[u] + d[i];</span><br><span class="line">        <span class="built_in">dfs</span>(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    dep[<span class="number">0</span>] = dis[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>); </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; <span class="number">20</span>; j++) </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line">            dp[i][j] = dp[dp[i][j - <span class="number">1</span>]][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qlca</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dep[x] &lt; dep[y]) <span class="built_in">swap</span>(x, y);</span><br><span class="line">    <span class="type">int</span> tmp = dep[x] - dep[y];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; tmp; i++, tmp &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (tmp &amp; <span class="number">1</span>) x = dp[x][i];</span><br><span class="line">    <span class="keyword">if</span> (x == y) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dp[x][i] != dp[y][i]) &#123;</span><br><span class="line">            x = dp[x][i]; y = dp[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dist</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> u = <span class="built_in">qlca</span>(x, y);</span><br><span class="line">    <span class="type">int</span> ans =  dis[x] + dis[y] - <span class="number">2</span>*dis[u];</span><br><span class="line">    <span class="keyword">return</span> dis[x] + dis[y] - <span class="number">2</span>*dis[u];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><h2 id="cf1304e1-trees-and-queries"><a class="markdownIt-Anchor" href="#cf1304e1-trees-and-queries"></a> [CF1304E]1-Trees and Queries</h2><p><a href="https://codeforces.com/contest/1304/problem/E">https://codeforces.com/contest/1304/problem/E</a></p><p>给一棵树,每次查询时在x和y之间加一条边,然后问在a和b之间是否存在一条可以重复走的路径且这条路径的长度为k</p><p>如果不走x和y的那条连边,那么a到b之间的路径长度为a与b的最短路径+2i,因为重复走的边对答案的贡献一定是偶数长度,只有走了x到y的那条连边,贡献为1,可以改变路径的奇偶性,枚举两种情况即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> head[maxn], to[maxn * <span class="number">2</span>], nxt[maxn * <span class="number">2</span>], d[maxn * <span class="number">2</span>], tot;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> w)</span></span>&#123;</span><br><span class="line">    to[++tot] = y; nxt[tot] = head[x]; d[tot] = w; head[x] = tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> dp[maxn][<span class="number">20</span>], dep[maxn], dis[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> fa)</span></span>&#123;</span><br><span class="line">    dp[u][<span class="number">0</span>] = fa; dep[u] = dep[fa] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = head[u]; i; i = nxt[i])&#123;</span><br><span class="line">        <span class="type">int</span> v = to[i];</span><br><span class="line">        <span class="keyword">if</span> (v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        dis[v] = dis[u] + d[i];</span><br><span class="line">        <span class="built_in">dfs</span>(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    dep[<span class="number">0</span>] = dis[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>); </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; <span class="number">20</span>; j++) </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line">            dp[i][j] = dp[dp[i][j - <span class="number">1</span>]][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qlca</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dep[x] &lt; dep[y]) <span class="built_in">swap</span>(x, y);</span><br><span class="line">    <span class="type">int</span> tmp = dep[x] - dep[y];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; tmp; i++, tmp &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (tmp &amp; <span class="number">1</span>) x = dp[x][i];</span><br><span class="line">    <span class="keyword">if</span> (x == y) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (dp[x][i] != dp[y][i])&#123;</span><br><span class="line">            x = dp[x][i]; y = dp[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dist</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> u = <span class="built_in">qlca</span>(x, y);</span><br><span class="line">    <span class="type">int</span> ans =  dis[x] + dis[y] - <span class="number">2</span>*dis[u];</span><br><span class="line">    <span class="keyword">return</span> dis[x] + dis[y] - <span class="number">2</span>*dis[u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        <span class="built_in">add</span>(x, y, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">add</span>(y, x, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--) &#123;</span><br><span class="line">        <span class="type">int</span> a, b, x, y,k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;a, &amp;b, &amp;k);</span><br><span class="line">        <span class="type">int</span> d = <span class="built_in">dist</span>(a, b);</span><br><span class="line">        <span class="keyword">if</span>(k&gt;=d&amp;&amp;(k-d)%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            d = <span class="built_in">dist</span>(a,x)+<span class="built_in">dist</span>(b,y)+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(k&gt;=d&amp;&amp;(k-d)%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            d = <span class="built_in">dist</span>(a,y)+<span class="built_in">dist</span>(b,x)+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(k&gt;=d&amp;&amp;(k-d)%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>倍增算法<br>此算法依然利用了二进制的思想，将O(n)的跳跃优化为O(logn)</p><p>f[x,k]表示从x出发，向上跳跃<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>步</p><p>优美的公式：f[x,k] = f[f[x,k-1],k-1]</p><p>解释：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><msup><mn>2</mn><mi>k</mi></msup><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">x+2^k = (x+2^{k-1})+2^{k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><p>为什么倍增是有效的？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = t; i &gt;= <span class="number">0</span>;i--) &#123; <span class="comment">//*从大向小跳</span></span><br><span class="line">    <span class="keyword">if</span>(dep[f[y][i]]&gt;=dep[x]) <span class="comment">// 先将深度大的向上跳到和深度小的相同的位置</span></span><br><span class="line">        y = f[y][i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>比如说，需要跳5步，那么先尝试跳4步，然后再跳1步</p><p>5 = (101)</p><p>但如果先跳1步，再跳2步，再跳4步,则跳了7步，就需要回溯，因为此处跳2步是不必要的</p><p>时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O((n+m)logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line"><span class="type">int</span> dep[maxn];</span><br><span class="line"><span class="type">int</span> f[maxn][<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> s)</span> </span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(s);</span><br><span class="line">    dep[s] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="type">int</span> u = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dep[v])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            dep[v] = dep[u] + <span class="number">1</span>;</span><br><span class="line">            f[v][<span class="number">0</span>] = u; <span class="comment">// 向上跳一(2^0 = 1)步，即跳到自己的父亲处</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=t;i++) &#123; <span class="comment">// *注意这里，需要“转移一下”</span></span><br><span class="line">                f[v][i] = f[f[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            q.<span class="built_in">push</span>(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y])</span><br><span class="line">        <span class="built_in">swap</span>(x, y);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = t; i &gt;= <span class="number">0</span>;i--) &#123; <span class="comment">//*从大向小跳</span></span><br><span class="line">        <span class="keyword">if</span>(dep[f[y][i]]&gt;=dep[x]) <span class="comment">// 先将深度大的向上跳到和深度小的相同的位置</span></span><br><span class="line">            y = f[y][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x == y)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = t; i &gt;= <span class="number">0</span>;i--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[x][i]!=f[y][i]) &#123; <span class="comment">// 两者深度相同，一起往上跳</span></span><br><span class="line">            x = f[x][i];</span><br><span class="line">            y = f[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span><br><span class="line">    t = (<span class="type">int</span>)(<span class="built_in">log</span>(n) / <span class="built_in">log</span>(<span class="number">2</span>)) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        e[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">bfs</span>(s);</span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">lca</span>(x, y) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tarjan算法<br>LCA的tarjan算法是离线算法，需要记录所有的查询。</p><p>本质上是：使用并查集对“向上标记法”的优化</p><p>时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></p><p>通常离线算法在时间复杂度上会比在线算法更优</p><p>我们知道在dfs中，未进行回溯的结点分为两种情况：</p><p>1.被访问了一次，正在向下进行搜索【标记为1】</p><p>2.尚未被访问【标记为0】</p><p>将已经回溯过的结点标记为2</p><p>考虑这种情况：假设有一个结点x，已经被回溯过，标记为2，结点y正在被访问，标记为1，现在求lca(x,y)。</p><p>可以知道，他们的lca现在的标记应该是1，因为一个结点被回溯的前提是，它的所有子节点已经被回溯过！</p><p>它们的LCA即为：从x结点向上走到根，第一个遇到的标记为1的结点。</p><p>而求这个的过程用并查集来完成</p><p>每当一个结点被标记为2的时候，则把它所在的集合合并到它父节点所在的集合里，此时它的父节点标记仍为1，且它的父结点的集合大小为1<br>查询y所在集合的代表元素，就能查到我们想要的那个“第一个遇到的标记为1的结点”<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; query[maxn];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; query_id[maxn];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dep[maxn];</span><br><span class="line"><span class="type">int</span> f[maxn];</span><br><span class="line"><span class="type">int</span> vis[maxn];</span><br><span class="line"><span class="type">int</span> ans[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x] == x ? x : f[x] = <span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[v])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">tarjan</span>(v);</span><br><span class="line">        f[v] = u;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; query[u].<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = query[u][i];</span><br><span class="line">        <span class="type">int</span> id = query_id[u][i];</span><br><span class="line">        <span class="keyword">if</span>(vis[v] == <span class="number">2</span>) &#123; <span class="comment">//当前vis[u] = 1,vis[v] = 2;</span></span><br><span class="line">            <span class="comment">// 它们的lca是v向上出发遇到的第一个标记为1的结点</span></span><br><span class="line">            ans[id] = <span class="built_in">find</span>(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[u] = <span class="number">2</span>; <span class="comment">// 表示u结点已经被回溯过了</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        e[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        f[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span>(x == y) &#123;</span><br><span class="line">            ans[i] = x;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        query[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        query[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">        query_id[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">        query_id[y].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">tarjan</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时，我们知道，求书上两点之间的距离也是同理的</p><p>ans = dis[x]+dis[y] - 2*dis[lca(x,y)]</p><p>其中d[x]是从根结点到x的最短距离</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>笛卡尔树</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><h2 id="equivalent-prefixes-前缀笛卡尔树"><a class="markdownIt-Anchor" href="#equivalent-prefixes-前缀笛卡尔树"></a> <a href="https://ac.nowcoder.com/acm/contest/881/A">Equivalent Prefixes-前缀笛卡尔树</a></h2><p>序列u，v 对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,ans]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mclose">]</span></span></span></span>上所有的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[L,R]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">]</span></span></span></span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>L</mi><mo>&lt;</mo><mo>=</mo><mi>R</mi><mo>&lt;</mo><mo>=</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo>&lt;</mo><mo>=</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1&lt;=L&lt;=R&lt;=ans&lt;=n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>都满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>M</mi><mi>Q</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mi>M</mi><mi>Q</mi><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RMQ(u,L,R)=RMQ(v,L,R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">max(ans)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>;</p><p>分析：考虑判断两个序列的前缀笛卡尔树是否相等</p><p>注意，如果前缀笛卡尔树相等，则可以判断每一个栈深都相同，想想为什么？、</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="type">int</span> s1[maxn],s2[maxn];</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scan</span>(n)!=EOF)&#123;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)<span class="built_in">scan</span>(a[i]);</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)<span class="built_in">scan</span>(b[i]);</span><br><span class="line">        <span class="type">int</span> head1=<span class="number">1</span>,head2=<span class="number">1</span>,tail1=<span class="number">1</span>,tail2=<span class="number">1</span>;</span><br><span class="line">        s1[head1]=s2[head2]=inf;</span><br><span class="line">        <span class="type">int</span> maxpos=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="keyword">while</span>(head1&lt;=tail1&amp;&amp;s1[tail1]&gt;a[i])tail1--;</span><br><span class="line">            <span class="keyword">while</span>(head2&lt;=tail2&amp;&amp;s2[tail2]&gt;b[i])tail2--;</span><br><span class="line">            <span class="keyword">if</span>(tail1!=tail2)<span class="keyword">break</span>;</span><br><span class="line">            s1[++tail1]=a[i],s2[++tail2]=b[i];</span><br><span class="line">            maxpos=i;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;maxpos&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="笛卡尔树习题"><a class="markdownIt-Anchor" href="#笛卡尔树习题"></a> 笛卡尔树习题</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6305">http://acm.hdu.edu.cn/showproblem.php?pid=6305</a><br><a href="https://blog.csdn.net/zhaiqiming2010/article/details/80245872">https://blog.csdn.net/zhaiqiming2010/article/details/80245872</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树状数组</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> c[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;maxn*<span class="number">2</span>) &#123;</span><br><span class="line">        c[i] += d;</span><br><span class="line">        i += <span class="built_in">lowbit</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        ret += c[i];</span><br><span class="line">        i -= <span class="built_in">lowbit</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><h2 id="codeforces1324d-pair-of-topics"><a class="markdownIt-Anchor" href="#codeforces1324d-pair-of-topics"></a> Codeforces1324D Pair of Topics</h2><p><a href="https://codeforces.com/contest/1324/problem/D">https://codeforces.com/contest/1324/problem/D</a></p><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span>序列,求有多少对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i&lt;j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>+</mo><msub><mi>a</mi><mi>j</mi></msub><mo>&gt;</mo><msub><mi>b</mi><mi>i</mi></msub><mo>+</mo><msub><mi>b</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_i+a_j&gt;b_i+b_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8252079999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><p>解法1:按照值从大到小插入<br>代码 : <a href="https://xlorpaste.cn/2rdsp4">https://xlorpaste.cn/2rdsp4</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="type">int</span> b[maxn];</span><br><span class="line"><span class="type">int</span> c[maxn];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">    <span class="type">int</span> v, index;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Node&amp; b) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(v==b.v) &#123;</span><br><span class="line">            <span class="keyword">return</span> index &lt;b.index;<span class="comment">//注意这里!!</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v &lt; b.v;  <span class="comment">//从小到大排序 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125; node[maxn];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=n*<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">c[i]++;</span><br><span class="line">i+=i&amp;(-i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">res+=c[i];</span><br><span class="line">i-=i&amp;(-i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        node[i].v = a[i] - b[i];</span><br><span class="line">        node[i].index = i;</span><br><span class="line">        node[i + n].v = b[i] - a[i];</span><br><span class="line">        node[i + n].index = i + n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">sort</span>(node + <span class="number">1</span>, node + <span class="number">1</span> + <span class="number">2</span> * n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>*n; i &gt;=<span class="number">1</span>;i--) &#123;</span><br><span class="line">        <span class="type">int</span> id = node[i].index;</span><br><span class="line">        <span class="type">int</span> v = node[i].v;</span><br><span class="line">        <span class="keyword">if</span>(id&lt;=n) &#123;</span><br><span class="line">            <span class="built_in">add</span>(node[i].index);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(v&lt;<span class="number">0</span>)</span><br><span class="line">            ans--;</span><br><span class="line">        ans += <span class="built_in">sum</span>(id - n);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解法2:按照序列顺序从小到大</p><p>代码 : <a href="https://xlorpaste.cn/3vucur">https://xlorpaste.cn/3vucur</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> a[maxn], b[maxn], c[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;maxn*<span class="number">2</span>) &#123;</span><br><span class="line">        c[i] += d;</span><br><span class="line">        i += <span class="built_in">lowbit</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        ret += c[i];</span><br><span class="line">        i -= <span class="built_in">lowbit</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        v.<span class="built_in">push_back</span>(a[i] - b[i]);</span><br><span class="line">        v.<span class="built_in">push_back</span>(b[i] - a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x = b[i] - a[i];</span><br><span class="line">        <span class="type">int</span> y = a[i] - b[i];</span><br><span class="line">        <span class="type">int</span> id = <span class="built_in">upper_bound</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), x) - v.<span class="built_in">begin</span>() + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> id2 = <span class="built_in">upper_bound</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), y) - v.<span class="built_in">begin</span>() + <span class="number">1</span>;</span><br><span class="line">        ans += (i - <span class="number">1</span> - <span class="built_in">query</span>(id));</span><br><span class="line">        <span class="built_in">add</span>(id2, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解法3: 不需要树状数组</p><p>代码 : <a href="https://xlorpaste.cn/5oto9y">https://xlorpaste.cn/5oto9y</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="type">int</span> a[maxn],b[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">        v.<span class="built_in">push_back</span>(a[i] - b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> id = <span class="built_in">upper_bound</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), b[i] - a[i]) - v.<span class="built_in">begin</span>();</span><br><span class="line">        ans += (n  - id);</span><br><span class="line">        <span class="keyword">if</span>(a[i]-b[i]&gt;b[i]-a[i])</span><br><span class="line">            ans--;</span><br><span class="line">    &#125;</span><br><span class="line">    ans /= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树形DP</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%A0%91%E5%BD%A2DP/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%A0%91%E5%BD%A2DP/</url>
      
        <content type="html"><![CDATA[<h1 id="树形dp"><a class="markdownIt-Anchor" href="#树形dp"></a> 树形DP</h1><h2 id="tree-painting"><a class="markdownIt-Anchor" href="#tree-painting"></a> Tree painting</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scan(n) scanf(<span class="string">&quot;%lld&quot;</span>, &amp;(n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scann(n, m) scanf(<span class="string">&quot;%lld%lld&quot;</span>, &amp;(n), &amp;(m))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scannn(a, b, c) scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;(a), &amp;(b), &amp;(c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prin(n) printf(<span class="string">&quot;%lld&quot;</span>, (n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ms(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fo(i, a, b) for (int i = (a); i &lt;= (b); i++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ro(i, a, b) for (int i = (a); i &gt;= (b); i--)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span>+<span class="number">100</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;e[maxn];</span><br><span class="line"><span class="type">int</span> siz[maxn];</span><br><span class="line"><span class="type">int</span> ans,n;</span><br><span class="line"><span class="type">int</span> u,v;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getsize</span><span class="params">(<span class="type">int</span> v,<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    siz[v]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x:e[v])&#123;</span><br><span class="line">        <span class="keyword">if</span>(x==u)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">getsize</span>(x,v);</span><br><span class="line">        siz[v]+=siz[x];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> v,<span class="type">int</span> u,<span class="type">int</span> t)</span></span>&#123;</span><br><span class="line">    ans=<span class="built_in">max</span>(ans,t);</span><br><span class="line">    cout&lt;&lt;v&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;u&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;t&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x:e[v])&#123;</span><br><span class="line">        <span class="keyword">if</span>(x==u)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(x,v,t<span class="number">-2</span>*siz[x]+n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scan</span>(n);</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">scann</span>(u,v);</span><br><span class="line">        e[u].<span class="built_in">pb</span>(v);e[v].<span class="built_in">pb</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">getsize</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)t+=siz[i];</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>,t);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="cf816e-树上背包"><a class="markdownIt-Anchor" href="#cf816e-树上背包"></a> [CF816E] 树上背包</h2><p>注意最后求答案的时候一定是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[1][i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>或者是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[1][i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span><br>因为想要使用优惠券,就必须保证它们的父亲被选了,而点1就是根节点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">1e15</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">5000</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, b;</span><br><span class="line"><span class="type">int</span> c[maxn], d[maxn], x[maxn];</span><br><span class="line"><span class="type">int</span> dp[maxn][maxn][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> sz[maxn];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; G[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sz[u] = <span class="number">1</span>;</span><br><span class="line">    dp[u][<span class="number">1</span>][<span class="number">0</span>] = c[u];</span><br><span class="line">    dp[u][<span class="number">1</span>][<span class="number">1</span>] = c[u] - d[u];</span><br><span class="line">    dp[u][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:G[u])&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(v);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = sz[u]; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= sz[v];j++)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[u][i + j][<span class="number">0</span>] = <span class="built_in">min</span>(dp[u][i + j][<span class="number">0</span>], dp[u][i][<span class="number">0</span>] + dp[v][j][<span class="number">0</span>]);</span><br><span class="line">                dp[u][i + j][<span class="number">1</span>] = <span class="built_in">min</span>(dp[u][i + j][<span class="number">1</span>], dp[u][i][<span class="number">1</span>] + dp[v][j][<span class="number">0</span>]);</span><br><span class="line">                dp[u][i + j][<span class="number">1</span>] = <span class="built_in">min</span>(dp[u][i + j][<span class="number">1</span>], dp[u][i][<span class="number">1</span>] + dp[v][j][<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sz[u] += sz[v];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;n, &amp;b);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;c[<span class="number">1</span>], &amp;d[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;c[i], &amp;d[i], &amp;x[i]);</span><br><span class="line">        G[x[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n;i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= n;j++)</span><br><span class="line">            dp[i][j][<span class="number">0</span>] = dp[i][j][<span class="number">1</span>] = inf;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span>(dp[<span class="number">1</span>][j][<span class="number">0</span>]&lt;=b||dp[<span class="number">1</span>][j][<span class="number">1</span>]&lt;=b)</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, j);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="cf1324e-maximum-white-subtree"><a class="markdownIt-Anchor" href="#cf1324e-maximum-white-subtree"></a> [CF1324E] Maximum White Subtree</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[maxn], ans[maxn], d[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    d[u] = a[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v, u);</span><br><span class="line">        <span class="keyword">if</span>(d[v]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            d[u] += d[v];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    ans[u] = d[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="comment">//换根操作</span></span><br><span class="line">        d[u] -= <span class="built_in">max</span>(<span class="number">0</span>, d[v]);<span class="comment">//只有d[v]大于0时,v才可能对u有贡献</span></span><br><span class="line">        d[v] += <span class="built_in">max</span>(<span class="number">0</span>, d[u]);<span class="comment">//d[u]大于0对v才有贡献</span></span><br><span class="line">        <span class="built_in">dfs2</span>(v, u);</span><br><span class="line">        d[v] -= <span class="built_in">max</span>(<span class="number">0</span>, d[u]);</span><br><span class="line">        d[u] += <span class="built_in">max</span>(<span class="number">0</span>, d[v]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>)</span><br><span class="line">            a[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        e[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">dfs2</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[maxn];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[maxn], ans[maxn], d[maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    d[u] = a[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v, u);</span><br><span class="line">        <span class="keyword">if</span>(d[v]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            d[u] += d[v];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    ans[u] = d[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v:e[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">int</span> t = d[u];</span><br><span class="line">        <span class="keyword">if</span>(d[v]&gt;<span class="number">0</span>)</span><br><span class="line">            t -= d[v];</span><br><span class="line">        <span class="keyword">if</span>(t&gt;<span class="number">0</span>)</span><br><span class="line">            d[v] += t;</span><br><span class="line">        <span class="built_in">dfs2</span>(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>)</span><br><span class="line">            a[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        e[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">dfs2</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bitset</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/bitset/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/bitset/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">bitset&lt;5&gt; b, a;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl; <span class="comment">//00000</span></span><br><span class="line"></span><br><span class="line">    b.<span class="built_in">set</span>(<span class="number">2</span>);</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;<span class="comment">//00100</span></span><br><span class="line"></span><br><span class="line">    a.<span class="built_in">set</span>(<span class="number">3</span>);</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;<span class="comment">//01000</span></span><br><span class="line"></span><br><span class="line">    b ^= a;<span class="comment">//(00100)^(01000)</span></span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;<span class="comment">//01100</span></span><br><span class="line"></span><br><span class="line">    b.<span class="built_in">reset</span>(<span class="number">3</span>);<span class="comment">//00100</span></span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    b.<span class="built_in">flip</span>();<span class="comment">//11011</span></span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>KMP</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/kmp/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/kmp/</url>
      
        <content type="html"><![CDATA[<h1 id="prefix-function-前缀函数"><a class="markdownIt-Anchor" href="#prefix-function-前缀函数"></a> prefix function 前缀函数</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">prefix_function</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">pi</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> j = pi[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">while</span>(j&gt;<span class="number">0</span>&amp;&amp;t[i]!=t[j])j = pi[j - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(t[i]==t[j])j++;</span><br><span class="line">        pi[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pi;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><h2 id="cf204e"><a class="markdownIt-Anchor" href="#cf204e"></a> [CF204E]</h2><p>题意</p><blockquote><p>给定一主串,再查询某字符串是否可以由主串的两个子串拼接而成.<br>思路<br>正反向各kmp一次<br>记录查询的字符串的前缀和后缀在主串中的位置</p></blockquote><p>代码:先空着,之前的代码写的不太对</p><h3 id="ccpc秦皇岛"><a class="markdownIt-Anchor" href="#ccpc秦皇岛"></a> [CCPC秦皇岛]</h3><p>题意</p><blockquote><p>跟找循环节有关<br>思路<br>正&amp;&amp;反<br>代码 : <a href="http://xlorpaste.cn/kwgp23">http://xlorpaste.cn/kwgp23</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>最小生成树</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%A0%91/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<h1 id="模板"><a class="markdownIt-Anchor" href="#模板"></a> 模板</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">6000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> fa[maxn],sz[maxn];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> x, y, w;</span><br><span class="line">&#125; e[maxn];</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &lt; (node a,node b) &#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x == fa[x] ? x : <span class="built_in">find</span>(fa[x]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        fa[i] = i;</span><br><span class="line">        sz[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">        <span class="built_in">init</span>(n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;e[i].x, &amp;e[i].y, &amp;e[i].w);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(e + <span class="number">1</span>, e + <span class="number">1</span> + n - <span class="number">1</span>);</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>;i++) &#123;</span><br><span class="line">            <span class="type">int</span> x = <span class="built_in">find</span>(e[i].x);</span><br><span class="line">            <span class="type">int</span> y = <span class="built_in">find</span>(e[i].y);</span><br><span class="line">            <span class="type">int</span> w = e[i].w;</span><br><span class="line">            <span class="keyword">if</span>(x==y)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            ans += (w + <span class="number">1</span>) * (sz[x] * sz[y] - <span class="number">1</span>);</span><br><span class="line">            fa[x] = y;</span><br><span class="line">            sz[y] += sz[x];</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="prim"><a class="markdownIt-Anchor" href="#prim"></a> Prim</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxe = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> v,w,next;</span><br><span class="line">&#125;e[maxe&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> head[<span class="number">5020</span>],dis[<span class="number">5020</span>],n,m,now,cnt,ans;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">5020</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v,<span class="type">int</span> w)</span></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    e[cnt].v=v;</span><br><span class="line">    e[cnt].w=w;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="type">int</span> u, v, w;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        <span class="built_in">add</span>(u,v,w),<span class="built_in">add</span>(v,u,w);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">prim</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dis,inf,<span class="built_in">sizeof</span>(dis));</span><br><span class="line">    dis[a] = <span class="number">0</span>;</span><br><span class="line">    now = a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = head[a]; i; i = e[i].next)</span><br><span class="line">        dis[e[i].v] = <span class="built_in">min</span>(dis[e[i].v], e[i].w);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> cnt = <span class="number">1</span>; cnt &lt;= n - <span class="number">1</span>;cnt++)&#123;</span><br><span class="line">        <span class="type">int</span> minn = inf;</span><br><span class="line">        vis[now] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (!vis[i] &amp;&amp; minn &gt; dis[i])&#123;</span><br><span class="line">            minn = dis[i];</span><br><span class="line">            now = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += minn;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = head[now]; i; i = e[i].next)&#123;</span><br><span class="line">            <span class="keyword">if</span> (!vis[e[i].v])</span><br><span class="line">                dis[e[i].v] = <span class="built_in">min</span>(dis[e[i].v], e[i].w);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">prim</span>(<span class="number">1</span>));</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="kruskal"><a class="markdownIt-Anchor" href="#kruskal"></a> Kruskal</h2><p>贪心策略：n个节点的最小生成树里面包含了n-1条边，这n-1条边是不可以成环的，这样就可以保证联通了，所以我们只要把这n-1条边选出来，因为是最小生成树，所以我们要找最小的权边</p><p>所以基本的思路就定了：</p><ul><li>存边</li><li>按照权值将这些边排序</li><li>排序完了开始遍历，决定把谁加入MST</li><li>判断的条件是：是否成环，成环的话就不要，不成环的话就加入MST</li><li>接下来要解决的问题就是怎么判断成环-&gt;利用并查集，共祖-&gt;成环</li><li>共祖在某种意义上就等于联通</li><li>所以有一个查的过程和并的过程</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5020</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> F = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> u, v, c;</span><br><span class="line">&#125; e[F];</span><br><span class="line"><span class="type">int</span> f[N],cnt,sum;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x] == x ? x : f[x] = <span class="built_in">find</span>(f[x]);&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">unionset</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    a = <span class="built_in">find</span>(a),b = <span class="built_in">find</span>(b);</span><br><span class="line">    <span class="keyword">if</span>(a!=b)&#123;</span><br><span class="line">        f[b] = a;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.c &lt; b.c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;e[i].u, &amp;e[i].v, &amp;e[i].c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(e + <span class="number">1</span>, e + <span class="number">1</span> + m, cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++)</span><br><span class="line">        f[i] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">unionset</span>(e[i].u,e[i].v))&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            sum += e[i].c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt==n<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><h2 id="走廊泼水节"><a class="markdownIt-Anchor" href="#走廊泼水节"></a> 走廊泼水节</h2><p><a href="https://ac.nowcoder.com/acm/contest/1056/A">https://ac.nowcoder.com/acm/contest/1056/A</a><br>题意</p><blockquote><p>将一棵树加不同权值的边,变成一个完全图,问加的权值和最小为多少?<br>思路<br>推论:对于两棵树,要在两棵树之间选择一条边,仍然是最小生成树,必然是选择两棵树之间权值最小的边<br>考虑Kruskal的建树方式<br>本题从也从最短的边开始计算<br>代码 : <a href="https://xlorpaste.cn/tjw8rk">https://xlorpaste.cn/tjw8rk</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ordered_set</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/ordered_set/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/ordered_set/</url>
      
        <content type="html"><![CDATA[<p>可以在set中找到小于某个数的元素的个数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ext/pb_ds/assoc_container.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ext/pb_ds/tree_policy.hpp&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">using</span> ordered_set = tree&lt;T, null_type, less&lt;T&gt;, rb_tree_tag, tree_order_statistics_node_update&gt;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ordered_set&lt;<span class="type">int</span>&gt;  s;</span><br><span class="line">s.<span class="built_in">insert</span>(<span class="number">1</span>);</span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="number">2</span>);</span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="number">3</span>);</span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="number">4</span>);</span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">order_of_key</span>(<span class="number">1</span>) &lt;&lt; endl; <span class="comment">// the number of elements in the s less than 1</span></span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">order_of_key</span>(<span class="number">2</span>) &lt;&lt; endl; <span class="comment">// the number of elements in the s less than 2</span></span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">order_of_key</span>(<span class="number">3</span>) &lt;&lt; endl; <span class="comment">// the number of elements in the s less than 3</span></span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">order_of_key</span>(<span class="number">4</span>) &lt;&lt; endl; <span class="comment">// the number of elements in the s less than 4</span></span><br><span class="line">cout &lt;&lt; *s.<span class="built_in">find_by_order</span>(<span class="number">0</span>) &lt;&lt; endl; <span class="comment">// print the 0-th smallest number in s(0-based)</span></span><br><span class="line">    <span class="keyword">auto</span> it = s.<span class="built_in">find_by_order</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; *it &lt;&lt; endl;<span class="comment">//3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于unique_ptr的实验</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/unique_ptr/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/unique_ptr/</url>
      
        <content type="html"><![CDATA[<h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::unique_ptr&lt;<span class="type">int</span>&gt; up,up1;</span><br><span class="line">    up = std::<span class="built_in">unique_ptr</span>&lt;<span class="type">int</span>&gt;(<span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">20</span>));</span><br><span class="line">    up1 = std::<span class="built_in">unique_ptr</span>&lt;<span class="type">int</span>&gt;(std::<span class="built_in">move</span>(up));</span><br><span class="line"></span><br><span class="line">    std::cout&lt;&lt;*up1&lt;&lt;std::endl; <span class="comment">//结果：20</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>以上代码如果输出<code>std::cout&lt;&lt;up&lt;&lt;std::endl</code> 会报段错误</p><p>unique_ptr指针指向的内存只可以被该指针访问</p>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>子集枚举(SOS)</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/%E5%AD%90%E9%9B%86%E6%9E%9A%E4%B8%BE/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%AF%AD%E8%A8%80/%E5%AD%90%E9%9B%86%E6%9E%9A%E4%B8%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//iterative version</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> mask = <span class="number">0</span>; mask &lt; (<span class="number">1</span>&lt;&lt;N); ++mask) &#123;</span><br><span class="line">dp[mask][<span class="number">-1</span>] = A[mask];</span><br><span class="line">    <span class="comment">//handle base case separately (leaf states)</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; N; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(mask &amp; (<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">dp[mask][i] = dp[mask][i<span class="number">-1</span>] + dp[mask^(<span class="number">1</span>&lt;&lt;i)][i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">dp[mask][i] = dp[mask][i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">F[mask] = dp[mask][N<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//memory optimized, super easy to code.</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i&lt;(<span class="number">1</span>&lt;&lt;N); ++i)</span><br><span class="line">F[i] = A[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; N; ++i) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> mask = <span class="number">0</span>; mask &lt; (<span class="number">1</span>&lt;&lt;N); ++mask)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mask &amp; (<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">            F[mask] += F[mask^(<span class="number">1</span>&lt;&lt;i)];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p><img src="https://espresso.codeforces.com/f0d65bfdaa1ce50dce444c7dac062cb04cd76cee.png" alt></p><p>S(mask,i) 表示第0位到第i位不同的子集</p><p>时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><msup><mn>2</mn><mi>N</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N2^N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><h1 id="tutorial"><a class="markdownIt-Anchor" href="#tutorial"></a> tutorial</h1><p><a href="https://codeforces.com/blog/entry/45223">https://codeforces.com/blog/entry/45223</a><br><a href="https://blog.csdn.net/weixin_38686780/article/details/100109753">https://blog.csdn.net/weixin_38686780/article/details/100109753</a></p><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><ul><li><p><a href="https://www.hackerearth.com/problem/algorithm/special-pairs-7/?utm_source=header&amp;utm_medium=search&amp;utm_campaign=he-search">Special Pairs</a></p></li><li><blockquote><p><a href="https://blog.csdn.net/tianyizhicheng/article/details/100392870">https://blog.csdn.net/tianyizhicheng/article/details/100392870</a><br><a href="https://blog.csdn.net/noone0/article/details/78290029">https://blog.csdn.net/noone0/article/details/78290029</a></p></blockquote></li><li><p><a href="https://codeforces.com/contest/165/problem/E">Compatible Numbers</a></p></li><li><p><a href="https://codeforces.com/contest/383/problem/E">Vowels</a></p></li><li><p><a href="https://www.codechef.com/problems/COVERING">Covering Sets</a></p></li><li><p><a href="http://hsin.hr/coci/archive/2011_2012/contest6_tasks.pdf">COCI 2011/2012 Problem KOSARE</a></p></li><li><p><a href="https://www.hackerrank.com/contests/w16/challenges/vim-war">Vim War</a></p></li><li><p><a href="https://codeforces.com/problemset/problem/449/D">Jzzhu and Numbers</a></p></li><li><p><a href="https://www.hackerrank.com/contests/countercode/challenges/subset">Subset</a></p></li><li><p><a href="https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=635&amp;page=show_problem&amp;problem=4997">Jersey Number</a></p></li><li><p><a href="https://www.codechef.com/SNFL16MR/problems/BEAUTY">Beautiful Sandwich</a></p></li><li><p><a href="https://codeforces.com/group/qcIqFPYhVr/contest/203881/problem/K">Pepsi Cola</a>(resembles above <em>discussion problem</em>). Need to join <a href="https://codeforces.com/group/qcIqFPYhVr/join">this</a> group.</p></li><li><p><a href="https://www.hackerearth.com/problem/algorithm/uchiha-brothers-and-two-products-circuit/">Uchiha and Two Products</a>(resembles above <em>discussion problem</em>)</p></li><li><p><a href="https://www.codechef.com/IPC15P2B/problems/STR_FUNC">Strange Functions</a>(Same as above <em>discussion problem</em>)</p></li><li><p><a href="https://codeforces.com/contest/800/problem/D">Varying Kibibits</a><br><strong>EDIT</strong>: Practice problems are now arranged in almost increasing order of difficulty.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
